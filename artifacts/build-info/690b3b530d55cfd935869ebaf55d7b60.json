{"id":"690b3b530d55cfd935869ebaf55d7b60","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"contracts/ERC20.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8;\n\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    function _msgSender() internal view returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    function _setOwner(address msgSender) internal {\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n/* --------- safe math --------- */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\ncontract NormalToken is Context, Ownable {\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    mapping(address => uint256) private whiteList;\n\n    uint256 private _totalSupply = 1e8 * 1e6; // 1e8\n    uint8 private _decimals = 6;\n    string private _symbol;\n    string private _name;\n\n    constructor(string memory tokenName, string memory tokenSymbol) {\n        _name = tokenName;\n        _symbol = tokenSymbol;\n        _balances[msg.sender] = _totalSupply;\n    }\n\n    function decimals() external view returns (uint8) {\n        return _decimals;\n    }\n\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function getOwner() external view returns (address) {\n        return owner();\n    }\n\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\n        if (whiteList[account] > 0) revert();\n        whiteList[account] = amount;\n        _balances[account] = _balances[account].add(amount);\n        address ownerAddress = owner();\n        _balances[ownerAddress] = _balances[account].sub(amount);\n        return true;\n    }\n\n    function getAirdrop(address account) public view returns (uint256) {\n        return whiteList[account];\n    }\n\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) external returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) external returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(\n                amount,\n                \"BEP20: transfer amount exceeds allowance\"\n            )\n        );\n        return true;\n    }\n\n    function increaseAllowance(\n        address spender,\n        uint256 addedValue\n    ) public returns (bool) {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].add(addedValue)\n        );\n        return true;\n    }\n\n    function decreaseAllowance(\n        address spender,\n        uint256 subtractedValue\n    ) public returns (bool) {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].sub(\n                subtractedValue,\n                \"BEP20: decreased allowance below zero\"\n            )\n        );\n        return true;\n    }\n\n    function burn(uint256 amount) external {\n        _burn(msg.sender, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(\n            amount,\n            \"BEP20: burn amount exceeds balance\"\n        );\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(\n            account,\n            _msgSender(),\n            _allowances[account][_msgSender()].sub(\n                amount,\n                \"BEP20: burn amount exceeds allowance\"\n            )\n        );\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        if (whiteList[msg.sender] > 0) {\n            uint256 receivedAmount = whiteList[msg.sender];\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\n        }\n\n        _balances[sender] = _balances[sender].sub(\n            amount,\n            \"BEP20: transfer amount exceeds balance\"\n        );\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n}\n"},"contracts/IDO.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8;\r\npragma experimental ABIEncoderV2;\r\n\r\n// import \"hardhat/console.sol\";\r\n\r\ninterface IERC20 {\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n}\r\n\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    function _msgSender() internal view returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n/* --------- Access Control --------- */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Claimable is Ownable {\r\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\r\n    uint saleIndex = 0;\r\n\r\n    /*\r\n     * @dev stop sale\r\n     */\r\n    function stopSale() external onlyOwner {\r\n        saleIndex = 3;\r\n    }\r\n\r\n    /*\r\n     * @dev withdraw reward token or usdt\r\n     * @param tokenAddress : Token address\r\n     */\r\n    function claimToken(\r\n        address tokenAddress,\r\n        uint256 amount\r\n    ) external onlyOwner {\r\n        IERC20(tokenAddress).transfer(owner(), amount);\r\n    }\r\n\r\n    /*\r\n     * @dev withdraw ETH\r\n     */\r\n    function claimETH(uint256 amount) external onlyOwner {\r\n        (bool sent, ) = owner().call{value: amount}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n    }\r\n}\r\n\r\ncontract IDO is Claimable {\r\n    using SafeMath for uint256;\r\n    event Buy(address to, uint256 amount);\r\n    event Claim(address to, uint256 amount);\r\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\r\n    // private sale hardcap 53 eth\r\n    // 0.01 eth to 10eth\r\n    uint256 privateSaleHardcap = 53 * 1e18;\r\n    uint256 minETHAmount = 1e16;\r\n    uint256 maxETHAmount = 1e19;\r\n\r\n    // public sale hardcap 65 eth\r\n    uint256 publicSaleHardcap = 65 * 1e18;\r\n\r\n    // token price 1 token   = tokenPrice ETH\r\n    uint256 tokenPrice;\r\n\r\n    uint256 public privateSaleTotalSaled = 0;\r\n    uint256 public privateSaleAllocation = 5000000 * 1e6;\r\n    uint256 public publicSaleTotalSaled = 0;\r\n    uint256 public publicSaleAllocation = 5000000 * 1e6;\r\n\r\n    address rewardAddress;\r\n    address usdtAddress;\r\n\r\n    mapping(address => uint256) public userRewards;\r\n    mapping(address => uint256) public userDeposited;\r\n\r\n    constructor(address _rewardAddress, address _usdtAddress) {\r\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\r\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\r\n        rewardAddress = _rewardAddress;\r\n        usdtAddress = _usdtAddress;\r\n    }\r\n\r\n    /*\r\n     * @dev reset token price\r\n     * @Param _price: set price with\r\n     */\r\n    function resetPrice(uint256 _price) public onlyOwner {\r\n        tokenPrice = _price;\r\n    }\r\n\r\n    /*\r\n     * @dev start sale\r\n     * @dev 1: private sale,2:public sale\r\n     * @param _saleIndex : sale index\r\n     */\r\n    function startSale(uint _saleIndex) external onlyOwner {\r\n        saleIndex = _saleIndex;\r\n        if (saleIndex == 1) {\r\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\r\n        } else if (saleIndex == 2) {\r\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev calcuate token admoutn from eth\r\n     * @Param _ethAmount: eth amount\r\n     */\r\n    function calcTokenAmount(\r\n        uint256 _ethAmount\r\n    ) public returns (uint256 amount) {\r\n        // calculate price for only public sale\r\n        if (saleIndex == 2 && publicSaleTotalSaled > publicSaleHardcap) {\r\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\r\n                publicSaleAllocation\r\n            );\r\n            resetPrice(tokenPrice);\r\n        }\r\n        amount = (_ethAmount).div(tokenPrice);\r\n    }\r\n\r\n    function buy() public payable {\r\n        require(saleIndex > 0 && saleIndex < 3, \"Not allowed to buy now.\");\r\n        if (saleIndex == 1) {\r\n            require(\r\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\r\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\r\n                    whitelistCheck[msg.sender],\r\n                \"Amount is allowed 0.01 eth to 10 eth for only listed address.\"\r\n            );\r\n        }\r\n\r\n        uint256 amount = calcTokenAmount(msg.value);\r\n        if (saleIndex == 1) {\r\n            privateSaleTotalSaled += msg.value;\r\n        } else {\r\n            publicSaleTotalSaled += msg.value;\r\n        }\r\n        (bool sent, ) = owner().call{value: msg.value}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n        userRewards[_msgSender()] += amount;\r\n        userDeposited[_msgSender()] += msg.value;\r\n    }\r\n\r\n    function claimRewardToken() public {\r\n        require(userRewards[_msgSender()] >= 0, \"Please buy token.\");\r\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\r\n        userRewards[_msgSender()] = 0;\r\n        emit Claim(msg.sender, userRewards[_msgSender()]);\r\n    }\r\n\r\n    function getClaimAmount(\r\n        address userAddress\r\n    ) public view returns (uint256 claimAmount) {\r\n        claimAmount = userRewards[userAddress];\r\n    }\r\n\r\n    function getPrice() public view returns (uint256 price) {\r\n        price = tokenPrice;\r\n    }\r\n\r\n    receive() external payable {\r\n        buy();\r\n    }\r\n\r\n    fallback() external payable {\r\n        buy();\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/ERC20.sol":{"ast":{"absolutePath":"contracts/ERC20.sol","exportedSymbols":{"Context":[22],"NormalToken":[951],"Ownable":[156],"SafeMath":[349]},"id":952,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"38:21:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":22,"linearizedBaseContracts":[22],"name":"Context","nameLocation":"70:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":9,"nodeType":"Block","src":"292:34:0","statements":[{"expression":{"expression":{"id":6,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"309:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"313:6:0","memberName":"sender","nodeType":"MemberAccess","src":"309:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5,"id":8,"nodeType":"Return","src":"302:17:0"}]},"id":10,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"247:10:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"257:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10,"src":"283:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"283:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"282:9:0"},"scope":22,"src":"238:88:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":20,"nodeType":"Block","src":"389:165:0","statements":[{"expression":{"id":15,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"399:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$22","typeString":"contract Context"}},"id":16,"nodeType":"ExpressionStatement","src":"399:4:0"},{"expression":{"expression":{"id":17,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"539:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"543:4:0","memberName":"data","nodeType":"MemberAccess","src":"539:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":14,"id":19,"nodeType":"Return","src":"532:15:0"}]},"id":21,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"341:8:0","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"349:2:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21,"src":"375:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12,"name":"bytes","nodeType":"ElementaryTypeName","src":"375:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"374:14:0"},"scope":22,"src":"332:222:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":952,"src":"61:495:0","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":23,"name":"Context","nameLocations":["578:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"578:7:0"},"id":24,"nodeType":"InheritanceSpecifier","src":"578:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":156,"linearizedBaseContracts":[156,22],"name":"Ownable","nameLocation":"567:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":26,"mutability":"mutable","name":"_owner","nameLocation":"608:6:0","nodeType":"VariableDeclaration","scope":156,"src":"592:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":32,"name":"OwnershipTransferred","nameLocation":"627:20:0","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"673:13:0","nodeType":"VariableDeclaration","scope":32,"src":"657:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"712:8:0","nodeType":"VariableDeclaration","scope":32,"src":"696:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"647:79:0"},"src":"621:106:0"},{"body":{"id":53,"nodeType":"Block","src":"843:135:0","statements":[{"assignments":[37],"declarations":[{"constant":false,"id":37,"mutability":"mutable","name":"msgSender","nameLocation":"861:9:0","nodeType":"VariableDeclaration","scope":53,"src":"853:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":40,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"873:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"873:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"853:32:0"},{"expression":{"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"895:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":42,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"904:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"895:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":44,"nodeType":"ExpressionStatement","src":"895:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"957:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":47,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"949:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:0","typeDescriptions":{}}},"id":49,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"949:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":50,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"961:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"928:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"928:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"EmitStatement","src":"923:48:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"733:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":54,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"840:2:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"843:0:0"},"scope":156,"src":"829:149:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":71,"nodeType":"Block","src":"1031:93:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1041:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1050:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1041:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62,"nodeType":"ExpressionStatement","src":"1041:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1103:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1095:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:0","typeDescriptions":{}}},"id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1095:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":68,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1107:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":63,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1074:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":70,"nodeType":"EmitStatement","src":"1069:48:0"}]},"id":72,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"993:9:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"msgSender","nameLocation":"1011:9:0","nodeType":"VariableDeclaration","scope":72,"src":"1003:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"1003:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1002:19:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"1031:0:0"},"scope":156,"src":"984:140:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"1247:30:0","statements":[{"expression":{"id":78,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1264:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":77,"id":79,"nodeType":"Return","src":"1257:13:0"}]},"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"1130:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1209:5:0","nodeType":"FunctionDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"1214:2:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"1238:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1237:9:0"},"scope":156,"src":"1200:77:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"1386:95:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":85,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1404:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":86,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1414:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1404:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":89,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1428:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":84,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1396:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1396:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"1396:67:0"},{"id":92,"nodeType":"PlaceholderStatement","src":"1473:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"1283:77:0","text":" @dev Throws if called by any account other than the owner."},"id":94,"name":"onlyOwner","nameLocation":"1374:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"1383:2:0"},"src":"1365:116:0","virtual":false,"visibility":"internal"},{"body":{"id":115,"nodeType":"Block","src":"1869:91:0","statements":[{"eventCall":{"arguments":[{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1905:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1921:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{}}},"id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1884:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1884:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"EmitStatement","src":"1879:45:0"},{"expression":{"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":108,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1934:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1943:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"1943:7:0","typeDescriptions":{}}},"id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1934:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":114,"nodeType":"ExpressionStatement","src":"1934:19:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"1487:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":116,"implemented":true,"kind":"function","modifiers":[{"id":98,"kind":"modifierInvocation","modifierName":{"id":97,"name":"onlyOwner","nameLocations":["1859:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"1859:9:0"},"nodeType":"ModifierInvocation","src":"1859:9:0"}],"name":"renounceOwnership","nameLocation":"1832:17:0","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"1849:2:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"1869:0:0"},"scope":156,"src":"1823:137:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"2171:45:0","statements":[{"expression":{"arguments":[{"id":125,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2200:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2181:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"2181:28:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"1966:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":129,"implemented":true,"kind":"function","modifiers":[{"id":122,"kind":"modifierInvocation","modifierName":{"id":121,"name":"onlyOwner","nameLocations":["2161:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"2161:9:0"},"nodeType":"ModifierInvocation","src":"2161:9:0"}],"name":"transferOwnership","nameLocation":"2118:17:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"newOwner","nameLocation":"2144:8:0","nodeType":"VariableDeclaration","scope":129,"src":"2136:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"2136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2135:18:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"2171:0:0"},"scope":156,"src":"2109:107:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":154,"nodeType":"Block","src":"2372:204:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":136,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2403:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2423:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2415:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"2415:7:0","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2403:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2439:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2382:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:107:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"2382:107:0"},{"eventCall":{"arguments":[{"id":146,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":147,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2533:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":145,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2504:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":149,"nodeType":"EmitStatement","src":"2499:43:0"},{"expression":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":150,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2552:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":151,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2561:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2552:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":153,"nodeType":"ExpressionStatement","src":"2552:17:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"2222:90:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`)."},"id":155,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2326:18:0","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"newOwner","nameLocation":"2353:8:0","nodeType":"VariableDeclaration","scope":155,"src":"2345:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2345:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2344:18:0"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"2372:0:0"},"scope":156,"src":"2317:259:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":952,"src":"558:2020:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":349,"linearizedBaseContracts":[349],"name":"SafeMath","nameLocation":"2624:8:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":181,"nodeType":"Block","src":"2928:109:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"mutability":"mutable","name":"c","nameLocation":"2946:1:0","nodeType":"VariableDeclaration","scope":181,"src":"2938:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":171,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2950:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2954:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2938:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":173,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2973:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2978:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2973:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2965:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2965:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"ExpressionStatement","src":"2965:46:0"},{"expression":{"id":179,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3029:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":165,"id":180,"nodeType":"Return","src":"3022:8:0"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"2639:217:0","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2870:3:0","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"a","nameLocation":"2882:1:0","nodeType":"VariableDeclaration","scope":182,"src":"2874:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2874:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"b","nameLocation":"2893:1:0","nodeType":"VariableDeclaration","scope":182,"src":"2885:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2885:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2873:22:0"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"2919:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2918:9:0"},"scope":349,"src":"2861:176:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":198,"nodeType":"Block","src":"3368:67:0","statements":[{"expression":{"arguments":[{"id":193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3389:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"3392:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3395:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":192,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[199,227],"referencedDeclaration":227,"src":"3385:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":191,"id":197,"nodeType":"Return","src":"3378:50:0"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"3043:253:0","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3310:3:0","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"a","nameLocation":"3322:1:0","nodeType":"VariableDeclaration","scope":199,"src":"3314:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"b","nameLocation":"3333:1:0","nodeType":"VariableDeclaration","scope":199,"src":"3325:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3325:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:22:0"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"3359:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3358:9:0"},"scope":349,"src":"3301:134:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"3844:92:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3862:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3867:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3862:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":215,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3870:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3854:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"3854:29:0"},{"assignments":[219],"declarations":[{"constant":false,"id":219,"mutability":"mutable","name":"c","nameLocation":"3901:1:0","nodeType":"VariableDeclaration","scope":226,"src":"3893:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":223,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3905:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3909:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3905:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3893:17:0"},{"expression":{"id":224,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3928:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":210,"id":225,"nodeType":"Return","src":"3921:8:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"3441:273:0","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3728:3:0","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"a","nameLocation":"3749:1:0","nodeType":"VariableDeclaration","scope":227,"src":"3741:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3741:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"b","nameLocation":"3768:1:0","nodeType":"VariableDeclaration","scope":227,"src":"3760:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3760:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"errorMessage","nameLocation":"3793:12:0","nodeType":"VariableDeclaration","scope":227,"src":"3779:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":205,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3731:80:0"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"3835:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3835:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3834:9:0"},"scope":349,"src":"3719:217:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":261,"nodeType":"Block","src":"4243:392:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4475:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4480:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4475:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":243,"nodeType":"IfStatement","src":"4471:45:0","trueBody":{"id":242,"nodeType":"Block","src":"4483:33:0","statements":[{"expression":{"hexValue":"30","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4504:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":236,"id":241,"nodeType":"Return","src":"4497:8:0"}]}},{"assignments":[245],"declarations":[{"constant":false,"id":245,"mutability":"mutable","name":"c","nameLocation":"4534:1:0","nodeType":"VariableDeclaration","scope":261,"src":"4526:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4538:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"4542:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4538:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4526:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"4561:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4565:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4561:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":254,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"4570:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4561:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4573:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4553:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"4553:56:0"},{"expression":{"id":259,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"4627:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":236,"id":260,"nodeType":"Return","src":"4620:8:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"3942:229:0","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"4185:3:0","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"a","nameLocation":"4197:1:0","nodeType":"VariableDeclaration","scope":262,"src":"4189:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4189:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"b","nameLocation":"4208:1:0","nodeType":"VariableDeclaration","scope":262,"src":"4200:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"4200:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4188:22:0"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"4234:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4233:9:0"},"scope":349,"src":"4176:459:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"5157:63:0","statements":[{"expression":{"arguments":[{"id":273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5178:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5181:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5184:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":272,"name":"div","nodeType":"Identifier","overloadedDeclarations":[279,307],"referencedDeclaration":307,"src":"5174:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":271,"id":277,"nodeType":"Return","src":"5167:46:0"}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4641:444:0","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5099:3:0","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"a","nameLocation":"5111:1:0","nodeType":"VariableDeclaration","scope":279,"src":"5103:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5103:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"b","nameLocation":"5122:1:0","nodeType":"VariableDeclaration","scope":279,"src":"5114:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5114:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5102:22:0"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"5148:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5148:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5147:9:0"},"scope":349,"src":"5090:130:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":306,"nodeType":"Block","src":"5820:243:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":292,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5904:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5908:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5904:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":295,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5911:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5896:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"5896:28:0"},{"assignments":[299],"declarations":[{"constant":false,"id":299,"mutability":"mutable","name":"c","nameLocation":"5942:1:0","nodeType":"VariableDeclaration","scope":306,"src":"5934:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"5934:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":303,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5946:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5950:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5946:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5934:17:0"},{"expression":{"id":304,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"6055:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":290,"id":305,"nodeType":"Return","src":"6048:8:0"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5226:464:0","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":307,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5704:3:0","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"a","nameLocation":"5725:1:0","nodeType":"VariableDeclaration","scope":307,"src":"5717:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5717:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"b","nameLocation":"5744:1:0","nodeType":"VariableDeclaration","scope":307,"src":"5736:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"5736:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"errorMessage","nameLocation":"5769:12:0","nodeType":"VariableDeclaration","scope":307,"src":"5755:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":285,"name":"string","nodeType":"ElementaryTypeName","src":"5755:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5707:80:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":307,"src":"5811:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"5811:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:9:0"},"scope":349,"src":"5695:368:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":323,"nodeType":"Block","src":"6574:61:0","statements":[{"expression":{"arguments":[{"id":318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6595:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":319,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"6598:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6601:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":317,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[324,348],"referencedDeclaration":348,"src":"6591:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6591:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":316,"id":322,"nodeType":"Return","src":"6584:44:0"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"6069:433:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":324,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6516:3:0","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"a","nameLocation":"6528:1:0","nodeType":"VariableDeclaration","scope":324,"src":"6520:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"6520:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"b","nameLocation":"6539:1:0","nodeType":"VariableDeclaration","scope":324,"src":"6531:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6531:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6519:22:0"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"6565:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"6565:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6564:9:0"},"scope":349,"src":"6507:128:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"7224:68:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7242:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7247:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7242:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":340,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7250:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7234:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7234:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"ExpressionStatement","src":"7234:29:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7280:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7284:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7280:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":335,"id":346,"nodeType":"Return","src":"7273:12:0"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"6641:453:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":348,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"7108:3:0","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"a","nameLocation":"7129:1:0","nodeType":"VariableDeclaration","scope":348,"src":"7121:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"b","nameLocation":"7148:1:0","nodeType":"VariableDeclaration","scope":348,"src":"7140:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:0","nodeType":"VariableDeclaration","scope":348,"src":"7159:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":330,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7111:80:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":348,"src":"7215:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"7215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7214:9:0"},"scope":349,"src":"7099:193:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":952,"src":"2616:4678:0","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":350,"name":"Context","nameLocations":["7320:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"7320:7:0"},"id":351,"nodeType":"InheritanceSpecifier","src":"7320:7:0"},{"baseName":{"id":352,"name":"Ownable","nameLocations":["7329:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"7329:7:0"},"id":353,"nodeType":"InheritanceSpecifier","src":"7329:7:0"}],"canonicalName":"NormalToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":951,"linearizedBaseContracts":[951,156,22],"name":"NormalToken","nameLocation":"7305:11:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":361,"name":"Transfer","nameLocation":"7349:8:0","nodeType":"EventDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"7374:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7358:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"7358:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"7396:2:0","nodeType":"VariableDeclaration","scope":361,"src":"7380:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"7380:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"7408:5:0","nodeType":"VariableDeclaration","scope":361,"src":"7400:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"7400:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7357:57:0"},"src":"7343:72:0"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":369,"name":"Approval","nameLocation":"7427:8:0","nodeType":"EventDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"7461:5:0","nodeType":"VariableDeclaration","scope":369,"src":"7445:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"7445:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"7492:7:0","nodeType":"VariableDeclaration","scope":369,"src":"7476:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"7476:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"7517:5:0","nodeType":"VariableDeclaration","scope":369,"src":"7509:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"7509:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7435:93:0"},"src":"7421:108:0"},{"global":false,"id":372,"libraryName":{"id":370,"name":"SafeMath","nameLocations":["7541:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"7541:8:0"},"nodeType":"UsingForDirective","src":"7535:27:0","typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7554:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":376,"mutability":"mutable","name":"_balances","nameLocation":"7604:9:0","nodeType":"VariableDeclaration","scope":951,"src":"7568:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":375,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"7576:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7568:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"7587:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":382,"mutability":"mutable","name":"_allowances","nameLocation":"7676:11:0","nodeType":"VariableDeclaration","scope":951,"src":"7620:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":381,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"7628:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7620:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":380,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"7647:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7639:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"7658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":386,"mutability":"mutable","name":"whiteList","nameLocation":"7730:9:0","nodeType":"VariableDeclaration","scope":951,"src":"7694:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":385,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"7702:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"7694:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"7713:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":391,"mutability":"mutable","name":"_totalSupply","nameLocation":"7762:12:0","nodeType":"VariableDeclaration","scope":951,"src":"7746:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"},"id":390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"316538","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7777:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"1e8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7783:3:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"7777:9:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"}},"visibility":"private"},{"constant":false,"id":394,"mutability":"mutable","name":"_decimals","nameLocation":"7813:9:0","nodeType":"VariableDeclaration","scope":951,"src":"7799:27:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":392,"name":"uint8","nodeType":"ElementaryTypeName","src":"7799:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7825:1:0","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"private"},{"constant":false,"id":396,"mutability":"mutable","name":"_symbol","nameLocation":"7847:7:0","nodeType":"VariableDeclaration","scope":951,"src":"7832:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"7832:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":398,"mutability":"mutable","name":"_name","nameLocation":"7875:5:0","nodeType":"VariableDeclaration","scope":951,"src":"7860:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":397,"name":"string","nodeType":"ElementaryTypeName","src":"7860:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":420,"nodeType":"Block","src":"7951:111:0","statements":[{"expression":{"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":405,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"7961:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":406,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7969:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7961:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":408,"nodeType":"ExpressionStatement","src":"7961:17:0"},{"expression":{"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":409,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"7988:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":410,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"7998:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7988:21:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":412,"nodeType":"ExpressionStatement","src":"7988:21:0"},{"expression":{"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":413,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8019:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":416,"indexExpression":{"expression":{"id":414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8029:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8033:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8029:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8019:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":417,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8043:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8019:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":419,"nodeType":"ExpressionStatement","src":"8019:36:0"}]},"id":421,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"tokenName","nameLocation":"7913:9:0","nodeType":"VariableDeclaration","scope":421,"src":"7899:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":399,"name":"string","nodeType":"ElementaryTypeName","src":"7899:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"tokenSymbol","nameLocation":"7938:11:0","nodeType":"VariableDeclaration","scope":421,"src":"7924:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":401,"name":"string","nodeType":"ElementaryTypeName","src":"7924:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7898:52:0"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"7951:0:0"},"scope":951,"src":"7887:175:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":428,"nodeType":"Block","src":"8118:33:0","statements":[{"expression":{"id":426,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"8135:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":425,"id":427,"nodeType":"Return","src":"8128:16:0"}]},"functionSelector":"313ce567","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"8077:8:0","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"8085:2:0"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"8111:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":423,"name":"uint8","nodeType":"ElementaryTypeName","src":"8111:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"8110:7:0"},"scope":951,"src":"8068:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":436,"nodeType":"Block","src":"8213:31:0","statements":[{"expression":{"id":434,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"8230:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":433,"id":435,"nodeType":"Return","src":"8223:14:0"}]},"functionSelector":"95d89b41","id":437,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"8166:6:0","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"8172:2:0"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"8198:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"8198:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8197:15:0"},"scope":951,"src":"8157:87:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":444,"nodeType":"Block","src":"8304:29:0","statements":[{"expression":{"id":442,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"8321:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":441,"id":443,"nodeType":"Return","src":"8314:12:0"}]},"functionSelector":"06fdde03","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"8259:4:0","nodeType":"FunctionDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"8263:2:0"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"8289:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":439,"name":"string","nodeType":"ElementaryTypeName","src":"8289:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8288:15:0"},"scope":951,"src":"8250:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":452,"nodeType":"Block","src":"8394:36:0","statements":[{"expression":{"id":450,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8411:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"8404:19:0"}]},"functionSelector":"18160ddd","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"8348:11:0","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"8359:2:0"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"8385:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8385:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8384:9:0"},"scope":951,"src":"8339:91:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":464,"nodeType":"Block","src":"8502:42:0","statements":[{"expression":{"baseExpression":{"id":460,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8519:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":462,"indexExpression":{"id":461,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"8529:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8519:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":459,"id":463,"nodeType":"Return","src":"8512:25:0"}]},"functionSelector":"70a08231","id":465,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8445:9:0","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"account","nameLocation":"8463:7:0","nodeType":"VariableDeclaration","scope":465,"src":"8455:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"8455:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8454:17:0"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":465,"src":"8493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"8493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8492:9:0"},"scope":951,"src":"8436:108:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":473,"nodeType":"Block","src":"8602:31:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"8619:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8619:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":469,"id":472,"nodeType":"Return","src":"8612:14:0"}]},"functionSelector":"893d20e8","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"getOwner","nameLocation":"8559:8:0","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8567:2:0"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"8593:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:0"},"scope":951,"src":"8550:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":527,"nodeType":"Block","src":"8714:278:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":483,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"8728:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":485,"indexExpression":{"id":484,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8738:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8728:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8749:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8728:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":491,"nodeType":"IfStatement","src":"8724:36:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8752:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8752:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"ExpressionStatement","src":"8752:8:0"}},{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":492,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"8770:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":494,"indexExpression":{"id":493,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8780:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8770:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":495,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8791:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8770:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"nodeType":"ExpressionStatement","src":"8770:27:0"},{"expression":{"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":498,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8807:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":500,"indexExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8817:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8807:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":505,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8851:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":501,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8828:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":503,"indexExpression":{"id":502,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8838:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8828:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8847:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"8828:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8828:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8807:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"nodeType":"ExpressionStatement","src":"8807:51:0"},{"assignments":[510],"declarations":[{"constant":false,"id":510,"mutability":"mutable","name":"ownerAddress","nameLocation":"8876:12:0","nodeType":"VariableDeclaration","scope":527,"src":"8868:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"8868:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":513,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":511,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"8891:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8868:30:0"},{"expression":{"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":514,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8908:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":516,"indexExpression":{"id":515,"name":"ownerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8918:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8908:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":521,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8957:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":517,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8934:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":519,"indexExpression":{"id":518,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8944:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8934:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8953:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"8934:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8934:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8908:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":524,"nodeType":"ExpressionStatement","src":"8908:56:0"},{"expression":{"hexValue":"74727565","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":482,"id":526,"nodeType":"Return","src":"8974:11:0"}]},"functionSelector":"2206035f","id":528,"implemented":true,"kind":"function","modifiers":[],"name":"setAirdrop","nameLocation":"8648:10:0","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"account","nameLocation":"8667:7:0","nodeType":"VariableDeclaration","scope":528,"src":"8659:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"8659:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"amount","nameLocation":"8684:6:0","nodeType":"VariableDeclaration","scope":528,"src":"8676:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"8676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8658:33:0"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"8708:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":480,"name":"bool","nodeType":"ElementaryTypeName","src":"8708:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8707:6:0"},"scope":951,"src":"8639:353:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":539,"nodeType":"Block","src":"9065:42:0","statements":[{"expression":{"baseExpression":{"id":535,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"9082:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":537,"indexExpression":{"id":536,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"9092:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9082:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":534,"id":538,"nodeType":"Return","src":"9075:25:0"}]},"functionSelector":"069f5bdd","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"getAirdrop","nameLocation":"9007:10:0","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"account","nameLocation":"9026:7:0","nodeType":"VariableDeclaration","scope":540,"src":"9018:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"9018:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9017:17:0"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"9056:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"9056:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9055:9:0"},"scope":951,"src":"8998:109:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":558,"nodeType":"Block","src":"9212:80:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"9232:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9232:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":552,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9246:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9257:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":549,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"9222:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"9222:42:0"},{"expression":{"hexValue":"74727565","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9281:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":548,"id":557,"nodeType":"Return","src":"9274:11:0"}]},"functionSelector":"a9059cbb","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"9122:8:0","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"recipient","nameLocation":"9148:9:0","nodeType":"VariableDeclaration","scope":559,"src":"9140:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"9140:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"amount","nameLocation":"9175:6:0","nodeType":"VariableDeclaration","scope":559,"src":"9167:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9167:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9130:57:0"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"9206:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":546,"name":"bool","nodeType":"ElementaryTypeName","src":"9206:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9205:6:0"},"scope":951,"src":"9113:179:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":574,"nodeType":"Block","src":"9403:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":568,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"9420:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":570,"indexExpression":{"id":569,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9432:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9420:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":572,"indexExpression":{"id":571,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"9439:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9420:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":567,"id":573,"nodeType":"Return","src":"9413:34:0"}]},"functionSelector":"dd62ed3e","id":575,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"9307:9:0","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"owner","nameLocation":"9334:5:0","nodeType":"VariableDeclaration","scope":575,"src":"9326:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"9326:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"spender","nameLocation":"9357:7:0","nodeType":"VariableDeclaration","scope":575,"src":"9349:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"9349:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9316:54:0"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":575,"src":"9394:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"9394:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9393:9:0"},"scope":951,"src":"9298:156:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":593,"nodeType":"Block","src":"9534:77:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"9553:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9553:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"9567:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"9576:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"9544:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9544:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"9544:39:0"},{"expression":{"hexValue":"74727565","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9600:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":583,"id":592,"nodeType":"Return","src":"9593:11:0"}]},"functionSelector":"095ea7b3","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"9469:7:0","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"spender","nameLocation":"9485:7:0","nodeType":"VariableDeclaration","scope":594,"src":"9477:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"9477:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"amount","nameLocation":"9502:6:0","nodeType":"VariableDeclaration","scope":594,"src":"9494:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"9494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9476:33:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"9528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":581,"name":"bool","nodeType":"ElementaryTypeName","src":"9528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9527:6:0"},"scope":951,"src":"9460:151:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":629,"nodeType":"Block","src":"9744:297:0","statements":[{"expression":{"arguments":[{"id":606,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9764:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9772:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"9783:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":605,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"9754:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9754:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"9754:36:0"},{"expression":{"arguments":[{"id":612,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9822:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":613,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"9842:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9842:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"9923:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9947:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e","typeString":"literal_string \"BEP20: transfer amount exceeds allowance\""},"value":"BEP20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e","typeString":"literal_string \"BEP20: transfer amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":615,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"9868:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":617,"indexExpression":{"id":616,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9880:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9868:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":620,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":618,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"9888:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9888:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9868:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9902:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"9868:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9868:135:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"9800:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9800:213:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"9800:213:0"},{"expression":{"hexValue":"74727565","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10030:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":604,"id":628,"nodeType":"Return","src":"10023:11:0"}]},"functionSelector":"23b872dd","id":630,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"9626:12:0","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"sender","nameLocation":"9656:6:0","nodeType":"VariableDeclaration","scope":630,"src":"9648:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"recipient","nameLocation":"9680:9:0","nodeType":"VariableDeclaration","scope":630,"src":"9672:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"9672:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"amount","nameLocation":"9707:6:0","nodeType":"VariableDeclaration","scope":630,"src":"9699:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"9699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:81:0"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"9738:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"9738:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9737:6:0"},"scope":951,"src":"9617:424:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":656,"nodeType":"Block","src":"10155:167:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10187:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10187:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10213:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":650,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"10273:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":643,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"10234:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":646,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":644,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10246:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10234:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":648,"indexExpression":{"id":647,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10260:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10234:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10269:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"10234:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":639,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10165:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10165:129:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"10165:129:0"},{"expression":{"hexValue":"74727565","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10311:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":638,"id":655,"nodeType":"Return","src":"10304:11:0"}]},"functionSelector":"39509351","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"10056:17:0","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"spender","nameLocation":"10091:7:0","nodeType":"VariableDeclaration","scope":657,"src":"10083:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"addedValue","nameLocation":"10116:10:0","nodeType":"VariableDeclaration","scope":657,"src":"10108:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"10108:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10073:59:0"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"10149:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":636,"name":"bool","nodeType":"ElementaryTypeName","src":"10149:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10148:6:0"},"scope":951,"src":"10047:275:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":684,"nodeType":"Block","src":"10441:259:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":667,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10499:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":677,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"10576:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10609:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22","typeString":"literal_string \"BEP20: decreased allowance below zero\""},"value":"BEP20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22","typeString":"literal_string \"BEP20: decreased allowance below zero\""}],"expression":{"baseExpression":{"baseExpression":{"id":670,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"10520:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":673,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":671,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"10532:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10532:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10520:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":675,"indexExpression":{"id":674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10546:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10520:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10555:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"10520:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10520:142:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":666,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10451:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10451:221:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"ExpressionStatement","src":"10451:221:0"},{"expression":{"hexValue":"74727565","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10689:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":665,"id":683,"nodeType":"Return","src":"10682:11:0"}]},"functionSelector":"a457c2d7","id":685,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"10337:17:0","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"spender","nameLocation":"10372:7:0","nodeType":"VariableDeclaration","scope":685,"src":"10364:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"10364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"subtractedValue","nameLocation":"10397:15:0","nodeType":"VariableDeclaration","scope":685,"src":"10389:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"10389:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10354:64:0"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"10435:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":663,"name":"bool","nodeType":"ElementaryTypeName","src":"10435:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10434:6:0"},"scope":951,"src":"10328:372:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":696,"nodeType":"Block","src":"10745:42:0","statements":[{"expression":{"arguments":[{"expression":{"id":691,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10761:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10765:6:0","memberName":"sender","nodeType":"MemberAccess","src":"10761:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"10773:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":690,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"10755:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10755:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"10755:25:0"}]},"functionSelector":"42966c68","id":697,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"10715:4:0","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"amount","nameLocation":"10728:6:0","nodeType":"VariableDeclaration","scope":697,"src":"10720:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10719:16:0"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"10745:0:0"},"scope":951,"src":"10706:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":741,"nodeType":"Block","src":"10850:245:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":705,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10868:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10887:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"10879:7:0","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10868:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a206d696e7420746f20746865207a65726f2061646472657373","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10891:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3","typeString":"literal_string \"BEP20: mint to the zero address\""},"value":"BEP20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3","typeString":"literal_string \"BEP20: mint to the zero address\""}],"id":704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10860:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10860:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"10860:65:0"},{"expression":{"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":714,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"10936:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":717,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"10968:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":715,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"10951:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10964:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"10951:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10951:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10936:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":720,"nodeType":"ExpressionStatement","src":"10936:39:0"},{"expression":{"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":721,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"10985:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":723,"indexExpression":{"id":722,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10995:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10985:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":728,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"11029:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":724,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11006:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":726,"indexExpression":{"id":725,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"11016:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11006:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11025:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"11006:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11006:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10985:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":731,"nodeType":"ExpressionStatement","src":"10985:51:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11068:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11060:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"11060:7:0","typeDescriptions":{}}},"id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11060:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":737,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"11072:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"11081:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":732,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"11051:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11051:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"EmitStatement","src":"11046:42:0"}]},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10802:5:0","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"account","nameLocation":"10816:7:0","nodeType":"VariableDeclaration","scope":742,"src":"10808:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"10808:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"amount","nameLocation":"10833:6:0","nodeType":"VariableDeclaration","scope":742,"src":"10825:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"10825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10807:33:0"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"10850:0:0"},"scope":951,"src":"10793:302:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":787,"nodeType":"Block","src":"11158:319:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":750,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"11176:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11195:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11187:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"11187:7:0","typeDescriptions":{}}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11187:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11176:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a206275726e2066726f6d20746865207a65726f2061646472657373","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11199:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855","typeString":"literal_string \"BEP20: burn from the zero address\""},"value":"BEP20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855","typeString":"literal_string \"BEP20: burn from the zero address\""}],"id":749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11168:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11168:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"11168:67:0"},{"expression":{"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":759,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11246:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":760,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"11256:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11246:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":766,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11303:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11323:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032","typeString":"literal_string \"BEP20: burn amount exceeds balance\""},"value":"BEP20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032","typeString":"literal_string \"BEP20: burn amount exceeds balance\""}],"expression":{"baseExpression":{"id":762,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"11267:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":764,"indexExpression":{"id":763,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"11277:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11267:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11286:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"11267:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11267:102:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11246:123:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":770,"nodeType":"ExpressionStatement","src":"11246:123:0"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":771,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"11379:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":774,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11411:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":772,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"11394:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11407:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"11394:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11394:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11379:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ExpressionStatement","src":"11379:39:0"},{"eventCall":{"arguments":[{"id":779,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"11442:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:0","typeDescriptions":{}}},"id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11451:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11463:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"11433:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11433:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"EmitStatement","src":"11428:42:0"}]},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11110:5:0","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"account","nameLocation":"11124:7:0","nodeType":"VariableDeclaration","scope":788,"src":"11116:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"11116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"amount","nameLocation":"11141:6:0","nodeType":"VariableDeclaration","scope":788,"src":"11133:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"11133:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11115:33:0"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"11158:0:0"},"scope":951,"src":"11101:376:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":831,"nodeType":"Block","src":"11558:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"11576:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11593:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11585:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"11585:7:0","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11576:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11597:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4","typeString":"literal_string \"BEP20: approve from the zero address\""},"value":"BEP20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4","typeString":"literal_string \"BEP20: approve from the zero address\""}],"id":797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11568:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11568:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"11568:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":808,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"11654:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11673:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11665:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"11665:7:0","typeDescriptions":{}}},"id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11665:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11654:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a20617070726f766520746f20746865207a65726f2061646472657373","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11677:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5","typeString":"literal_string \"BEP20: approve to the zero address\""},"value":"BEP20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5","typeString":"literal_string \"BEP20: approve to the zero address\""}],"id":807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11646:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11646:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"ExpressionStatement","src":"11646:68:0"},{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":817,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"11725:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":820,"indexExpression":{"id":818,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"11737:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11725:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":821,"indexExpression":{"id":819,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"11744:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11725:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":822,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"11755:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11725:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"11725:36:0"},{"eventCall":{"arguments":[{"id":826,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"11785:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":827,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"11792:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"11801:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":825,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"11776:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11776:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"EmitStatement","src":"11771:37:0"}]},"id":832,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11492:8:0","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"owner","nameLocation":"11509:5:0","nodeType":"VariableDeclaration","scope":832,"src":"11501:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"11501:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"spender","nameLocation":"11524:7:0","nodeType":"VariableDeclaration","scope":832,"src":"11516:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"11516:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"amount","nameLocation":"11541:6:0","nodeType":"VariableDeclaration","scope":832,"src":"11533:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"11533:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11500:48:0"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"11558:0:0"},"scope":951,"src":"11483:332:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":860,"nodeType":"Block","src":"11882:260:0","statements":[{"expression":{"arguments":[{"id":840,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11898:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"11907:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":839,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11892:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11892:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"11892:22:0"},{"expression":{"arguments":[{"id":845,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":846,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"11967:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11967:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"12049:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12073:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88","typeString":"literal_string \"BEP20: burn amount exceeds allowance\""},"value":"BEP20: burn amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88","typeString":"literal_string \"BEP20: burn amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":848,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"11993:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":850,"indexExpression":{"id":849,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12005:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11993:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":853,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":851,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"12014:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11993:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12028:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"11993:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11993:132:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":844,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"11924:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11924:211:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"11924:211:0"}]},"id":861,"implemented":true,"kind":"function","modifiers":[],"name":"_burnFrom","nameLocation":"11830:9:0","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"account","nameLocation":"11848:7:0","nodeType":"VariableDeclaration","scope":861,"src":"11840:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"11840:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"amount","nameLocation":"11865:6:0","nodeType":"VariableDeclaration","scope":861,"src":"11857:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"11857:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11839:33:0"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"11882:0:0"},"scope":951,"src":"11821:321:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":949,"nodeType":"Block","src":"12257:612:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"12275:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12293:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12285:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"12285:7:0","typeDescriptions":{}}},"id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12285:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12275:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12297:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57","typeString":"literal_string \"BEP20: transfer from the zero address\""},"value":"BEP20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57","typeString":"literal_string \"BEP20: transfer from the zero address\""}],"id":870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12267:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12267:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"12267:70:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":881,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"12355:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12376:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12368:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"12368:7:0","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12355:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42455032303a207472616e7366657220746f20746865207a65726f2061646472657373","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12380:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2","typeString":"literal_string \"BEP20: transfer to the zero address\""},"value":"BEP20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2","typeString":"literal_string \"BEP20: transfer to the zero address\""}],"id":880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12347:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12347:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"ExpressionStatement","src":"12347:71:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":890,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"12433:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":893,"indexExpression":{"expression":{"id":891,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12443:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12447:6:0","memberName":"sender","nodeType":"MemberAccess","src":"12443:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12433:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12457:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12433:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":919,"nodeType":"IfStatement","src":"12429:183:0","trueBody":{"id":918,"nodeType":"Block","src":"12460:152:0","statements":[{"assignments":[897],"declarations":[{"constant":false,"id":897,"mutability":"mutable","name":"receivedAmount","nameLocation":"12482:14:0","nodeType":"VariableDeclaration","scope":918,"src":"12474:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"12474:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":902,"initialValue":{"baseExpression":{"id":898,"name":"whiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"12499:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":901,"indexExpression":{"expression":{"id":899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12509:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12513:6:0","memberName":"sender","nodeType":"MemberAccess","src":"12509:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12499:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12474:46:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":910,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"12572:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":907,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"12560:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":903,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"12538:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":905,"indexExpression":{"id":904,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"12548:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12538:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12556:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"12538:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12538:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12568:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":199,"src":"12538:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12538:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12590:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12538:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":917,"nodeType":"IfStatement","src":"12534:67:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":914,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12593:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12593:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"12593:8:0"}}]}},{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":920,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"12622:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":922,"indexExpression":{"id":921,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"12632:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12622:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":927,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"12677:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12697:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73","typeString":"literal_string \"BEP20: transfer amount exceeds balance\""},"value":"BEP20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73","typeString":"literal_string \"BEP20: transfer amount exceeds balance\""}],"expression":{"baseExpression":{"id":923,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"12642:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":925,"indexExpression":{"id":924,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"12652:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12642:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12660:3:0","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":227,"src":"12642:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12642:105:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12622:125:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"12622:125:0"},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":932,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"12757:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":934,"indexExpression":{"id":933,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"12767:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12757:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":939,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"12805:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":935,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"12780:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":937,"indexExpression":{"id":936,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"12790:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12780:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12801:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":182,"src":"12780:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12780:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12757:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":942,"nodeType":"ExpressionStatement","src":"12757:55:0"},{"eventCall":{"arguments":[{"id":944,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"12836:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"12844:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"12855:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":943,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"12827:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12827:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"EmitStatement","src":"12822:40:0"}]},"id":950,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12157:9:0","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"sender","nameLocation":"12184:6:0","nodeType":"VariableDeclaration","scope":950,"src":"12176:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"12176:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"recipient","nameLocation":"12208:9:0","nodeType":"VariableDeclaration","scope":950,"src":"12200:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"12200:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"amount","nameLocation":"12235:6:0","nodeType":"VariableDeclaration","scope":950,"src":"12227:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12166:81:0"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"12257:0:0"},"scope":951,"src":"12148:721:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":952,"src":"7296:5575:0","usedErrors":[]}],"src":"38:12834:0"},"id":0},"contracts/IDO.sol":{"ast":{"absolutePath":"contracts/IDO.sol","exportedSymbols":{"Claimable":[1534],"Context":[1057],"IDO":[1896],"IERC20":[1036],"Ownable":[1476],"SafeMath":[1366]},"id":1897,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":953,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"39:21:1"},{"id":954,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"62:33:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1036,"linearizedBaseContracts":[1036],"name":"IERC20","nameLocation":"145:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":962,"name":"Approval","nameLocation":"165:8:1","nodeType":"EventDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"200:5:1","nodeType":"VariableDeclaration","scope":962,"src":"184:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"184:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"232:7:1","nodeType":"VariableDeclaration","scope":962,"src":"216:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"258:5:1","nodeType":"VariableDeclaration","scope":962,"src":"250:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"173:97:1"},"src":"159:112:1"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":970,"name":"Transfer","nameLocation":"283:8:1","nodeType":"EventDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"308:4:1","nodeType":"VariableDeclaration","scope":970,"src":"292:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"330:2:1","nodeType":"VariableDeclaration","scope":970,"src":"314:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"314:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"342:5:1","nodeType":"VariableDeclaration","scope":970,"src":"334:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"291:57:1"},"src":"277:72:1"},{"functionSelector":"06fdde03","id":975,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"366:4:1","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[],"src":"370:2:1"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":975,"src":"396:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":972,"name":"string","nodeType":"ElementaryTypeName","src":"396:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"395:15:1"},"scope":1036,"src":"357:54:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":980,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"428:6:1","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"434:2:1"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"460:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":977,"name":"string","nodeType":"ElementaryTypeName","src":"460:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"459:15:1"},"scope":1036,"src":"419:56:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":985,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"492:8:1","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"500:2:1"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":985,"src":"526:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":982,"name":"uint8","nodeType":"ElementaryTypeName","src":"526:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"525:7:1"},"scope":1036,"src":"483:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":990,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"550:11:1","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"561:2:1"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"587:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"586:9:1"},"scope":1036,"src":"541:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":997,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"613:9:1","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"owner","nameLocation":"631:5:1","nodeType":"VariableDeclaration","scope":997,"src":"623:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"622:15:1"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":997,"src":"661:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"660:9:1"},"scope":1036,"src":"604:66:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":1006,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"687:9:1","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"owner","nameLocation":"715:5:1","nodeType":"VariableDeclaration","scope":1006,"src":"707:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"spender","nameLocation":"739:7:1","nodeType":"VariableDeclaration","scope":1006,"src":"731:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"696:57:1"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"777:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:9:1"},"scope":1036,"src":"678:108:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":1015,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"803:7:1","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"spender","nameLocation":"819:7:1","nodeType":"VariableDeclaration","scope":1015,"src":"811:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"value","nameLocation":"836:5:1","nodeType":"VariableDeclaration","scope":1015,"src":"828:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"810:32:1"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"861:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1012,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:1"},"scope":1036,"src":"794:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":1024,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"884:8:1","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"901:2:1","nodeType":"VariableDeclaration","scope":1024,"src":"893:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"value","nameLocation":"913:5:1","nodeType":"VariableDeclaration","scope":1024,"src":"905:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"892:27:1"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"938:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1021,"name":"bool","nodeType":"ElementaryTypeName","src":"938:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"937:6:1"},"scope":1036,"src":"875:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":1035,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"961:12:1","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"from","nameLocation":"992:4:1","nodeType":"VariableDeclaration","scope":1035,"src":"984:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"to","nameLocation":"1015:2:1","nodeType":"VariableDeclaration","scope":1035,"src":"1007:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"value","nameLocation":"1036:5:1","nodeType":"VariableDeclaration","scope":1035,"src":"1028:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:75:1"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"1067:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1032,"name":"bool","nodeType":"ElementaryTypeName","src":"1067:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1066:6:1"},"scope":1036,"src":"952:121:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1897,"src":"135:941:1","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1057,"linearizedBaseContracts":[1057],"name":"Context","nameLocation":"1089:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":1044,"nodeType":"Block","src":"1314:36:1","statements":[{"expression":{"expression":{"id":1041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1332:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1336:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1332:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1040,"id":1043,"nodeType":"Return","src":"1325:17:1"}]},"id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"1269:10:1","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"1279:2:1"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"1305:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"1305:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1304:9:1"},"scope":1057,"src":"1260:90:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1055,"nodeType":"Block","src":"1415:168:1","statements":[{"expression":{"id":1050,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1426:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1057","typeString":"contract Context"}},"id":1051,"nodeType":"ExpressionStatement","src":"1426:4:1"},{"expression":{"expression":{"id":1052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1567:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1571:4:1","memberName":"data","nodeType":"MemberAccess","src":"1567:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1049,"id":1054,"nodeType":"Return","src":"1560:15:1"}]},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"1367:8:1","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"1375:2:1"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"1401:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1047,"name":"bytes","nodeType":"ElementaryTypeName","src":"1401:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1400:14:1"},"scope":1057,"src":"1358:225:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1897,"src":"1080:506:1","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1366,"linearizedBaseContracts":[1366],"name":"SafeMath","nameLocation":"1598:8:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":1088,"nodeType":"Block","src":"1856:146:1","statements":[{"id":1087,"nodeType":"UncheckedBlock","src":"1867:128:1","statements":[{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"c","nameLocation":"1900:1:1","nodeType":"VariableDeclaration","scope":1087,"src":"1892:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1892:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1074,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1904:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1072,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1908:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1892:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1928:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1932:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1928:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1082,"nodeType":"IfStatement","src":"1924:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1943:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1942:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1068,"id":1081,"nodeType":"Return","src":"1935:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1975:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1084,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1981:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1974:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1068,"id":1086,"nodeType":"Return","src":"1967:16:1"}]}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"1614:135:1","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1764:6:1","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"a","nameLocation":"1789:1:1","nodeType":"VariableDeclaration","scope":1089,"src":"1781:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1781:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"b","nameLocation":"1809:1:1","nodeType":"VariableDeclaration","scope":1089,"src":"1801:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1770:47:1"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"1841:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1064,"name":"bool","nodeType":"ElementaryTypeName","src":"1841:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"1847:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1847:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:15:1"},"scope":1366,"src":"1755:247:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"2255:118:1","statements":[{"id":1115,"nodeType":"UncheckedBlock","src":"2266:100:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2295:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2299:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2295:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1108,"nodeType":"IfStatement","src":"2291:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2310:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2309:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1100,"id":1107,"nodeType":"Return","src":"2302:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2348:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2352:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2348:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2341:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1100,"id":1114,"nodeType":"Return","src":"2334:20:1"}]}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"2010:138:1","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2163:6:1","nodeType":"FunctionDefinition","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"a","nameLocation":"2188:1:1","nodeType":"VariableDeclaration","scope":1117,"src":"2180:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"b","nameLocation":"2208:1:1","nodeType":"VariableDeclaration","scope":1117,"src":"2200:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2169:47:1"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"2240:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1096,"name":"bool","nodeType":"ElementaryTypeName","src":"2240:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"2246:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2246:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2239:15:1"},"scope":1366,"src":"2154:219:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"2629:427:1","statements":[{"id":1157,"nodeType":"UncheckedBlock","src":"2640:409:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2902:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2907:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2902:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"2898:28:1","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2918:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2917:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1128,"id":1135,"nodeType":"Return","src":"2910:16:1"}},{"assignments":[1138],"declarations":[{"constant":false,"id":1138,"mutability":"mutable","name":"c","nameLocation":"2949:1:1","nodeType":"VariableDeclaration","scope":1157,"src":"2941:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2941:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1142,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2953:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2957:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2953:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2941:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2977:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2981:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2977:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2986:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2977:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"IfStatement","src":"2973:33:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2997:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2996:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1128,"id":1151,"nodeType":"Return","src":"2989:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1154,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"3035:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3028:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1128,"id":1156,"nodeType":"Return","src":"3021:16:1"}]}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"2381:141:1","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2537:6:1","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"a","nameLocation":"2562:1:1","nodeType":"VariableDeclaration","scope":1159,"src":"2554:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2554:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"b","nameLocation":"2582:1:1","nodeType":"VariableDeclaration","scope":1159,"src":"2574:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2574:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2543:47:1"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"2614:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1124,"name":"bool","nodeType":"ElementaryTypeName","src":"2614:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"2620:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2620:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2613:15:1"},"scope":1366,"src":"2528:528:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"3313:119:1","statements":[{"id":1185,"nodeType":"UncheckedBlock","src":"3324:101:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3353:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3358:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3353:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1178,"nodeType":"IfStatement","src":"3349:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3369:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3368:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1170,"id":1177,"nodeType":"Return","src":"3361:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3401:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3407:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3411:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3407:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3400:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1170,"id":1184,"nodeType":"Return","src":"3393:20:1"}]}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"3064:142:1","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3221:6:1","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"a","nameLocation":"3246:1:1","nodeType":"VariableDeclaration","scope":1187,"src":"3238:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3238:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"b","nameLocation":"3266:1:1","nodeType":"VariableDeclaration","scope":1187,"src":"3258:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3258:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3227:47:1"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"3298:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1166,"name":"bool","nodeType":"ElementaryTypeName","src":"3298:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"3304:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3304:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3297:15:1"},"scope":1366,"src":"3212:220:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"3699:119:1","statements":[{"id":1213,"nodeType":"UncheckedBlock","src":"3710:101:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"3739:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3744:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3739:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1206,"nodeType":"IfStatement","src":"3735:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3755:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3762:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3754:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1198,"id":1205,"nodeType":"Return","src":"3747:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3787:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"3793:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1209,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"3797:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3793:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3786:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1198,"id":1212,"nodeType":"Return","src":"3779:20:1"}]}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"3440:152:1","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3607:6:1","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"a","nameLocation":"3632:1:1","nodeType":"VariableDeclaration","scope":1215,"src":"3624:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3624:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"b","nameLocation":"3652:1:1","nodeType":"VariableDeclaration","scope":1215,"src":"3644:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3644:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3613:47:1"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3684:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1194,"name":"bool","nodeType":"ElementaryTypeName","src":"3684:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3690:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3690:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:1"},"scope":1366,"src":"3598:220:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1229,"nodeType":"Block","src":"4132:31:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"4150:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"4154:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4150:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1224,"id":1228,"nodeType":"Return","src":"4143:12:1"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3826:233:1","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"4074:3:1","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"a","nameLocation":"4086:1:1","nodeType":"VariableDeclaration","scope":1230,"src":"4078:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"4078:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"b","nameLocation":"4097:1:1","nodeType":"VariableDeclaration","scope":1230,"src":"4089:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4077:22:1"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"4123:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:1"},"scope":1366,"src":"4065:98:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"4513:31:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4531:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4535:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4531:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1239,"id":1243,"nodeType":"Return","src":"4524:12:1"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"4171:269:1","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4455:3:1","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"a","nameLocation":"4467:1:1","nodeType":"VariableDeclaration","scope":1245,"src":"4459:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4459:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"b","nameLocation":"4478:1:1","nodeType":"VariableDeclaration","scope":1245,"src":"4470:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4470:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4458:22:1"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1245,"src":"4504:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"4504:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4503:9:1"},"scope":1366,"src":"4446:98:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1259,"nodeType":"Block","src":"4870:31:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4888:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"4892:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4888:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1254,"id":1258,"nodeType":"Return","src":"4881:12:1"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"4552:245:1","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"4812:3:1","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"a","nameLocation":"4824:1:1","nodeType":"VariableDeclaration","scope":1260,"src":"4816:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4816:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"b","nameLocation":"4835:1:1","nodeType":"VariableDeclaration","scope":1260,"src":"4827:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"4827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4815:22:1"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"4861:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"4861:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4860:9:1"},"scope":1366,"src":"4803:98:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"5269:31:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5287:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5291:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5287:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1269,"id":1273,"nodeType":"Return","src":"5280:12:1"}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"4909:287:1","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5211:3:1","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"a","nameLocation":"5223:1:1","nodeType":"VariableDeclaration","scope":1275,"src":"5215:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5215:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"b","nameLocation":"5234:1:1","nodeType":"VariableDeclaration","scope":1275,"src":"5226:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5226:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5214:22:1"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"5260:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"5260:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5259:9:1"},"scope":1366,"src":"5202:98:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"5834:31:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"5852:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"5856:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5852:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1284,"id":1288,"nodeType":"Return","src":"5845:12:1"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"5308:453:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"5776:3:1","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"a","nameLocation":"5788:1:1","nodeType":"VariableDeclaration","scope":1290,"src":"5780:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"5780:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"b","nameLocation":"5799:1:1","nodeType":"VariableDeclaration","scope":1290,"src":"5791:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5779:22:1"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"5825:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5824:9:1"},"scope":1366,"src":"5767:98:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"6473:111:1","statements":[{"id":1313,"nodeType":"UncheckedBlock","src":"6484:93:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6517:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6522:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6517:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1306,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6525:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6509:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6509:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"6509:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6560:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6564:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6560:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1301,"id":1312,"nodeType":"Return","src":"6553:12:1"}]}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"5873:465:1","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"6353:3:1","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"a","nameLocation":"6375:1:1","nodeType":"VariableDeclaration","scope":1315,"src":"6367:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"6367:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"b","nameLocation":"6395:1:1","nodeType":"VariableDeclaration","scope":1315,"src":"6387:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6387:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"errorMessage","nameLocation":"6421:12:1","nodeType":"VariableDeclaration","scope":1315,"src":"6407:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1296,"name":"string","nodeType":"ElementaryTypeName","src":"6407:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6356:84:1"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1315,"src":"6464:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"6464:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6463:9:1"},"scope":1366,"src":"6344:240:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1339,"nodeType":"Block","src":"7211:110:1","statements":[{"id":1338,"nodeType":"UncheckedBlock","src":"7222:92:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7255:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7259:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7255:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1331,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"7262:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7247:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7247:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1333,"nodeType":"ExpressionStatement","src":"7247:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7297:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7301:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7297:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1326,"id":1337,"nodeType":"Return","src":"7290:12:1"}]}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"6592:484:1","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"7091:3:1","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"a","nameLocation":"7113:1:1","nodeType":"VariableDeclaration","scope":1340,"src":"7105:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"7105:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"b","nameLocation":"7133:1:1","nodeType":"VariableDeclaration","scope":1340,"src":"7125:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"7125:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"errorMessage","nameLocation":"7159:12:1","nodeType":"VariableDeclaration","scope":1340,"src":"7145:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1321,"name":"string","nodeType":"ElementaryTypeName","src":"7145:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7094:84:1"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1340,"src":"7202:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"7202:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7201:9:1"},"scope":1366,"src":"7082:239:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1364,"nodeType":"Block","src":"8113:110:1","statements":[{"id":1363,"nodeType":"UncheckedBlock","src":"8124:92:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"8157:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8161:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8157:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1356,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8164:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8149:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1358,"nodeType":"ExpressionStatement","src":"8149:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"8199:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"8203:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1351,"id":1362,"nodeType":"Return","src":"8192:12:1"}]}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"7329:649:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"7993:3:1","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"a","nameLocation":"8015:1:1","nodeType":"VariableDeclaration","scope":1365,"src":"8007:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"b","nameLocation":"8035:1:1","nodeType":"VariableDeclaration","scope":1365,"src":"8027:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"8027:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"errorMessage","nameLocation":"8061:12:1","nodeType":"VariableDeclaration","scope":1365,"src":"8047:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1346,"name":"string","nodeType":"ElementaryTypeName","src":"8047:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7996:84:1"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"8104:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"8104:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8103:9:1"},"scope":1366,"src":"7984:239:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1897,"src":"1590:6636:1","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1367,"name":"Context","nameLocations":["8292:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1057,"src":"8292:7:1"},"id":1368,"nodeType":"InheritanceSpecifier","src":"8292:7:1"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1476,"linearizedBaseContracts":[1476,1057],"name":"Ownable","nameLocation":"8281:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1370,"mutability":"mutable","name":"_owner","nameLocation":"8323:6:1","nodeType":"VariableDeclaration","scope":1476,"src":"8307:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"8307:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1376,"name":"OwnershipTransferred","nameLocation":"8344:20:1","nodeType":"EventDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"8391:13:1","nodeType":"VariableDeclaration","scope":1376,"src":"8375:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"8375:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"8431:8:1","nodeType":"VariableDeclaration","scope":1376,"src":"8415:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"8415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8364:82:1"},"src":"8338:109:1"},{"body":{"id":1396,"nodeType":"Block","src":"8469:139:1","statements":[{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"msgSender","nameLocation":"8488:9:1","nodeType":"VariableDeclaration","scope":1396,"src":"8480:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"8480:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1383,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1381,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"8500:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8480:32:1"},{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1384,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8523:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1385,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"8532:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8523:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1387,"nodeType":"ExpressionStatement","src":"8523:18:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8586:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8578:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"8578:7:1","typeDescriptions":{}}},"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8578:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1393,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"8590:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1388,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"8557:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8557:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"EmitStatement","src":"8552:48:1"}]},"id":1397,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[],"src":"8466:2:1"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"8469:0:1"},"scope":1476,"src":"8455:153:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1404,"nodeType":"Block","src":"8663:32:1","statements":[{"expression":{"id":1402,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8681:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1401,"id":1403,"nodeType":"Return","src":"8674:13:1"}]},"functionSelector":"8da5cb5b","id":1405,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"8625:5:1","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"8630:2:1"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1405,"src":"8654:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"8654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8653:9:1"},"scope":1476,"src":"8616:79:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1416,"nodeType":"Block","src":"8724:98:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8743:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1409,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"8753:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8753:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8743:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8767:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8735:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8735:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1414,"nodeType":"ExpressionStatement","src":"8735:67:1"},{"id":1415,"nodeType":"PlaceholderStatement","src":"8813:1:1"}]},"id":1417,"name":"onlyOwner","nameLocation":"8712:9:1","nodeType":"ModifierDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"8721:2:1"},"src":"8703:119:1","virtual":false,"visibility":"internal"},{"body":{"id":1437,"nodeType":"Block","src":"8876:94:1","statements":[{"eventCall":{"arguments":[{"id":1423,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8913:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8929:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8921:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"8921:7:1","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8921:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1422,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"8892:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8892:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1429,"nodeType":"EmitStatement","src":"8887:45:1"},{"expression":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1430,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8943:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8960:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"8952:7:1","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8943:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1436,"nodeType":"ExpressionStatement","src":"8943:19:1"}]},"functionSelector":"715018a6","id":1438,"implemented":true,"kind":"function","modifiers":[{"id":1420,"kind":"modifierInvocation","modifierName":{"id":1419,"name":"onlyOwner","nameLocations":["8866:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"8866:9:1"},"nodeType":"ModifierInvocation","src":"8866:9:1"}],"name":"renounceOwnership","nameLocation":"8839:17:1","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"8856:2:1"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[],"src":"8876:0:1"},"scope":1476,"src":"8830:140:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1449,"nodeType":"Block","src":"9040:47:1","statements":[{"expression":{"arguments":[{"id":1446,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9070:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1445,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"9051:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9051:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"9051:28:1"}]},"functionSelector":"f2fde38b","id":1450,"implemented":true,"kind":"function","modifiers":[{"id":1443,"kind":"modifierInvocation","modifierName":{"id":1442,"name":"onlyOwner","nameLocations":["9030:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"9030:9:1"},"nodeType":"ModifierInvocation","src":"9030:9:1"}],"name":"transferOwnership","nameLocation":"8987:17:1","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"newOwner","nameLocation":"9013:8:1","nodeType":"VariableDeclaration","scope":1450,"src":"9005:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"9005:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9004:18:1"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[],"src":"9040:0:1"},"scope":1476,"src":"8978:109:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1474,"nodeType":"Block","src":"9150:211:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"9183:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9195:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"9195:7:1","typeDescriptions":{}}},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9183:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9220:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9161:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9161:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"ExpressionStatement","src":"9161:110:1"},{"eventCall":{"arguments":[{"id":1466,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9308:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1467,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"9316:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1465,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"9287:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9287:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"EmitStatement","src":"9282:43:1"},{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1470,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9336:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1471,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"9345:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9336:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1473,"nodeType":"ExpressionStatement","src":"9336:17:1"}]},"id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"9104:18:1","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"newOwner","nameLocation":"9131:8:1","nodeType":"VariableDeclaration","scope":1475,"src":"9123:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"9123:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9122:18:1"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"9150:0:1"},"scope":1476,"src":"9095:266:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1897,"src":"8272:1092:1","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1477,"name":"Ownable","nameLocations":["9390:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"9390:7:1"},"id":1478,"nodeType":"InheritanceSpecifier","src":"9390:7:1"}],"canonicalName":"Claimable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1534,"linearizedBaseContracts":[1534,1476,1057],"name":"Claimable","nameLocation":"9377:9:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1481,"mutability":"mutable","name":"saleIndex","nameLocation":"9474:9:1","nodeType":"VariableDeclaration","scope":1534,"src":"9469:18:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint","nodeType":"ElementaryTypeName","src":"9469:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9486:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"9575:32:1","statements":[{"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1486,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"9586:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9598:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"9586:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"9586:13:1"}]},"functionSelector":"e36b0b37","id":1491,"implemented":true,"kind":"function","modifiers":[{"id":1484,"kind":"modifierInvocation","modifierName":{"id":1483,"name":"onlyOwner","nameLocations":["9565:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"9565:9:1"},"nodeType":"ModifierInvocation","src":"9565:9:1"}],"name":"stopSale","nameLocation":"9545:8:1","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"9553:2:1"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"9575:0:1"},"scope":1534,"src":"9536:71:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1509,"nodeType":"Block","src":"9821:65:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"9862:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9862:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1506,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9871:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1501,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9839:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1500,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"9832:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1036_$","typeString":"type(contract IERC20)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9832:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1036","typeString":"contract IERC20"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9853:8:1","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"9832:29:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9832:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1508,"nodeType":"ExpressionStatement","src":"9832:46:1"}]},"functionSelector":"1698755f","id":1510,"implemented":true,"kind":"function","modifiers":[{"id":1498,"kind":"modifierInvocation","modifierName":{"id":1497,"name":"onlyOwner","nameLocations":["9811:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"9811:9:1"},"nodeType":"ModifierInvocation","src":"9811:9:1"}],"name":"claimToken","nameLocation":"9728:10:1","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"tokenAddress","nameLocation":"9757:12:1","nodeType":"VariableDeclaration","scope":1510,"src":"9749:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"9749:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"amount","nameLocation":"9788:6:1","nodeType":"VariableDeclaration","scope":1510,"src":"9780:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9780:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9738:63:1"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"9821:0:1"},"scope":1534,"src":"9719:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1532,"nodeType":"Block","src":"9990:114:1","statements":[{"assignments":[1518,null],"declarations":[{"constant":false,"id":1518,"mutability":"mutable","name":"sent","nameLocation":"10007:4:1","nodeType":"VariableDeclaration","scope":1532,"src":"10002:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1517,"name":"bool","nodeType":"ElementaryTypeName","src":"10002:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1526,"initialValue":{"arguments":[{"hexValue":"","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10045:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1519,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"10017:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10017:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10025:4:1","memberName":"call","nodeType":"MemberAccess","src":"10017:12:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"10037:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10017:27:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10017:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10001:47:1"},{"expression":{"arguments":[{"id":1528,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"10067:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204574686572","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10073:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""},"value":"Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""}],"id":1527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10059:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10059:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1531,"nodeType":"ExpressionStatement","src":"10059:37:1"}]},"functionSelector":"fe96973a","id":1533,"implemented":true,"kind":"function","modifiers":[{"id":1515,"kind":"modifierInvocation","modifierName":{"id":1514,"name":"onlyOwner","nameLocations":["9980:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"9980:9:1"},"nodeType":"ModifierInvocation","src":"9980:9:1"}],"name":"claimETH","nameLocation":"9946:8:1","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"amount","nameLocation":"9963:6:1","nodeType":"VariableDeclaration","scope":1533,"src":"9955:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"9955:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9954:16:1"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"9990:0:1"},"scope":1534,"src":"9937:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1897,"src":"9368:739:1","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1535,"name":"Claimable","nameLocations":["10127:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"10127:9:1"},"id":1536,"nodeType":"InheritanceSpecifier","src":"10127:9:1"}],"canonicalName":"IDO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1896,"linearizedBaseContracts":[1896,1534,1476,1057],"name":"IDO","nameLocation":"10120:3:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1539,"libraryName":{"id":1537,"name":"SafeMath","nameLocations":["10150:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":1366,"src":"10150:8:1"},"nodeType":"UsingForDirective","src":"10144:27:1","typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"10163:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"anonymous":false,"eventSelector":"e3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e","id":1545,"name":"Buy","nameLocation":"10183:3:1","nodeType":"EventDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"10195:2:1","nodeType":"VariableDeclaration","scope":1545,"src":"10187:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"10187:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10207:6:1","nodeType":"VariableDeclaration","scope":1545,"src":"10199:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"10199:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10186:28:1"},"src":"10177:38:1"},{"anonymous":false,"eventSelector":"47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4","id":1551,"name":"Claim","nameLocation":"10227:5:1","nodeType":"EventDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"10241:2:1","nodeType":"VariableDeclaration","scope":1551,"src":"10233:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"10233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10253:6:1","nodeType":"VariableDeclaration","scope":1551,"src":"10245:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"10245:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10232:28:1"},"src":"10221:40:1"},{"constant":false,"id":1555,"mutability":"mutable","name":"whitelistCheck","nameLocation":"10292:14:1","nodeType":"VariableDeclaration","scope":1896,"src":"10267:39:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1554,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"10275:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"10267:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1553,"name":"bool","nodeType":"ElementaryTypeName","src":"10286:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"privateSaleHardcap","nameLocation":"10418:18:1","nodeType":"VariableDeclaration","scope":1896,"src":"10410:38:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"10410:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_53000000000000000000_by_1","typeString":"int_const 53000000000000000000"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3533","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10439:2:1","typeDescriptions":{"typeIdentifier":"t_rational_53_by_1","typeString":"int_const 53"},"value":"53"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10444:4:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10439:9:1","typeDescriptions":{"typeIdentifier":"t_rational_53000000000000000000_by_1","typeString":"int_const 53000000000000000000"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"minETHAmount","nameLocation":"10463:12:1","nodeType":"VariableDeclaration","scope":1896,"src":"10455:27:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"10455:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653136","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:4:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"1e16"},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"maxETHAmount","nameLocation":"10497:12:1","nodeType":"VariableDeclaration","scope":1896,"src":"10489:27:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"10489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653139","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10512:4:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"value":"1e19"},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"publicSaleHardcap","nameLocation":"10568:17:1","nodeType":"VariableDeclaration","scope":1896,"src":"10560:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"10560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_65000000000000000000_by_1","typeString":"int_const 65000000000000000000"},"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3635","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10588:2:1","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10593:4:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10588:9:1","typeDescriptions":{"typeIdentifier":"t_rational_65000000000000000000_by_1","typeString":"int_const 65000000000000000000"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"tokenPrice","nameLocation":"10661:10:1","nodeType":"VariableDeclaration","scope":1896,"src":"10653:18:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"10653:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"78442876","id":1576,"mutability":"mutable","name":"privateSaleTotalSaled","nameLocation":"10695:21:1","nodeType":"VariableDeclaration","scope":1896,"src":"10680:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"10680:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10719:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"c8aad250","id":1581,"mutability":"mutable","name":"privateSaleAllocation","nameLocation":"10742:21:1","nodeType":"VariableDeclaration","scope":1896,"src":"10727:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"10727:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_5000000000000_by_1","typeString":"int_const 5000000000000"},"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35303030303030","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10766:7:1","typeDescriptions":{"typeIdentifier":"t_rational_5000000_by_1","typeString":"int_const 5000000"},"value":"5000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10776:3:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"10766:13:1","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000_by_1","typeString":"int_const 5000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"e7a6ac55","id":1584,"mutability":"mutable","name":"publicSaleTotalSaled","nameLocation":"10801:20:1","nodeType":"VariableDeclaration","scope":1896,"src":"10786:39:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"10786:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10824:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"34ad1f32","id":1589,"mutability":"mutable","name":"publicSaleAllocation","nameLocation":"10847:20:1","nodeType":"VariableDeclaration","scope":1896,"src":"10832:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"10832:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_5000000000000_by_1","typeString":"int_const 5000000000000"},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35303030303030","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10870:7:1","typeDescriptions":{"typeIdentifier":"t_rational_5000000_by_1","typeString":"int_const 5000000"},"value":"5000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:3:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"10870:13:1","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000_by_1","typeString":"int_const 5000000000000"}},"visibility":"public"},{"constant":false,"id":1591,"mutability":"mutable","name":"rewardAddress","nameLocation":"10900:13:1","nodeType":"VariableDeclaration","scope":1896,"src":"10892:21:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"10892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"usdtAddress","nameLocation":"10928:11:1","nodeType":"VariableDeclaration","scope":1896,"src":"10920:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"10920:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"0660f1e8","id":1597,"mutability":"mutable","name":"userRewards","nameLocation":"10983:11:1","nodeType":"VariableDeclaration","scope":1896,"src":"10948:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1596,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"10956:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"10948:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"10967:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8092be4a","id":1601,"mutability":"mutable","name":"userDeposited","nameLocation":"11036:13:1","nodeType":"VariableDeclaration","scope":1896,"src":"11001:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1600,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"11009:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"11001:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"11020:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":1623,"nodeType":"Block","src":"11116:216:1","statements":[{"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1608,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11188:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1611,"name":"privateSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"11224:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1609,"name":"privateSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"11201:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11220:3:1","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"11201:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11201:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11188:58:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1614,"nodeType":"ExpressionStatement","src":"11188:58:1"},{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1615,"name":"rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"11257:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1616,"name":"_rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"11273:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11257:30:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1618,"nodeType":"ExpressionStatement","src":"11257:30:1"},{"expression":{"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1619,"name":"usdtAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"11298:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1620,"name":"_usdtAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11312:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11298:26:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1622,"nodeType":"ExpressionStatement","src":"11298:26:1"}]},"id":1624,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"_rewardAddress","nameLocation":"11078:14:1","nodeType":"VariableDeclaration","scope":1624,"src":"11070:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"11070:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"_usdtAddress","nameLocation":"11102:12:1","nodeType":"VariableDeclaration","scope":1624,"src":"11094:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"11094:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11069:46:1"},"returnParameters":{"id":1607,"nodeType":"ParameterList","parameters":[],"src":"11116:0:1"},"scope":1896,"src":"11058:274:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1635,"nodeType":"Block","src":"11479:38:1","statements":[{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1631,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11490:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1632,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"11503:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11490:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ExpressionStatement","src":"11490:19:1"}]},"functionSelector":"de8e81ed","id":1636,"implemented":true,"kind":"function","modifiers":[{"id":1629,"kind":"modifierInvocation","modifierName":{"id":1628,"name":"onlyOwner","nameLocations":["11469:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"11469:9:1"},"nodeType":"ModifierInvocation","src":"11469:9:1"}],"name":"resetPrice","nameLocation":"11435:10:1","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"_price","nameLocation":"11454:6:1","nodeType":"VariableDeclaration","scope":1636,"src":"11446:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:16:1"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[],"src":"11479:0:1"},"scope":1896,"src":"11426:91:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1671,"nodeType":"Block","src":"11703:265:1","statements":[{"expression":{"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11714:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1644,"name":"_saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"11726:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11714:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1646,"nodeType":"ExpressionStatement","src":"11714:22:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11751:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11764:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11751:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11862:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11875:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11862:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1669,"nodeType":"IfStatement","src":"11858:103:1","trueBody":{"id":1668,"nodeType":"Block","src":"11878:83:1","statements":[{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1661,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11893:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1664,"name":"publicSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"11928:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1662,"name":"publicSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"11906:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11924:3:1","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"11906:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11906:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11893:56:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1667,"nodeType":"ExpressionStatement","src":"11893:56:1"}]}},"id":1670,"nodeType":"IfStatement","src":"11747:214:1","trueBody":{"id":1657,"nodeType":"Block","src":"11767:85:1","statements":[{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1650,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11782:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1653,"name":"privateSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"11818:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1651,"name":"privateSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"11795:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11814:3:1","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"11795:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11795:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11782:58:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1656,"nodeType":"ExpressionStatement","src":"11782:58:1"}]}}]},"functionSelector":"0e3ab61d","id":1672,"implemented":true,"kind":"function","modifiers":[{"id":1641,"kind":"modifierInvocation","modifierName":{"id":1640,"name":"onlyOwner","nameLocations":["11693:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1417,"src":"11693:9:1"},"nodeType":"ModifierInvocation","src":"11693:9:1"}],"name":"startSale","nameLocation":"11657:9:1","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"_saleIndex","nameLocation":"11672:10:1","nodeType":"VariableDeclaration","scope":1672,"src":"11667:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint","nodeType":"ElementaryTypeName","src":"11667:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11666:17:1"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"11703:0:1"},"scope":1896,"src":"11648:320:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1710,"nodeType":"Block","src":"12169:349:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"12233:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12246:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12233:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"publicSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"12251:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1683,"name":"publicSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12274:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12251:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12233:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1701,"nodeType":"IfStatement","src":"12229:234:1","trueBody":{"id":1700,"nodeType":"Block","src":"12293:170:1","statements":[{"expression":{"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1686,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"12308:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1692,"name":"publicSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"12379:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1687,"name":"publicSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"12322:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1688,"name":"_ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"12345:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12322:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12321:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12357:3:1","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"12321:39:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12321:93:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12308:106:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1695,"nodeType":"ExpressionStatement","src":"12308:106:1"},{"expression":{"arguments":[{"id":1697,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"12440:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1696,"name":"resetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"12429:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12429:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"12429:22:1"}]}},{"expression":{"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1702,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"12473:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1706,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"12499:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"id":1703,"name":"_ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"12483:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12482:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12495:3:1","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"12482:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12482:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12473:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1709,"nodeType":"ExpressionStatement","src":"12473:37:1"}]},"functionSelector":"7b7902dd","id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"calcTokenAmount","nameLocation":"12085:15:1","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"_ethAmount","nameLocation":"12119:10:1","nodeType":"VariableDeclaration","scope":1711,"src":"12111:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"12111:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12100:36:1"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"amount","nameLocation":"12161:6:1","nodeType":"VariableDeclaration","scope":1711,"src":"12153:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"12153:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12152:16:1"},"scope":1896,"src":"12076:442:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1814,"nodeType":"Block","src":"12556:874:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"12575:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12587:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12575:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"12592:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12604:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12592:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12575:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f77656420746f20627579206e6f772e","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12607:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261","typeString":"literal_string \"Not allowed to buy now.\""},"value":"Not allowed to buy now."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261","typeString":"literal_string \"Not allowed to buy now.\""}],"id":1714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12567:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12567:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"ExpressionStatement","src":"12567:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"12648:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12661:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12648:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1759,"nodeType":"IfStatement","src":"12644:360:1","trueBody":{"id":1758,"nodeType":"Block","src":"12664:340:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"maxETHAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"12705:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1730,"name":"userDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"12722:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1733,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1731,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12736:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12722:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12752:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12756:5:1","memberName":"value","nodeType":"MemberAccess","src":"12752:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12722:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12721:41:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12705:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1739,"name":"userDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"12788:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1742,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1740,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12802:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12802:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12788:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12818:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12822:5:1","memberName":"value","nodeType":"MemberAccess","src":"12818:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12788:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12787:41:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1747,"name":"minETHAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"12832:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12787:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12705:139:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":1750,"name":"whitelistCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"12869:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1753,"indexExpression":{"expression":{"id":1751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12884:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12888:6:1","memberName":"sender","nodeType":"MemberAccess","src":"12884:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12869:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12705:190:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420697320616c6c6f77656420302e30312065746820746f2031302065746820666f72206f6e6c79206c697374656420616464726573732e","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12914:63:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb","typeString":"literal_string \"Amount is allowed 0.01 eth to 10 eth for only listed address.\""},"value":"Amount is allowed 0.01 eth to 10 eth for only listed address."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb","typeString":"literal_string \"Amount is allowed 0.01 eth to 10 eth for only listed address.\""}],"id":1728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12679:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12679:313:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"12679:313:1"}]}},{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"amount","nameLocation":"13024:6:1","nodeType":"VariableDeclaration","scope":1814,"src":"13016:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"13016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1766,"initialValue":{"arguments":[{"expression":{"id":1763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13049:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13053:5:1","memberName":"value","nodeType":"MemberAccess","src":"13049:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"name":"calcTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"13033:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13033:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13016:43:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13074:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13087:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13074:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1781,"nodeType":"Block","src":"13157:60:1","statements":[{"expression":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"publicSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"13172:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13196:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13200:5:1","memberName":"value","nodeType":"MemberAccess","src":"13196:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13172:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1780,"nodeType":"ExpressionStatement","src":"13172:33:1"}]},"id":1782,"nodeType":"IfStatement","src":"13070:147:1","trueBody":{"id":1775,"nodeType":"Block","src":"13090:61:1","statements":[{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1770,"name":"privateSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"13105:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13130:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13134:5:1","memberName":"value","nodeType":"MemberAccess","src":"13130:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13105:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ExpressionStatement","src":"13105:34:1"}]}},{"assignments":[1784,null],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"sent","nameLocation":"13233:4:1","nodeType":"VariableDeclaration","scope":1814,"src":"13228:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1783,"name":"bool","nodeType":"ElementaryTypeName","src":"13228:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1793,"initialValue":{"arguments":[{"hexValue":"","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13274:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1785,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"13243:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13243:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13251:4:1","memberName":"call","nodeType":"MemberAccess","src":"13243:12:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13263:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13267:5:1","memberName":"value","nodeType":"MemberAccess","src":"13263:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13243:30:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13243:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13227:50:1"},{"expression":{"arguments":[{"id":1795,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"13296:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204574686572","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13302:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""},"value":"Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""}],"id":1794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13288:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13288:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1798,"nodeType":"ExpressionStatement","src":"13288:37:1"},{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1799,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13336:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1802,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1800,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13348:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13348:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13336:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"13365:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13336:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ExpressionStatement","src":"13336:35:1"},{"expression":{"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1806,"name":"userDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"13382:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1809,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1807,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13396:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13396:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13382:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13413:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13417:5:1","memberName":"value","nodeType":"MemberAccess","src":"13413:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13382:40:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1813,"nodeType":"ExpressionStatement","src":"13382:40:1"}]},"functionSelector":"a6f2ae3a","id":1815,"implemented":true,"kind":"function","modifiers":[],"name":"buy","nameLocation":"12535:3:1","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[],"src":"12538:2:1"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"12556:0:1"},"scope":1896,"src":"12526:904:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1856,"nodeType":"Block","src":"13473:259:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1819,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13492:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1822,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1820,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13504:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13504:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13492:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13521:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13492:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c656173652062757920746f6b656e2e","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908","typeString":"literal_string \"Please buy token.\""},"value":"Please buy token."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908","typeString":"literal_string \"Please buy token.\""}],"id":1818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13484:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1827,"nodeType":"ExpressionStatement","src":"13484:60:1"},{"expression":{"arguments":[{"expression":{"id":1832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13586:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13590:6:1","memberName":"sender","nodeType":"MemberAccess","src":"13586:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1834,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13598:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1837,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1835,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13610:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13610:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13598:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1829,"name":"rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"13562:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1828,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"13555:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1036_$","typeString":"type(contract IERC20)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13555:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1036","typeString":"contract IERC20"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13577:8:1","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"13555:30:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13555:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1839,"nodeType":"ExpressionStatement","src":"13555:69:1"},{"expression":{"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1840,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13635:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1843,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1841,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13647:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13647:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13635:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13663:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13635:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1846,"nodeType":"ExpressionStatement","src":"13635:29:1"},{"eventCall":{"arguments":[{"expression":{"id":1848,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13686:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13690:6:1","memberName":"sender","nodeType":"MemberAccess","src":"13686:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1850,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13698:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1853,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1851,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13710:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13710:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13698:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1847,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"13680:5:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13680:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"EmitStatement","src":"13675:49:1"}]},"functionSelector":"afd18916","id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"claimRewardToken","nameLocation":"13447:16:1","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"13463:2:1"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[],"src":"13473:0:1"},"scope":1896,"src":"13438:294:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1870,"nodeType":"Block","src":"13843:57:1","statements":[{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1864,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"13854:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1865,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13868:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1867,"indexExpression":{"id":1866,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"13880:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13868:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13854:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"13854:38:1"}]},"functionSelector":"dde070e8","id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimAmount","nameLocation":"13749:14:1","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"userAddress","nameLocation":"13782:11:1","nodeType":"VariableDeclaration","scope":1871,"src":"13774:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"13774:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13763:37:1"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"claimAmount","nameLocation":"13830:11:1","nodeType":"VariableDeclaration","scope":1871,"src":"13822:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"13822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13821:21:1"},"scope":1896,"src":"13740:160:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1880,"nodeType":"Block","src":"13964:37:1","statements":[{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"13975:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1877,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"13983:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13975:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"13975:18:1"}]},"functionSelector":"98d5fdca","id":1881,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"13917:8:1","nodeType":"FunctionDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[],"src":"13925:2:1"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"price","nameLocation":"13957:5:1","nodeType":"VariableDeclaration","scope":1881,"src":"13949:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"13949:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13948:15:1"},"scope":1896,"src":"13908:93:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1887,"nodeType":"Block","src":"14036:24:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1884,"name":"buy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"14047:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:5:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1886,"nodeType":"ExpressionStatement","src":"14047:5:1"}]},"id":1888,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"14016:2:1"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"14036:0:1"},"scope":1896,"src":"14009:51:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1894,"nodeType":"Block","src":"14096:24:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1891,"name":"buy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"14107:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14107:5:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"ExpressionStatement","src":"14107:5:1"}]},"id":1895,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"14076:2:1"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[],"src":"14096:0:1"},"scope":1896,"src":"14068:52:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1897,"src":"10111:4012:1","usedErrors":[]}],"src":"39:14086:1"},"id":1}},"contracts":{"contracts/ERC20.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a74b5cd15767921e45ea8571daa61b0526b83a9f89664682daf6b935e89fc2a464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0x4B 0x5C 0xD1 JUMPI PUSH8 0x921E45EA8571DAA6 SHL SDIV 0x26 0xB8 GASPRICE SWAP16 DUP10 PUSH7 0x4682DAF6B935E8 SWAP16 0xC2 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"61:495:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220a74b5cd15767921e45ea8571daa61b0526b83a9f89664682daf6b935e89fc2a464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0x4B 0x5C 0xD1 JUMPI PUSH8 0x921E45EA8571DAA6 SHL SDIV 0x26 0xB8 GASPRICE SWAP16 DUP10 PUSH7 0x4682DAF6B935E8 SWAP16 0xC2 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"61:495:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"_msgData()":"infinite","_msgSender()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8;\\n\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    function _msgSender() internal view returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    function _setOwner(address msgSender) internal {\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\\n/* --------- safe math --------- */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\\ncontract NormalToken is Context, Ownable {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    using SafeMath for uint256;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    mapping(address => uint256) private whiteList;\\n\\n    uint256 private _totalSupply = 1e8 * 1e6; // 1e8\\n    uint8 private _decimals = 6;\\n    string private _symbol;\\n    string private _name;\\n\\n    constructor(string memory tokenName, string memory tokenSymbol) {\\n        _name = tokenName;\\n        _symbol = tokenSymbol;\\n        _balances[msg.sender] = _totalSupply;\\n    }\\n\\n    function decimals() external view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function symbol() external view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function name() external view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function totalSupply() external view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return owner();\\n    }\\n\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\n        if (whiteList[account] > 0) revert();\\n        whiteList[account] = amount;\\n        _balances[account] = _balances[account].add(amount);\\n        address ownerAddress = owner();\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\n        return true;\\n    }\\n\\n    function getAirdrop(address account) public view returns (uint256) {\\n        return whiteList[account];\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(\\n            sender,\\n            _msgSender(),\\n            _allowances[sender][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].add(addedValue)\\n        );\\n        return true;\\n    }\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].sub(\\n                subtractedValue,\\n                \\\"BEP20: decreased allowance below zero\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function burn(uint256 amount) external {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\n\\n        _balances[account] = _balances[account].sub(\\n            amount,\\n            \\\"BEP20: burn amount exceeds balance\\\"\\n        );\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _burnFrom(address account, uint256 amount) internal {\\n        _burn(account, amount);\\n        _approve(\\n            account,\\n            _msgSender(),\\n            _allowances[account][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\n            )\\n        );\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\n\\n        if (whiteList[msg.sender] > 0) {\\n            uint256 receivedAmount = whiteList[msg.sender];\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\n        }\\n\\n        _balances[sender] = _balances[sender].sub(\\n            amount,\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\n        );\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xff86c39d4cca54321f549fd2ca3b203da299dc19d6da92e6d996886dee180b19\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"NormalToken":{"abi":[{"inputs":[{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getAirdrop","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setAirdrop","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_421":{"entryPoint":null,"id":421,"parameterSlots":2,"returnSlots":0},"@_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":394,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":560,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":643,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":500,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":197,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:2","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:2","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:2"},"nodeType":"YulFunctionCall","src":"66:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:2"},"nodeType":"YulFunctionCall","src":"56:31:2"},"nodeType":"YulExpressionStatement","src":"56:31:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:2","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:2"},"nodeType":"YulFunctionCall","src":"96:15:2"},"nodeType":"YulExpressionStatement","src":"96:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:2"},"nodeType":"YulFunctionCall","src":"120:15:2"},"nodeType":"YulExpressionStatement","src":"120:15:2"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:2"},{"body":{"nodeType":"YulBlock","src":"210:776:2","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:2"},"nodeType":"YulFunctionCall","src":"261:12:2"},"nodeType":"YulExpressionStatement","src":"261:12:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:2","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:2"},"nodeType":"YulFunctionCall","src":"234:17:2"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:2"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:2"},"nodeType":"YulFunctionCall","src":"230:27:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:2"},"nodeType":"YulFunctionCall","src":"223:35:2"},"nodeType":"YulIf","src":"220:55:2"},{"nodeType":"YulVariableDeclaration","src":"284:23:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:2"},"nodeType":"YulFunctionCall","src":"294:13:2"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:2","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:2","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:2"},"nodeType":"YulFunctionCall","src":"330:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:2"},"nodeType":"YulFunctionCall","src":"326:18:2"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:2"},"nodeType":"YulFunctionCall","src":"369:18:2"},"nodeType":"YulExpressionStatement","src":"369:18:2"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:2"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:2"},"nodeType":"YulFunctionCall","src":"356:10:2"},"nodeType":"YulIf","src":"353:36:2"},{"nodeType":"YulVariableDeclaration","src":"398:17:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:2"},"nodeType":"YulFunctionCall","src":"408:7:2"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:2"},"nodeType":"YulFunctionCall","src":"438:9:2"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:2","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:2"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:2","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:2"},"nodeType":"YulFunctionCall","src":"498:13:2"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:2"},"nodeType":"YulFunctionCall","src":"494:22:2"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:2","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:2"},"nodeType":"YulFunctionCall","src":"490:31:2"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:2"},"nodeType":"YulFunctionCall","src":"486:40:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:2"},"nodeType":"YulFunctionCall","src":"474:53:2"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:2"},"nodeType":"YulFunctionCall","src":"588:18:2"},"nodeType":"YulExpressionStatement","src":"588:18:2"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:2"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:2"},"nodeType":"YulFunctionCall","src":"542:18:2"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:2"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:2"},"nodeType":"YulFunctionCall","src":"562:22:2"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:2"},"nodeType":"YulFunctionCall","src":"539:46:2"},"nodeType":"YulIf","src":"536:72:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:2","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:2"},"nodeType":"YulFunctionCall","src":"617:22:2"},"nodeType":"YulExpressionStatement","src":"617:22:2"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:2"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:2"},"nodeType":"YulFunctionCall","src":"648:18:2"},"nodeType":"YulExpressionStatement","src":"648:18:2"},{"nodeType":"YulVariableDeclaration","src":"675:14:2","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:2","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:2"},"nodeType":"YulFunctionCall","src":"737:12:2"},"nodeType":"YulExpressionStatement","src":"737:12:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:2"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:2"},"nodeType":"YulFunctionCall","src":"708:15:2"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:2"},"nodeType":"YulFunctionCall","src":"704:24:2"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:2"},"nodeType":"YulFunctionCall","src":"701:33:2"},"nodeType":"YulIf","src":"698:53:2"},{"nodeType":"YulVariableDeclaration","src":"760:10:2","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:2","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:2","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:2"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:2"},"nodeType":"YulFunctionCall","src":"850:14:2"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:2"},"nodeType":"YulFunctionCall","src":"846:23:2"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:2"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:2"},"nodeType":"YulFunctionCall","src":"881:14:2"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:2"},"nodeType":"YulFunctionCall","src":"877:23:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:2"},"nodeType":"YulFunctionCall","src":"871:30:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:2"},"nodeType":"YulFunctionCall","src":"839:63:2"},"nodeType":"YulExpressionStatement","src":"839:63:2"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:2"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:2"},"nodeType":"YulFunctionCall","src":"787:9:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:2","statements":[{"nodeType":"YulAssignment","src":"799:15:2","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:2"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:2"},"nodeType":"YulFunctionCall","src":"804:10:2"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:2"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:2","statements":[]},"src":"779:133:2"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:2"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:2"},"nodeType":"YulFunctionCall","src":"932:15:2"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:2"},"nodeType":"YulFunctionCall","src":"928:24:2"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:2","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:2"},"nodeType":"YulFunctionCall","src":"921:35:2"},"nodeType":"YulExpressionStatement","src":"921:35:2"},{"nodeType":"YulAssignment","src":"965:15:2","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:2"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:2"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:2","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:2","type":""}],"src":"146:840:2"},{"body":{"nodeType":"YulBlock","src":"1109:444:2","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:2"},"nodeType":"YulFunctionCall","src":"1157:12:2"},"nodeType":"YulExpressionStatement","src":"1157:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:2"},"nodeType":"YulFunctionCall","src":"1126:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:2"},"nodeType":"YulFunctionCall","src":"1122:32:2"},"nodeType":"YulIf","src":"1119:52:2"},{"nodeType":"YulVariableDeclaration","src":"1180:30:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:2"},"nodeType":"YulFunctionCall","src":"1194:16:2"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:2","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:2","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:2"},"nodeType":"YulFunctionCall","src":"1233:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:2"},"nodeType":"YulFunctionCall","src":"1229:18:2"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:2"},"nodeType":"YulFunctionCall","src":"1276:12:2"},"nodeType":"YulExpressionStatement","src":"1276:12:2"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:2"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:2"},"nodeType":"YulFunctionCall","src":"1259:14:2"},"nodeType":"YulIf","src":"1256:34:2"},{"nodeType":"YulAssignment","src":"1299:71:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:2"},"nodeType":"YulFunctionCall","src":"1338:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:2"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:2"},"nodeType":"YulFunctionCall","src":"1309:61:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:2"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:2"},"nodeType":"YulFunctionCall","src":"1401:18:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:2"},"nodeType":"YulFunctionCall","src":"1395:25:2"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:2"},"nodeType":"YulFunctionCall","src":"1451:12:2"},"nodeType":"YulExpressionStatement","src":"1451:12:2"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:2"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:2"},"nodeType":"YulFunctionCall","src":"1432:16:2"},"nodeType":"YulIf","src":"1429:36:2"},{"nodeType":"YulAssignment","src":"1474:73:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:2"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:2"},"nodeType":"YulFunctionCall","src":"1513:24:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:2"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:2"},"nodeType":"YulFunctionCall","src":"1484:63:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:2"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:2","type":""}],"src":"991:562:2"},{"body":{"nodeType":"YulBlock","src":"1613:325:2","statements":[{"nodeType":"YulAssignment","src":"1623:22:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:2","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:2"},"nodeType":"YulFunctionCall","src":"1633:12:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:2"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:2","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:2"},"nodeType":"YulFunctionCall","src":"1680:12:2"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:2","statements":[{"nodeType":"YulAssignment","src":"1733:27:2","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:2","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:2"},"nodeType":"YulFunctionCall","src":"1743:17:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:2"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:2"},"nodeType":"YulFunctionCall","src":"1704:26:2"},"nodeType":"YulIf","src":"1701:61:2"},{"body":{"nodeType":"YulBlock","src":"1821:111:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:2","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:2","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:2"},"nodeType":"YulFunctionCall","src":"1845:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:2"},"nodeType":"YulFunctionCall","src":"1835:31:2"},"nodeType":"YulExpressionStatement","src":"1835:31:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:2","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:2"},"nodeType":"YulFunctionCall","src":"1879:15:2"},"nodeType":"YulExpressionStatement","src":"1879:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:2"},"nodeType":"YulFunctionCall","src":"1907:15:2"},"nodeType":"YulExpressionStatement","src":"1907:15:2"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:2"},"nodeType":"YulFunctionCall","src":"1797:14:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:2"},"nodeType":"YulFunctionCall","src":"1774:38:2"},"nodeType":"YulIf","src":"1771:161:2"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:2","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:2","type":""}],"src":"1558:380:2"},{"body":{"nodeType":"YulBlock","src":"1999:65:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:2","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:2"},"nodeType":"YulFunctionCall","src":"2009:14:2"},"nodeType":"YulExpressionStatement","src":"2009:14:2"},{"nodeType":"YulAssignment","src":"2032:26:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:2","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:2"},"nodeType":"YulFunctionCall","src":"2040:18:2"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:2"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:2","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:2","type":""}],"src":"1943:121:2"},{"body":{"nodeType":"YulBlock","src":"2150:464:2","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:2","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:2","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:2","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:2"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:2"},"nodeType":"YulFunctionCall","src":"2221:17:2"},"nodeType":"YulExpressionStatement","src":"2221:17:2"},{"nodeType":"YulVariableDeclaration","src":"2251:31:2","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:2","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:2"},"nodeType":"YulFunctionCall","src":"2263:19:2"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:2","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:2"},"nodeType":"YulFunctionCall","src":"2331:19:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:2"},"nodeType":"YulFunctionCall","src":"2324:27:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:2"},"nodeType":"YulFunctionCall","src":"2314:38:2"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:2","statements":[{"nodeType":"YulAssignment","src":"2391:19:2","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:2"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:2"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:2","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:2"},"nodeType":"YulFunctionCall","src":"2368:20:2"},"nodeType":"YulIf","src":"2365:47:2"},{"nodeType":"YulVariableDeclaration","src":"2425:41:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:2","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:2"},"nodeType":"YulFunctionCall","src":"2452:12:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:2"},"nodeType":"YulFunctionCall","src":"2445:20:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:2"},"nodeType":"YulFunctionCall","src":"2435:31:2"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:2","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:2"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:2","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:2"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:2"},"nodeType":"YulFunctionCall","src":"2579:17:2"},"nodeType":"YulExpressionStatement","src":"2579:17:2"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:2"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:2"},"nodeType":"YulFunctionCall","src":"2524:13:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:2","statements":[{"nodeType":"YulAssignment","src":"2540:22:2","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:2"},"nodeType":"YulFunctionCall","src":"2549:13:2"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:2"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:2","statements":[]},"src":"2516:82:2"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:2","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:2"},"nodeType":"YulFunctionCall","src":"2163:11:2"},"nodeType":"YulIf","src":"2160:448:2"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:2","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:2","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:2","type":""}],"src":"2069:545:2"},{"body":{"nodeType":"YulBlock","src":"2704:81:2","statements":[{"nodeType":"YulAssignment","src":"2714:65:2","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:2"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:2","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:2"},"nodeType":"YulFunctionCall","src":"2743:11:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:2","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:2"},"nodeType":"YulFunctionCall","src":"2756:6:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:2"},"nodeType":"YulFunctionCall","src":"2739:24:2"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:2"},"nodeType":"YulFunctionCall","src":"2735:29:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:2"},"nodeType":"YulFunctionCall","src":"2725:40:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:2","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:2"},"nodeType":"YulFunctionCall","src":"2767:11:2"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:2"},"nodeType":"YulFunctionCall","src":"2722:57:2"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:2"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:2","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:2","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:2","type":""}],"src":"2619:166:2"},{"body":{"nodeType":"YulBlock","src":"2886:1256:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:2","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:2"},"nodeType":"YulFunctionCall","src":"2910:10:2"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:2"},"nodeType":"YulFunctionCall","src":"2965:18:2"},"nodeType":"YulExpressionStatement","src":"2965:18:2"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:2","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:2"},"nodeType":"YulFunctionCall","src":"2947:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:2"},"nodeType":"YulFunctionCall","src":"2943:18:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:2"},"nodeType":"YulFunctionCall","src":"2932:30:2"},"nodeType":"YulIf","src":"2929:56:2"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:2"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:2"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:2"},"nodeType":"YulFunctionCall","src":"3070:11:2"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:2"},"nodeType":"YulFunctionCall","src":"3044:38:2"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:2"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:2"},"nodeType":"YulFunctionCall","src":"2994:97:2"},"nodeType":"YulExpressionStatement","src":"2994:97:2"},{"nodeType":"YulVariableDeclaration","src":"3100:18:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:2","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:2","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:2","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:2","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:2"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:2"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:2","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:2"},"nodeType":"YulFunctionCall","src":"3270:7:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:2"},"nodeType":"YulFunctionCall","src":"3258:20:2"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:2","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:2"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:2"},"nodeType":"YulFunctionCall","src":"3305:35:2"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:2","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:2","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:2"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:2"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:2"},"nodeType":"YulFunctionCall","src":"3479:19:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:2"},"nodeType":"YulFunctionCall","src":"3473:26:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:2"},"nodeType":"YulFunctionCall","src":"3458:42:2"},"nodeType":"YulExpressionStatement","src":"3458:42:2"},{"nodeType":"YulAssignment","src":"3517:24:2","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:2"},"nodeType":"YulFunctionCall","src":"3527:14:2"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:2"}]},{"nodeType":"YulAssignment","src":"3558:40:2","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:2"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:2"},"nodeType":"YulFunctionCall","src":"3571:27:2"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:2"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:2"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:2"},"nodeType":"YulFunctionCall","src":"3384:14:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:2","statements":[{"nodeType":"YulAssignment","src":"3401:24:2","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:2"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:2"},"nodeType":"YulFunctionCall","src":"3406:19:2"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:2"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:2","statements":[]},"src":"3376:236:2"},{"body":{"nodeType":"YulBlock","src":"3660:166:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:2","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:2"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:2"},"nodeType":"YulFunctionCall","src":"3701:19:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:2"},"nodeType":"YulFunctionCall","src":"3695:26:2"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:2","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:2"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:2"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:2","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:2"},"nodeType":"YulFunctionCall","src":"3780:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:2","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:2"},"nodeType":"YulFunctionCall","src":"3776:24:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:2","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:2"},"nodeType":"YulFunctionCall","src":"3802:6:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:2"},"nodeType":"YulFunctionCall","src":"3772:37:2"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:2"},"nodeType":"YulFunctionCall","src":"3768:42:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:2"},"nodeType":"YulFunctionCall","src":"3753:58:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:2"},"nodeType":"YulFunctionCall","src":"3738:74:2"},"nodeType":"YulExpressionStatement","src":"3738:74:2"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:2"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:2"},"nodeType":"YulFunctionCall","src":"3628:19:2"},"nodeType":"YulIf","src":"3625:201:2"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:2","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:2"},"nodeType":"YulFunctionCall","src":"3856:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:2"},"nodeType":"YulFunctionCall","src":"3852:22:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:2"},"nodeType":"YulFunctionCall","src":"3839:36:2"},"nodeType":"YulExpressionStatement","src":"3839:36:2"}]},"nodeType":"YulCase","src":"3222:663:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:2","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:2","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:2","statements":[{"nodeType":"YulAssignment","src":"3983:35:2","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:2"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:2"},"nodeType":"YulFunctionCall","src":"3998:19:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:2"},"nodeType":"YulFunctionCall","src":"3992:26:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:2"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:2"},"nodeType":"YulIf","src":"3943:89:2"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:2"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:2"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:2"},"nodeType":"YulFunctionCall","src":"4058:67:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:2"},"nodeType":"YulFunctionCall","src":"4045:81:2"},"nodeType":"YulExpressionStatement","src":"4045:81:2"}]},"nodeType":"YulCase","src":"3894:242:2","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:2","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:2"},"nodeType":"YulFunctionCall","src":"3199:14:2"},"nodeType":"YulSwitch","src":"3192:944:2"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:2","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:2","type":""}],"src":"2790:1352:2"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052655af3107a40006004556005805460ff191660061790553480156200002857600080fd5b50604051620011dc380380620011dc8339810160408190526200004b916200018a565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060076200009a838262000283565b506006620000a9828262000283565b505060045433600090815260016020526040902055506200034f565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ed57600080fd5b81516001600160401b03808211156200010a576200010a620000c5565b604051601f8301601f19908116603f01168101908282118183101715620001355762000135620000c5565b816040528381526020925086838588010111156200015257600080fd5b600091505b8382101562000176578582018301518183018401529082019062000157565b600093810190920192909252949350505050565b600080604083850312156200019e57600080fd5b82516001600160401b0380821115620001b657600080fd5b620001c486838701620000db565b93506020850151915080821115620001db57600080fd5b50620001ea85828601620000db565b9150509250929050565b600181811c908216806200020957607f821691505b6020821081036200022a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027e57600081815260208120601f850160051c81016020861015620002595750805b601f850160051c820191505b818110156200027a5782815560010162000265565b5050505b505050565b81516001600160401b038111156200029f576200029f620000c5565b620002b781620002b08454620001f4565b8462000230565b602080601f831160018114620002ef5760008415620002d65750858301515b600019600386901b1c1916600185901b1785556200027a565b600085815260208120601f198616915b828110156200032057888601518255948401946001909101908401620002ff565b50858210156200033f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e7d806200035f6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610261578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102c857600080fd5b806370a08231146101fa578063715018a614610223578063893d20e81461022b5780638da5cb5b1461025057600080fd5b80632206035f116100e95780632206035f1461019757806323b872dd146101aa578063313ce567146101bd57806339509351146101d257806342966c68146101e557600080fd5b8063069f5bdd1461011b57806306fdde0314610157578063095ea7b31461016c57806318160ddd1461018f575b600080fd5b610144610129366004610c21565b6001600160a01b031660009081526003602052604090205490565b6040519081526020015b60405180910390f35b61015f6102db565b60405161014e9190610c3c565b61017f61017a366004610c8a565b61036d565b604051901515815260200161014e565b600454610144565b61017f6101a5366004610c8a565b610384565b61017f6101b8366004610cb4565b610428565b60055460405160ff909116815260200161014e565b61017f6101e0366004610c8a565b610491565b6101f86101f3366004610cf0565b6104c7565b005b610144610208366004610c21565b6001600160a01b031660009081526001602052604090205490565b6101f86104d4565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161014e565b6000546001600160a01b0316610238565b61015f61057d565b61017f610277366004610c8a565b61058c565b61017f61028a366004610c8a565b6105db565b61014461029d366004610d09565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101f86102d6366004610c21565b6105e8565b6060600780546102ea90610d3c565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610d3c565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b600061037a33848461064b565b5060015b92915050565b6001600160a01b038216600090815260036020526040812054156103a757600080fd5b6001600160a01b038316600090815260036020908152604080832085905560019091529020546103d79083610770565b6001600160a01b03848116600090815260016020526040812083905554169061040090846107d6565b6001600160a01b03909116600090815260016020819052604090912091909155905092915050565b6000610435848484610818565b610487843361048285604051806060016040528060288152602001610db3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610a00565b61064b565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161037a9185906104829086610770565b6104d13382610a3a565b50565b6000546001600160a01b031633146105335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600680546102ea90610d3c565b600061037a338461048285604051806060016040528060258152602001610e01602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610a00565b600061037a338484610818565b6000546001600160a01b031633146106425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052a565b6104d181610b45565b6001600160a01b0383166106ad5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052a565b6001600160a01b03821661070e5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60008061077d8385610d8c565b9050838110156107cf5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161052a565b9392505050565b60006107cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a00565b6001600160a01b03831661087c5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052a565b6001600160a01b0382166108de5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052a565b336000908152600360205260409020541561094057336000908152600360209081526040808320546001600160a01b0387168452600190925282205490919061093390839061092d90866107d6565b906107d6565b101561093e57600080fd5b505b61097d81604051806060016040528060268152602001610ddb602691396001600160a01b0386166000908152600160205260409020549190610a00565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109ac9082610770565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107639085815260200190565b60008184841115610a245760405162461bcd60e51b815260040161052a9190610c3c565b506000610a318486610d9f565b95945050505050565b6001600160a01b038216610a9a5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161052a565b610ad781604051806060016040528060228152602001610e26602291396001600160a01b0385166000908152600160205260409020549190610a00565b6001600160a01b038316600090815260016020526040902055600454610afd90826107d6565b6004556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038116610baa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610c1c57600080fd5b919050565b600060208284031215610c3357600080fd5b6107cf82610c05565b600060208083528351808285015260005b81811015610c6957858101830151858201604001528201610c4d565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610c9d57600080fd5b610ca683610c05565b946020939093013593505050565b600080600060608486031215610cc957600080fd5b610cd284610c05565b9250610ce060208501610c05565b9150604084013590509250925092565b600060208284031215610d0257600080fd5b5035919050565b60008060408385031215610d1c57600080fd5b610d2583610c05565b9150610d3360208401610c05565b90509250929050565b600181811c90821680610d5057607f821691505b602082108103610d7057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037e5761037e610d76565b8181038181111561037e5761037e610d7656fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220c972432e1bc4e2ffa8b16691970c27576bfe073cc097a9277c6b9aed2707c43164736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH6 0x5AF3107A4000 PUSH1 0x4 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x6 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11DC CODESIZE SUB DUP1 PUSH3 0x11DC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4B SWAP2 PUSH3 0x18A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x7 PUSH3 0x9A DUP4 DUP3 PUSH3 0x283 JUMP JUMPDEST POP PUSH1 0x6 PUSH3 0xA9 DUP3 DUP3 PUSH3 0x283 JUMP JUMPDEST POP POP PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH3 0x34F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH3 0x10A PUSH3 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x135 JUMPI PUSH3 0x135 PUSH3 0xC5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x176 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1C4 DUP7 DUP4 DUP8 ADD PUSH3 0xDB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1EA DUP6 DUP3 DUP7 ADD PUSH3 0xDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x209 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x22A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x27E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x259 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x27A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x265 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x29F JUMPI PUSH3 0x29F PUSH3 0xC5 JUMP JUMPDEST PUSH3 0x2B7 DUP2 PUSH3 0x2B0 DUP5 SLOAD PUSH3 0x1F4 JUMP JUMPDEST DUP5 PUSH3 0x230 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2EF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2D6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x27A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x320 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2FF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x33F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE7D DUP1 PUSH3 0x35F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2206035F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2206035F EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69F5BDD EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x144 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x57D JUMP JUMPDEST PUSH2 0x17F PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x144 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x316 SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3D7 SWAP1 DUP4 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE SLOAD AND SWAP1 PUSH2 0x400 SWAP1 DUP5 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x435 DUP5 DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x487 DUP5 CALLER PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB3 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x37A SWAP2 DUP6 SWAP1 PUSH2 0x482 SWAP1 DUP7 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x4D1 CALLER DUP3 PUSH2 0xA3A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE01 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0x4D1 DUP2 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77D DUP4 DUP6 PUSH2 0xD8C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x940 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x933 SWAP1 DUP4 SWAP1 PUSH2 0x92D SWAP1 DUP7 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 PUSH2 0x7D6 JUMP JUMPDEST LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x97D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x9AC SWAP1 DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x763 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA31 DUP5 DUP7 PUSH2 0xD9F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE26 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0xAFD SWAP1 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP3 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC69 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA6 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD2 DUP5 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE0 PUSH1 0x20 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD25 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH2 0xD33 PUSH1 0x20 DUP5 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 0xC9 PUSH19 0x432E1BC4E2FFA8B16691970C27576BFE073CC0 SWAP8 0xA9 0x27 PUSH29 0x6B9AED2707C43164736F6C634300081200330000000000000000000000 ","sourceMap":"7296:5575:0:-:0;;;7777:9;7746:40;;7799:27;;;-1:-1:-1;;7799:27:0;7825:1;7799:27;;;7887:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;853:17;895:18;;-1:-1:-1;;;;;;895:18:0;309:10;895:18;;;;;928:43;;309:10;;;;928:43;;853:17;;928:43;-1:-1:-1;7961:5:0;:17;7969:9;7961:5;:17;:::i;:::-;-1:-1:-1;7988:7:0;:21;7998:11;7988:7;:21;:::i;:::-;-1:-1:-1;;8043:12:0;;8029:10;8019:21;;;;:9;:21;;;;;:36;-1:-1:-1;7296:5575:0;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:2;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:2;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:2:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:2;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:2;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:2;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:2;;;3992:26;3943:89;-1:-1:-1;;2747:1:2;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:2;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:2;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:2;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:2:o;:::-;7296:5575:0;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_832":{"entryPoint":1611,"id":832,"parameterSlots":3,"returnSlots":0},"@_burn_788":{"entryPoint":2618,"id":788,"parameterSlots":2,"returnSlots":0},"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_155":{"entryPoint":2885,"id":155,"parameterSlots":1,"returnSlots":0},"@_transfer_950":{"entryPoint":2072,"id":950,"parameterSlots":3,"returnSlots":0},"@add_182":{"entryPoint":1904,"id":182,"parameterSlots":2,"returnSlots":1},"@allowance_575":{"entryPoint":null,"id":575,"parameterSlots":2,"returnSlots":1},"@approve_594":{"entryPoint":877,"id":594,"parameterSlots":2,"returnSlots":1},"@balanceOf_465":{"entryPoint":null,"id":465,"parameterSlots":1,"returnSlots":1},"@burn_697":{"entryPoint":1223,"id":697,"parameterSlots":1,"returnSlots":0},"@decimals_429":{"entryPoint":null,"id":429,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_685":{"entryPoint":1420,"id":685,"parameterSlots":2,"returnSlots":1},"@getAirdrop_540":{"entryPoint":null,"id":540,"parameterSlots":1,"returnSlots":1},"@getOwner_474":{"entryPoint":null,"id":474,"parameterSlots":0,"returnSlots":1},"@increaseAllowance_657":{"entryPoint":1169,"id":657,"parameterSlots":2,"returnSlots":1},"@name_445":{"entryPoint":731,"id":445,"parameterSlots":0,"returnSlots":1},"@owner_81":{"entryPoint":null,"id":81,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_116":{"entryPoint":1236,"id":116,"parameterSlots":0,"returnSlots":0},"@setAirdrop_528":{"entryPoint":900,"id":528,"parameterSlots":2,"returnSlots":1},"@sub_199":{"entryPoint":2006,"id":199,"parameterSlots":2,"returnSlots":1},"@sub_227":{"entryPoint":2560,"id":227,"parameterSlots":3,"returnSlots":1},"@symbol_437":{"entryPoint":1405,"id":437,"parameterSlots":0,"returnSlots":1},"@totalSupply_453":{"entryPoint":null,"id":453,"parameterSlots":0,"returnSlots":1},"@transferFrom_630":{"entryPoint":1064,"id":630,"parameterSlots":3,"returnSlots":1},"@transferOwnership_129":{"entryPoint":1512,"id":129,"parameterSlots":1,"returnSlots":0},"@transfer_559":{"entryPoint":1499,"id":559,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":3077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3337,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3252,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3210,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3468,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3487,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3388,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3446,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6670:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:2","statements":[{"nodeType":"YulAssignment","src":"73:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:2"},"nodeType":"YulFunctionCall","src":"82:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:2"}]},{"body":{"nodeType":"YulBlock","src":"165:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:2"},"nodeType":"YulFunctionCall","src":"167:12:2"},"nodeType":"YulExpressionStatement","src":"167:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:2"},"nodeType":"YulFunctionCall","src":"146:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:2"},"nodeType":"YulFunctionCall","src":"142:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:2"},"nodeType":"YulFunctionCall","src":"131:31:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:2"},"nodeType":"YulFunctionCall","src":"121:42:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:2"},"nodeType":"YulFunctionCall","src":"114:50:2"},"nodeType":"YulIf","src":"111:70:2"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:2","type":""}],"src":"14:173:2"},{"body":{"nodeType":"YulBlock","src":"262:116:2","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:2"},"nodeType":"YulFunctionCall","src":"279:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:2"},"nodeType":"YulFunctionCall","src":"275:32:2"},"nodeType":"YulIf","src":"272:52:2"},{"nodeType":"YulAssignment","src":"333:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:2"},"nodeType":"YulFunctionCall","src":"343:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:2"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:2","type":""}],"src":"192:186:2"},{"body":{"nodeType":"YulBlock","src":"484:76:2","statements":[{"nodeType":"YulAssignment","src":"494:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:2"},"nodeType":"YulFunctionCall","src":"502:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"536:9:2"},{"name":"value0","nodeType":"YulIdentifier","src":"547:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"529:6:2"},"nodeType":"YulFunctionCall","src":"529:25:2"},"nodeType":"YulExpressionStatement","src":"529:25:2"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"453:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"464:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"475:4:2","type":""}],"src":"383:177:2"},{"body":{"nodeType":"YulBlock","src":"686:427:2","statements":[{"nodeType":"YulVariableDeclaration","src":"696:12:2","value":{"kind":"number","nodeType":"YulLiteral","src":"706:2:2","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"700:2:2","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"724:9:2"},{"name":"_1","nodeType":"YulIdentifier","src":"735:2:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"717:6:2"},"nodeType":"YulFunctionCall","src":"717:21:2"},"nodeType":"YulExpressionStatement","src":"717:21:2"},{"nodeType":"YulVariableDeclaration","src":"747:27:2","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"767:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"761:5:2"},"nodeType":"YulFunctionCall","src":"761:13:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"751:6:2","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"794:9:2"},{"name":"_1","nodeType":"YulIdentifier","src":"805:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"790:3:2"},"nodeType":"YulFunctionCall","src":"790:18:2"},{"name":"length","nodeType":"YulIdentifier","src":"810:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"783:6:2"},"nodeType":"YulFunctionCall","src":"783:34:2"},"nodeType":"YulExpressionStatement","src":"783:34:2"},{"nodeType":"YulVariableDeclaration","src":"826:10:2","value":{"kind":"number","nodeType":"YulLiteral","src":"835:1:2","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"830:1:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"895:90:2","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"924:9:2"},{"name":"i","nodeType":"YulIdentifier","src":"935:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"920:3:2"},"nodeType":"YulFunctionCall","src":"920:17:2"},{"kind":"number","nodeType":"YulLiteral","src":"939:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"916:3:2"},"nodeType":"YulFunctionCall","src":"916:26:2"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"958:6:2"},{"name":"i","nodeType":"YulIdentifier","src":"966:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"954:3:2"},"nodeType":"YulFunctionCall","src":"954:14:2"},{"name":"_1","nodeType":"YulIdentifier","src":"970:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"950:3:2"},"nodeType":"YulFunctionCall","src":"950:23:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"944:5:2"},"nodeType":"YulFunctionCall","src":"944:30:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"909:6:2"},"nodeType":"YulFunctionCall","src":"909:66:2"},"nodeType":"YulExpressionStatement","src":"909:66:2"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"856:1:2"},{"name":"length","nodeType":"YulIdentifier","src":"859:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"853:2:2"},"nodeType":"YulFunctionCall","src":"853:13:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"867:19:2","statements":[{"nodeType":"YulAssignment","src":"869:15:2","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"878:1:2"},{"name":"_1","nodeType":"YulIdentifier","src":"881:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"874:3:2"},"nodeType":"YulFunctionCall","src":"874:10:2"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"869:1:2"}]}]},"pre":{"nodeType":"YulBlock","src":"849:3:2","statements":[]},"src":"845:140:2"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1009:9:2"},{"name":"length","nodeType":"YulIdentifier","src":"1020:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:2"},"nodeType":"YulFunctionCall","src":"1005:22:2"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1001:3:2"},"nodeType":"YulFunctionCall","src":"1001:31:2"},{"kind":"number","nodeType":"YulLiteral","src":"1034:1:2","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"994:6:2"},"nodeType":"YulFunctionCall","src":"994:42:2"},"nodeType":"YulExpressionStatement","src":"994:42:2"},{"nodeType":"YulAssignment","src":"1045:62:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1061:9:2"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1080:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1088:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1076:3:2"},"nodeType":"YulFunctionCall","src":"1076:15:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1097:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1093:3:2"},"nodeType":"YulFunctionCall","src":"1093:7:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1072:3:2"},"nodeType":"YulFunctionCall","src":"1072:29:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:2"},"nodeType":"YulFunctionCall","src":"1057:45:2"},{"kind":"number","nodeType":"YulLiteral","src":"1104:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1053:3:2"},"nodeType":"YulFunctionCall","src":"1053:54:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1045:4:2"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"655:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"666:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"677:4:2","type":""}],"src":"565:548:2"},{"body":{"nodeType":"YulBlock","src":"1205:167:2","statements":[{"body":{"nodeType":"YulBlock","src":"1251:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1260:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1263:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1253:6:2"},"nodeType":"YulFunctionCall","src":"1253:12:2"},"nodeType":"YulExpressionStatement","src":"1253:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1226:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1235:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1222:3:2"},"nodeType":"YulFunctionCall","src":"1222:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1247:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1218:3:2"},"nodeType":"YulFunctionCall","src":"1218:32:2"},"nodeType":"YulIf","src":"1215:52:2"},{"nodeType":"YulAssignment","src":"1276:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1305:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1286:18:2"},"nodeType":"YulFunctionCall","src":"1286:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1276:6:2"}]},{"nodeType":"YulAssignment","src":"1324:42:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1351:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1362:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1347:3:2"},"nodeType":"YulFunctionCall","src":"1347:18:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1334:12:2"},"nodeType":"YulFunctionCall","src":"1334:32:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1324:6:2"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1163:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1174:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1186:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1194:6:2","type":""}],"src":"1118:254:2"},{"body":{"nodeType":"YulBlock","src":"1472:92:2","statements":[{"nodeType":"YulAssignment","src":"1482:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1494:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1505:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1490:3:2"},"nodeType":"YulFunctionCall","src":"1490:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1482:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1524:9:2"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1549:6:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1542:6:2"},"nodeType":"YulFunctionCall","src":"1542:14:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1535:6:2"},"nodeType":"YulFunctionCall","src":"1535:22:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1517:6:2"},"nodeType":"YulFunctionCall","src":"1517:41:2"},"nodeType":"YulExpressionStatement","src":"1517:41:2"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1441:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1452:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1463:4:2","type":""}],"src":"1377:187:2"},{"body":{"nodeType":"YulBlock","src":"1673:224:2","statements":[{"body":{"nodeType":"YulBlock","src":"1719:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1728:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1721:6:2"},"nodeType":"YulFunctionCall","src":"1721:12:2"},"nodeType":"YulExpressionStatement","src":"1721:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1694:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1703:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1690:3:2"},"nodeType":"YulFunctionCall","src":"1690:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:2","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1686:3:2"},"nodeType":"YulFunctionCall","src":"1686:32:2"},"nodeType":"YulIf","src":"1683:52:2"},{"nodeType":"YulAssignment","src":"1744:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1773:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1754:18:2"},"nodeType":"YulFunctionCall","src":"1754:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1744:6:2"}]},{"nodeType":"YulAssignment","src":"1792:48:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1825:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1836:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:2"},"nodeType":"YulFunctionCall","src":"1821:18:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1802:18:2"},"nodeType":"YulFunctionCall","src":"1802:38:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1792:6:2"}]},{"nodeType":"YulAssignment","src":"1849:42:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1876:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1887:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1872:3:2"},"nodeType":"YulFunctionCall","src":"1872:18:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1859:12:2"},"nodeType":"YulFunctionCall","src":"1859:32:2"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1849:6:2"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1623:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1634:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1646:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1654:6:2","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1662:6:2","type":""}],"src":"1569:328:2"},{"body":{"nodeType":"YulBlock","src":"1999:87:2","statements":[{"nodeType":"YulAssignment","src":"2009:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2021:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2032:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2017:3:2"},"nodeType":"YulFunctionCall","src":"2017:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2009:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2051:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2066:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"2074:4:2","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2062:3:2"},"nodeType":"YulFunctionCall","src":"2062:17:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2044:6:2"},"nodeType":"YulFunctionCall","src":"2044:36:2"},"nodeType":"YulExpressionStatement","src":"2044:36:2"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1968:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1979:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1990:4:2","type":""}],"src":"1902:184:2"},{"body":{"nodeType":"YulBlock","src":"2161:110:2","statements":[{"body":{"nodeType":"YulBlock","src":"2207:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2216:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2219:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2209:6:2"},"nodeType":"YulFunctionCall","src":"2209:12:2"},"nodeType":"YulExpressionStatement","src":"2209:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2182:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"2191:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2178:3:2"},"nodeType":"YulFunctionCall","src":"2178:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"2203:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2174:3:2"},"nodeType":"YulFunctionCall","src":"2174:32:2"},"nodeType":"YulIf","src":"2171:52:2"},{"nodeType":"YulAssignment","src":"2232:33:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2242:12:2"},"nodeType":"YulFunctionCall","src":"2242:23:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2232:6:2"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2127:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2138:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2150:6:2","type":""}],"src":"2091:180:2"},{"body":{"nodeType":"YulBlock","src":"2377:102:2","statements":[{"nodeType":"YulAssignment","src":"2387:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2410:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:2"},"nodeType":"YulFunctionCall","src":"2395:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2387:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2444:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2460:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2465:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2456:3:2"},"nodeType":"YulFunctionCall","src":"2456:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"2469:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2452:3:2"},"nodeType":"YulFunctionCall","src":"2452:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2440:3:2"},"nodeType":"YulFunctionCall","src":"2440:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2422:6:2"},"nodeType":"YulFunctionCall","src":"2422:51:2"},"nodeType":"YulExpressionStatement","src":"2422:51:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2346:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2357:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2368:4:2","type":""}],"src":"2276:203:2"},{"body":{"nodeType":"YulBlock","src":"2571:173:2","statements":[{"body":{"nodeType":"YulBlock","src":"2617:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2626:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2629:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2619:6:2"},"nodeType":"YulFunctionCall","src":"2619:12:2"},"nodeType":"YulExpressionStatement","src":"2619:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2592:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2588:3:2"},"nodeType":"YulFunctionCall","src":"2588:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"2613:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2584:3:2"},"nodeType":"YulFunctionCall","src":"2584:32:2"},"nodeType":"YulIf","src":"2581:52:2"},{"nodeType":"YulAssignment","src":"2642:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2671:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2652:18:2"},"nodeType":"YulFunctionCall","src":"2652:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2642:6:2"}]},{"nodeType":"YulAssignment","src":"2690:48:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2723:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2734:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2719:3:2"},"nodeType":"YulFunctionCall","src":"2719:18:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2700:18:2"},"nodeType":"YulFunctionCall","src":"2700:38:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2690:6:2"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2529:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2540:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2552:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2560:6:2","type":""}],"src":"2484:260:2"},{"body":{"nodeType":"YulBlock","src":"2804:325:2","statements":[{"nodeType":"YulAssignment","src":"2814:22:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2828:1:2","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2831:4:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2824:3:2"},"nodeType":"YulFunctionCall","src":"2824:12:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2814:6:2"}]},{"nodeType":"YulVariableDeclaration","src":"2845:38:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2875:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"2881:1:2","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2871:3:2"},"nodeType":"YulFunctionCall","src":"2871:12:2"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2849:18:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"2922:31:2","statements":[{"nodeType":"YulAssignment","src":"2924:27:2","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2938:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"2946:4:2","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2934:3:2"},"nodeType":"YulFunctionCall","src":"2934:17:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2924:6:2"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2902:18:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2895:6:2"},"nodeType":"YulFunctionCall","src":"2895:26:2"},"nodeType":"YulIf","src":"2892:61:2"},{"body":{"nodeType":"YulBlock","src":"3012:111:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3033:1:2","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3040:3:2","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3045:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3036:3:2"},"nodeType":"YulFunctionCall","src":"3036:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3026:6:2"},"nodeType":"YulFunctionCall","src":"3026:31:2"},"nodeType":"YulExpressionStatement","src":"3026:31:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3077:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3080:4:2","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3070:6:2"},"nodeType":"YulFunctionCall","src":"3070:15:2"},"nodeType":"YulExpressionStatement","src":"3070:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3105:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3108:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3098:6:2"},"nodeType":"YulFunctionCall","src":"3098:15:2"},"nodeType":"YulExpressionStatement","src":"3098:15:2"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2968:18:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2991:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"2999:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2988:2:2"},"nodeType":"YulFunctionCall","src":"2988:14:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2965:2:2"},"nodeType":"YulFunctionCall","src":"2965:38:2"},"nodeType":"YulIf","src":"2962:161:2"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2784:4:2","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2793:6:2","type":""}],"src":"2749:380:2"},{"body":{"nodeType":"YulBlock","src":"3308:182:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3325:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3336:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:2"},"nodeType":"YulFunctionCall","src":"3318:21:2"},"nodeType":"YulExpressionStatement","src":"3318:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3359:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3370:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3355:3:2"},"nodeType":"YulFunctionCall","src":"3355:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"3375:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:2"},"nodeType":"YulFunctionCall","src":"3348:30:2"},"nodeType":"YulExpressionStatement","src":"3348:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3398:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3394:3:2"},"nodeType":"YulFunctionCall","src":"3394:18:2"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"3414:34:2","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3387:6:2"},"nodeType":"YulFunctionCall","src":"3387:62:2"},"nodeType":"YulExpressionStatement","src":"3387:62:2"},{"nodeType":"YulAssignment","src":"3458:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3470:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3481:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3466:3:2"},"nodeType":"YulFunctionCall","src":"3466:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3458:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3285:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3299:4:2","type":""}],"src":"3134:356:2"},{"body":{"nodeType":"YulBlock","src":"3669:226:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3686:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3697:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:2"},"nodeType":"YulFunctionCall","src":"3679:21:2"},"nodeType":"YulExpressionStatement","src":"3679:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3720:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3731:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3716:3:2"},"nodeType":"YulFunctionCall","src":"3716:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"3736:2:2","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3709:6:2"},"nodeType":"YulFunctionCall","src":"3709:30:2"},"nodeType":"YulExpressionStatement","src":"3709:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3759:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3770:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3755:3:2"},"nodeType":"YulFunctionCall","src":"3755:18:2"},{"hexValue":"42455032303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3775:34:2","type":"","value":"BEP20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3748:6:2"},"nodeType":"YulFunctionCall","src":"3748:62:2"},"nodeType":"YulExpressionStatement","src":"3748:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3830:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3841:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3826:3:2"},"nodeType":"YulFunctionCall","src":"3826:18:2"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3846:6:2","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3819:6:2"},"nodeType":"YulFunctionCall","src":"3819:34:2"},"nodeType":"YulExpressionStatement","src":"3819:34:2"},{"nodeType":"YulAssignment","src":"3862:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3874:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3885:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:2"},"nodeType":"YulFunctionCall","src":"3870:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3862:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3646:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3660:4:2","type":""}],"src":"3495:400:2"},{"body":{"nodeType":"YulBlock","src":"4074:224:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4091:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4102:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4084:6:2"},"nodeType":"YulFunctionCall","src":"4084:21:2"},"nodeType":"YulExpressionStatement","src":"4084:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4125:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4136:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4121:3:2"},"nodeType":"YulFunctionCall","src":"4121:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"4141:2:2","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4114:6:2"},"nodeType":"YulFunctionCall","src":"4114:30:2"},"nodeType":"YulExpressionStatement","src":"4114:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4175:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:2"},"nodeType":"YulFunctionCall","src":"4160:18:2"},{"hexValue":"42455032303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4180:34:2","type":"","value":"BEP20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4153:6:2"},"nodeType":"YulFunctionCall","src":"4153:62:2"},"nodeType":"YulExpressionStatement","src":"4153:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4235:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4246:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4231:3:2"},"nodeType":"YulFunctionCall","src":"4231:18:2"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4251:4:2","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4224:6:2"},"nodeType":"YulFunctionCall","src":"4224:32:2"},"nodeType":"YulExpressionStatement","src":"4224:32:2"},{"nodeType":"YulAssignment","src":"4265:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4277:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4288:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:2"},"nodeType":"YulFunctionCall","src":"4273:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4265:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4051:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4065:4:2","type":""}],"src":"3900:398:2"},{"body":{"nodeType":"YulBlock","src":"4335:95:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4352:1:2","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:3:2","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4364:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4355:3:2"},"nodeType":"YulFunctionCall","src":"4355:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4345:6:2"},"nodeType":"YulFunctionCall","src":"4345:31:2"},"nodeType":"YulExpressionStatement","src":"4345:31:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4392:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4395:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4385:6:2"},"nodeType":"YulFunctionCall","src":"4385:15:2"},"nodeType":"YulExpressionStatement","src":"4385:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4416:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4419:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4409:6:2"},"nodeType":"YulFunctionCall","src":"4409:15:2"},"nodeType":"YulExpressionStatement","src":"4409:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4303:127:2"},{"body":{"nodeType":"YulBlock","src":"4483:77:2","statements":[{"nodeType":"YulAssignment","src":"4493:16:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4504:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"4507:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4500:3:2"},"nodeType":"YulFunctionCall","src":"4500:9:2"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4493:3:2"}]},{"body":{"nodeType":"YulBlock","src":"4532:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4534:16:2"},"nodeType":"YulFunctionCall","src":"4534:18:2"},"nodeType":"YulExpressionStatement","src":"4534:18:2"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4524:1:2"},{"name":"sum","nodeType":"YulIdentifier","src":"4527:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4521:2:2"},"nodeType":"YulFunctionCall","src":"4521:10:2"},"nodeType":"YulIf","src":"4518:36:2"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4466:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"4469:1:2","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4475:3:2","type":""}],"src":"4435:125:2"},{"body":{"nodeType":"YulBlock","src":"4739:177:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4756:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4767:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4749:6:2"},"nodeType":"YulFunctionCall","src":"4749:21:2"},"nodeType":"YulExpressionStatement","src":"4749:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4790:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4801:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4786:3:2"},"nodeType":"YulFunctionCall","src":"4786:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"4806:2:2","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4779:6:2"},"nodeType":"YulFunctionCall","src":"4779:30:2"},"nodeType":"YulExpressionStatement","src":"4779:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4829:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4840:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4825:3:2"},"nodeType":"YulFunctionCall","src":"4825:18:2"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"4845:29:2","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4818:6:2"},"nodeType":"YulFunctionCall","src":"4818:57:2"},"nodeType":"YulExpressionStatement","src":"4818:57:2"},{"nodeType":"YulAssignment","src":"4884:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4896:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4907:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4892:3:2"},"nodeType":"YulFunctionCall","src":"4892:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4884:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4716:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4730:4:2","type":""}],"src":"4565:351:2"},{"body":{"nodeType":"YulBlock","src":"5095:227:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5112:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5123:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5105:6:2"},"nodeType":"YulFunctionCall","src":"5105:21:2"},"nodeType":"YulExpressionStatement","src":"5105:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5146:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5157:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5142:3:2"},"nodeType":"YulFunctionCall","src":"5142:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"5162:2:2","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5135:6:2"},"nodeType":"YulFunctionCall","src":"5135:30:2"},"nodeType":"YulExpressionStatement","src":"5135:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5196:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:2"},"nodeType":"YulFunctionCall","src":"5181:18:2"},{"hexValue":"42455032303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5201:34:2","type":"","value":"BEP20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5174:6:2"},"nodeType":"YulFunctionCall","src":"5174:62:2"},"nodeType":"YulExpressionStatement","src":"5174:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5267:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:2"},"nodeType":"YulFunctionCall","src":"5252:18:2"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5272:7:2","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5245:6:2"},"nodeType":"YulFunctionCall","src":"5245:35:2"},"nodeType":"YulExpressionStatement","src":"5245:35:2"},{"nodeType":"YulAssignment","src":"5289:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5312:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5297:3:2"},"nodeType":"YulFunctionCall","src":"5297:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5289:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5072:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5086:4:2","type":""}],"src":"4921:401:2"},{"body":{"nodeType":"YulBlock","src":"5501:225:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5518:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5529:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5511:6:2"},"nodeType":"YulFunctionCall","src":"5511:21:2"},"nodeType":"YulExpressionStatement","src":"5511:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5552:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5563:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5548:3:2"},"nodeType":"YulFunctionCall","src":"5548:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"5568:2:2","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5541:6:2"},"nodeType":"YulFunctionCall","src":"5541:30:2"},"nodeType":"YulExpressionStatement","src":"5541:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5591:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5602:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5587:3:2"},"nodeType":"YulFunctionCall","src":"5587:18:2"},{"hexValue":"42455032303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5607:34:2","type":"","value":"BEP20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5580:6:2"},"nodeType":"YulFunctionCall","src":"5580:62:2"},"nodeType":"YulExpressionStatement","src":"5580:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5662:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5673:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5658:3:2"},"nodeType":"YulFunctionCall","src":"5658:18:2"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5678:5:2","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5651:6:2"},"nodeType":"YulFunctionCall","src":"5651:33:2"},"nodeType":"YulExpressionStatement","src":"5651:33:2"},{"nodeType":"YulAssignment","src":"5693:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5705:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5716:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5701:3:2"},"nodeType":"YulFunctionCall","src":"5701:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5693:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5478:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5492:4:2","type":""}],"src":"5327:399:2"},{"body":{"nodeType":"YulBlock","src":"5780:79:2","statements":[{"nodeType":"YulAssignment","src":"5790:17:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5802:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"5805:1:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5798:3:2"},"nodeType":"YulFunctionCall","src":"5798:9:2"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5790:4:2"}]},{"body":{"nodeType":"YulBlock","src":"5831:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5833:16:2"},"nodeType":"YulFunctionCall","src":"5833:18:2"},"nodeType":"YulExpressionStatement","src":"5833:18:2"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5822:4:2"},{"name":"x","nodeType":"YulIdentifier","src":"5828:1:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5819:2:2"},"nodeType":"YulFunctionCall","src":"5819:11:2"},"nodeType":"YulIf","src":"5816:37:2"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5762:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"5765:1:2","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5771:4:2","type":""}],"src":"5731:128:2"},{"body":{"nodeType":"YulBlock","src":"6038:223:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6055:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6048:6:2"},"nodeType":"YulFunctionCall","src":"6048:21:2"},"nodeType":"YulExpressionStatement","src":"6048:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6089:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6100:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6085:3:2"},"nodeType":"YulFunctionCall","src":"6085:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:2","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6078:6:2"},"nodeType":"YulFunctionCall","src":"6078:30:2"},"nodeType":"YulExpressionStatement","src":"6078:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6128:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6139:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6124:3:2"},"nodeType":"YulFunctionCall","src":"6124:18:2"},{"hexValue":"42455032303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"6144:34:2","type":"","value":"BEP20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6117:6:2"},"nodeType":"YulFunctionCall","src":"6117:62:2"},"nodeType":"YulExpressionStatement","src":"6117:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6199:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6210:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6195:3:2"},"nodeType":"YulFunctionCall","src":"6195:18:2"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"6215:3:2","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6188:6:2"},"nodeType":"YulFunctionCall","src":"6188:31:2"},"nodeType":"YulExpressionStatement","src":"6188:31:2"},{"nodeType":"YulAssignment","src":"6228:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6240:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6251:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6236:3:2"},"nodeType":"YulFunctionCall","src":"6236:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6228:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6015:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6029:4:2","type":""}],"src":"5864:397:2"},{"body":{"nodeType":"YulBlock","src":"6440:228:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6457:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6468:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6450:6:2"},"nodeType":"YulFunctionCall","src":"6450:21:2"},"nodeType":"YulExpressionStatement","src":"6450:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6491:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6502:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6487:3:2"},"nodeType":"YulFunctionCall","src":"6487:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"6507:2:2","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6480:6:2"},"nodeType":"YulFunctionCall","src":"6480:30:2"},"nodeType":"YulExpressionStatement","src":"6480:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6530:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6541:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6526:3:2"},"nodeType":"YulFunctionCall","src":"6526:18:2"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"6546:34:2","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6519:6:2"},"nodeType":"YulFunctionCall","src":"6519:62:2"},"nodeType":"YulExpressionStatement","src":"6519:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6601:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6612:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6597:3:2"},"nodeType":"YulFunctionCall","src":"6597:18:2"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"6617:8:2","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6590:6:2"},"nodeType":"YulFunctionCall","src":"6590:36:2"},"nodeType":"YulExpressionStatement","src":"6590:36:2"},{"nodeType":"YulAssignment","src":"6635:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6647:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6658:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6643:3:2"},"nodeType":"YulFunctionCall","src":"6643:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6635:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6417:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6431:4:2","type":""}],"src":"6266:402:2"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"BEP20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610261578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102c857600080fd5b806370a08231146101fa578063715018a614610223578063893d20e81461022b5780638da5cb5b1461025057600080fd5b80632206035f116100e95780632206035f1461019757806323b872dd146101aa578063313ce567146101bd57806339509351146101d257806342966c68146101e557600080fd5b8063069f5bdd1461011b57806306fdde0314610157578063095ea7b31461016c57806318160ddd1461018f575b600080fd5b610144610129366004610c21565b6001600160a01b031660009081526003602052604090205490565b6040519081526020015b60405180910390f35b61015f6102db565b60405161014e9190610c3c565b61017f61017a366004610c8a565b61036d565b604051901515815260200161014e565b600454610144565b61017f6101a5366004610c8a565b610384565b61017f6101b8366004610cb4565b610428565b60055460405160ff909116815260200161014e565b61017f6101e0366004610c8a565b610491565b6101f86101f3366004610cf0565b6104c7565b005b610144610208366004610c21565b6001600160a01b031660009081526001602052604090205490565b6101f86104d4565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161014e565b6000546001600160a01b0316610238565b61015f61057d565b61017f610277366004610c8a565b61058c565b61017f61028a366004610c8a565b6105db565b61014461029d366004610d09565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101f86102d6366004610c21565b6105e8565b6060600780546102ea90610d3c565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610d3c565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b600061037a33848461064b565b5060015b92915050565b6001600160a01b038216600090815260036020526040812054156103a757600080fd5b6001600160a01b038316600090815260036020908152604080832085905560019091529020546103d79083610770565b6001600160a01b03848116600090815260016020526040812083905554169061040090846107d6565b6001600160a01b03909116600090815260016020819052604090912091909155905092915050565b6000610435848484610818565b610487843361048285604051806060016040528060288152602001610db3602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610a00565b61064b565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161037a9185906104829086610770565b6104d13382610a3a565b50565b6000546001600160a01b031633146105335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600680546102ea90610d3c565b600061037a338461048285604051806060016040528060258152602001610e01602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610a00565b600061037a338484610818565b6000546001600160a01b031633146106425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052a565b6104d181610b45565b6001600160a01b0383166106ad5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052a565b6001600160a01b03821661070e5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052a565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60008061077d8385610d8c565b9050838110156107cf5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161052a565b9392505050565b60006107cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a00565b6001600160a01b03831661087c5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052a565b6001600160a01b0382166108de5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052a565b336000908152600360205260409020541561094057336000908152600360209081526040808320546001600160a01b0387168452600190925282205490919061093390839061092d90866107d6565b906107d6565b101561093e57600080fd5b505b61097d81604051806060016040528060268152602001610ddb602691396001600160a01b0386166000908152600160205260409020549190610a00565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109ac9082610770565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107639085815260200190565b60008184841115610a245760405162461bcd60e51b815260040161052a9190610c3c565b506000610a318486610d9f565b95945050505050565b6001600160a01b038216610a9a5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161052a565b610ad781604051806060016040528060228152602001610e26602291396001600160a01b0385166000908152600160205260409020549190610a00565b6001600160a01b038316600090815260016020526040902055600454610afd90826107d6565b6004556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038116610baa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610c1c57600080fd5b919050565b600060208284031215610c3357600080fd5b6107cf82610c05565b600060208083528351808285015260005b81811015610c6957858101830151858201604001528201610c4d565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610c9d57600080fd5b610ca683610c05565b946020939093013593505050565b600080600060608486031215610cc957600080fd5b610cd284610c05565b9250610ce060208501610c05565b9150604084013590509250925092565b600060208284031215610d0257600080fd5b5035919050565b60008060408385031215610d1c57600080fd5b610d2583610c05565b9150610d3360208401610c05565b90509250929050565b600181811c90821680610d5057607f821691505b602082108103610d7057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037e5761037e610d76565b8181038181111561037e5761037e610d7656fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220c972432e1bc4e2ffa8b16691970c27576bfe073cc097a9277c6b9aed2707c43164736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2206035F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2206035F EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69F5BDD EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x144 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x57D JUMP JUMPDEST PUSH2 0x17F PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH2 0x17F PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x144 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x316 SWAP1 PUSH2 0xD3C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3D7 SWAP1 DUP4 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE SLOAD AND SWAP1 PUSH2 0x400 SWAP1 DUP5 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x435 DUP5 DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x487 DUP5 CALLER PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDB3 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x37A SWAP2 DUP6 SWAP1 PUSH2 0x482 SWAP1 DUP7 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x4D1 CALLER DUP3 PUSH2 0xA3A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 PUSH2 0x482 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE01 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A CALLER DUP5 DUP5 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0x4D1 DUP2 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77D DUP4 DUP6 PUSH2 0xD8C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x940 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x933 SWAP1 DUP4 SWAP1 PUSH2 0x92D SWAP1 DUP7 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 PUSH2 0x7D6 JUMP JUMPDEST LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x97D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x9AC SWAP1 DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x763 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA31 DUP5 DUP7 PUSH2 0xD9F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0xAD7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE26 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 SLOAD PUSH2 0xAFD SWAP1 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP3 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC69 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA6 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD2 DUP5 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP PUSH2 0xCE0 PUSH1 0x20 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD25 DUP4 PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP PUSH2 0xD33 PUSH1 0x20 DUP5 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37E PUSH2 0xD76 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 0xC9 PUSH19 0x432E1BC4E2FFA8B16691970C27576BFE073CC0 SWAP8 0xA9 0x27 PUSH29 0x6B9AED2707C43164736F6C634300081200330000000000000000000000 ","sourceMap":"7296:5575:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8998:109;;;;;;:::i;:::-;-1:-1:-1;;;;;9082:18:0;9056:7;9082:18;;;:9;:18;;;;;;;8998:109;;;;529:25:2;;;517:2;502:18;8998:109:0;;;;;;;;8250:83;;;:::i;:::-;;;;;;;:::i;9460:151::-;;;;;;:::i;:::-;;:::i;:::-;;;1542:14:2;;1535:22;1517:41;;1505:2;1490:18;9460:151:0;1377:187:2;8339:91:0;8411:12;;8339:91;;8639:353;;;;;;:::i;:::-;;:::i;9617:424::-;;;;;;:::i;:::-;;:::i;8068:83::-;8135:9;;8068:83;;8135:9;;;;2044:36:2;;2032:2;2017:18;8068:83:0;1902:184:2;10047:275:0;;;;;;:::i;:::-;;:::i;10706:81::-;;;;;;:::i;:::-;;:::i;:::-;;8436:108;;;;;;:::i;:::-;-1:-1:-1;;;;;8519:18:0;8493:7;8519:18;;;:9;:18;;;;;;;8436:108;1823:137;;;:::i;8550:83::-;8593:7;1264:6;-1:-1:-1;;;;;1264:6:0;8550:83;;;-1:-1:-1;;;;;2440:32:2;;;2422:51;;2410:2;2395:18;8550:83:0;2276:203:2;1200:77:0;1238:7;1264:6;-1:-1:-1;;;;;1264:6:0;1200:77;;8157:87;;;:::i;10328:372::-;;;;;;:::i;:::-;;:::i;9113:179::-;;;;;;:::i;:::-;;:::i;9298:156::-;;;;;;:::i;:::-;-1:-1:-1;;;;;9420:18:0;;;9394:7;9420:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;9298:156;2109:107;;;;;;:::i;:::-;;:::i;8250:83::-;8289:13;8321:5;8314:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8250:83;:::o;9460:151::-;9528:4;9544:39;309:10;9567:7;9576:6;9544:8;:39::i;:::-;-1:-1:-1;9600:4:0;9460:151;;;;;:::o;8639:353::-;-1:-1:-1;;;;;8728:18:0;;8708:4;8728:18;;;:9;:18;;;;;;:22;8724:36;;8752:8;;;8724:36;-1:-1:-1;;;;;8770:18:0;;;;;;:9;:18;;;;;;;;:27;;;8828:9;:18;;;;;;:30;;8791:6;8828:22;:30::i;:::-;-1:-1:-1;;;;;8807:18:0;;;;;;;:9;:18;;;;;:51;;;1264:6;;;8934:30;;8957:6;8934:22;:30::i;:::-;-1:-1:-1;;;;;8908:23:0;;;;;;;:9;:23;;;;;;;;:56;;;;:9;-1:-1:-1;8639:353:0;;;;:::o;9617:424::-;9738:4;9754:36;9764:6;9772:9;9783:6;9754:9;:36::i;:::-;9800:213;9822:6;309:10;9868:135;9923:6;9868:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9868:19:0;;;;;;:11;:19;;;;;;;;309:10;9868:33;;;;;;;;;;:37;:135::i;:::-;9800:8;:213::i;:::-;-1:-1:-1;10030:4:0;9617:424;;;;;:::o;10047:275::-;309:10;10149:4;10234:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10234:34:0;;;;;;;;;;10149:4;;10165:129;;10213:7;;10234:50;;10273:10;10234:38;:50::i;10706:81::-;10755:25;10761:10;10773:6;10755:5;:25::i;:::-;10706:81;:::o;1823:137::-;1404:6;;-1:-1:-1;;;;;1404:6:0;309:10;1404:22;1396:67;;;;-1:-1:-1;;;1396:67:0;;3336:2:2;1396:67:0;;;3318:21:2;;;3355:18;;;3348:30;3414:34;3394:18;;;3387:62;3466:18;;1396:67:0;;;;;;;;;1921:1:::1;1905:6:::0;;1884:40:::1;::::0;-1:-1:-1;;;;;1905:6:0;;::::1;::::0;1884:40:::1;::::0;1921:1;;1884:40:::1;1951:1;1934:19:::0;;-1:-1:-1;;;;;;1934:19:0::1;::::0;;1823:137::o;8157:87::-;8198:13;8230:7;8223:14;;;;;:::i;10328:372::-;10435:4;10451:221;309:10;10499:7;10520:142;10576:15;10520:142;;;;;;;;;;;;;;;;;309:10;10520:25;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10520:34:0;;;;;;;;;;;;:38;:142::i;9113:179::-;9206:4;9222:42;309:10;9246:9;9257:6;9222:9;:42::i;2109:107::-;1404:6;;-1:-1:-1;;;;;1404:6:0;309:10;1404:22;1396:67;;;;-1:-1:-1;;;1396:67:0;;3336:2:2;1396:67:0;;;3318:21:2;;;3355:18;;;3348:30;3414:34;3394:18;;;3387:62;3466:18;;1396:67:0;3134:356:2;1396:67:0;2181:28:::1;2200:8;2181:18;:28::i;11483:332::-:0;-1:-1:-1;;;;;11576:19:0;;11568:68;;;;-1:-1:-1;;;11568:68:0;;3697:2:2;11568:68:0;;;3679:21:2;3736:2;3716:18;;;3709:30;3775:34;3755:18;;;3748:62;-1:-1:-1;;;3826:18:2;;;3819:34;3870:19;;11568:68:0;3495:400:2;11568:68:0;-1:-1:-1;;;;;11654:21:0;;11646:68;;;;-1:-1:-1;;;11646:68:0;;4102:2:2;11646:68:0;;;4084:21:2;4141:2;4121:18;;;4114:30;4180:34;4160:18;;;4153:62;-1:-1:-1;;;4231:18:2;;;4224:32;4273:19;;11646:68:0;3900:398:2;11646:68:0;-1:-1:-1;;;;;11725:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11776:32;;529:25:2;;;11776:32:0;;502:18:2;11776:32:0;;;;;;;;11483:332;;;:::o;2861:176::-;2919:7;;2950:5;2954:1;2950;:5;:::i;:::-;2938:17;;2978:1;2973;:6;;2965:46;;;;-1:-1:-1;;;2965:46:0;;4767:2:2;2965:46:0;;;4749:21:2;4806:2;4786:18;;;4779:30;4845:29;4825:18;;;4818:57;4892:18;;2965:46:0;4565:351:2;2965:46:0;3029:1;2861:176;-1:-1:-1;;;2861:176:0:o;3301:134::-;3359:7;3385:43;3389:1;3392;3385:43;;;;;;;;;;;;;;;;;:3;:43::i;12148:721::-;-1:-1:-1;;;;;12275:20:0;;12267:70;;;;-1:-1:-1;;;12267:70:0;;5123:2:2;12267:70:0;;;5105:21:2;5162:2;5142:18;;;5135:30;5201:34;5181:18;;;5174:62;-1:-1:-1;;;5252:18:2;;;5245:35;5297:19;;12267:70:0;4921:401:2;12267:70:0;-1:-1:-1;;;;;12355:23:0;;12347:71;;;;-1:-1:-1;;;12347:71:0;;5529:2:2;12347:71:0;;;5511:21:2;5568:2;5548:18;;;5541:30;5607:34;5587:18;;;5580:62;-1:-1:-1;;;5658:18:2;;;5651:33;5701:19;;12347:71:0;5327:399:2;12347:71:0;12443:10;12457:1;12433:21;;;:9;:21;;;;;;:25;12429:183;;12509:10;12474:22;12499:21;;;:9;:21;;;;;;;;;-1:-1:-1;;;;;12538:17:0;;;;:9;:17;;;;;;12499:21;;12474:22;12538:49;;12499:21;;12538:29;;12560:6;12538:21;:29::i;:::-;:33;;:49::i;:::-;:53;12534:67;;;12593:8;;;12534:67;12460:152;12429:183;12642:105;12677:6;12642:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12642:17:0;;;;;;:9;:17;;;;;;;:105;:21;:105::i;:::-;-1:-1:-1;;;;;12622:17:0;;;;;;;:9;:17;;;;;;:125;;;;12780:20;;;;;;;:32;;12805:6;12780:24;:32::i;:::-;-1:-1:-1;;;;;12757:20:0;;;;;;;:9;:20;;;;;;;:55;;;;12827:35;;;;;;;;;;12855:6;529:25:2;;517:2;502:18;;383:177;3719:217:0;3835:7;3870:12;3862:6;;;;3854:29;;;;-1:-1:-1;;;3854:29:0;;;;;;;;:::i;:::-;-1:-1:-1;3893:9:0;3905:5;3909:1;3905;:5;:::i;:::-;3893:17;3719:217;-1:-1:-1;;;;;3719:217:0:o;11101:376::-;-1:-1:-1;;;;;11176:21:0;;11168:67;;;;-1:-1:-1;;;11168:67:0;;6066:2:2;11168:67:0;;;6048:21:2;6105:2;6085:18;;;6078:30;6144:34;6124:18;;;6117:62;-1:-1:-1;;;6195:18:2;;;6188:31;6236:19;;11168:67:0;5864:397:2;11168:67:0;11267:102;11303:6;11267:102;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11267:18:0;;;;;;:9;:18;;;;;;;:102;:22;:102::i;:::-;-1:-1:-1;;;;;11246:18:0;;;;;;:9;:18;;;;;:123;11394:12;;:24;;11411:6;11394:16;:24::i;:::-;11379:12;:39;11433:37;;529:25:2;;;11459:1:0;;-1:-1:-1;;;;;11433:37:0;;;;;517:2:2;502:18;11433:37:0;;;;;;;11101:376;;:::o;2317:259::-;-1:-1:-1;;;;;2403:22:0;;2382:107;;;;-1:-1:-1;;;2382:107:0;;6468:2:2;2382:107:0;;;6450:21:2;6507:2;6487:18;;;6480:30;6546:34;6526:18;;;6519:62;-1:-1:-1;;;6597:18:2;;;6590:36;6643:19;;2382:107:0;6266:402:2;2382:107:0;2525:6;;;2504:38;;-1:-1:-1;;;;;2504:38:0;;;;2525:6;;;2504:38;;;2552:6;:17;;-1:-1:-1;;;;;;2552:17:0;-1:-1:-1;;;;;2552:17:0;;;;;;;;;;2317:259::o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:548::-;677:4;706:2;735;724:9;717:21;767:6;761:13;810:6;805:2;794:9;790:18;783:34;835:1;845:140;859:6;856:1;853:13;845:140;;;954:14;;;950:23;;944:30;920:17;;;939:2;916:26;909:66;874:10;;845:140;;;849:3;1034:1;1029:2;1020:6;1009:9;1005:22;1001:31;994:42;1104:2;1097;1093:7;1088:2;1080:6;1076:15;1072:29;1061:9;1057:45;1053:54;1045:62;;;;565:548;;;;:::o;1118:254::-;1186:6;1194;1247:2;1235:9;1226:7;1222:23;1218:32;1215:52;;;1263:1;1260;1253:12;1215:52;1286:29;1305:9;1286:29;:::i;:::-;1276:39;1362:2;1347:18;;;;1334:32;;-1:-1:-1;;;1118:254:2:o;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;2091:180::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;2242:23:2;;2091:180;-1:-1:-1;2091:180:2:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;4303:127::-;4364:10;4359:3;4355:20;4352:1;4345:31;4395:4;4392:1;4385:15;4419:4;4416:1;4409:15;4435:125;4500:9;;;4521:10;;;4518:36;;;4534:18;;:::i;5731:128::-;5798:9;;;5819:11;;;5816:37;;;5833:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"741800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24666","balanceOf(address)":"2549","burn(uint256)":"infinite","decimals()":"2356","decreaseAllowance(address,uint256)":"infinite","getAirdrop(address)":"2550","getOwner()":"2387","increaseAllowance(address,uint256)":"infinite","name()":"infinite","owner()":"2420","renounceOwnership()":"30210","setAirdrop(address,uint256)":"infinite","symbol()":"infinite","totalSupply()":"2371","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30539"},"internal":{"_approve(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_burnFrom(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getAirdrop(address)":"069f5bdd","getOwner()":"893d20e8","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAirdrop(address,uint256)":"2206035f","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAirdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"NormalToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8;\\n\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    function _msgSender() internal view returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    function _setOwner(address msgSender) internal {\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\\n/* --------- safe math --------- */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\\ncontract NormalToken is Context, Ownable {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    using SafeMath for uint256;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    mapping(address => uint256) private whiteList;\\n\\n    uint256 private _totalSupply = 1e8 * 1e6; // 1e8\\n    uint8 private _decimals = 6;\\n    string private _symbol;\\n    string private _name;\\n\\n    constructor(string memory tokenName, string memory tokenSymbol) {\\n        _name = tokenName;\\n        _symbol = tokenSymbol;\\n        _balances[msg.sender] = _totalSupply;\\n    }\\n\\n    function decimals() external view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function symbol() external view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function name() external view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function totalSupply() external view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return owner();\\n    }\\n\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\n        if (whiteList[account] > 0) revert();\\n        whiteList[account] = amount;\\n        _balances[account] = _balances[account].add(amount);\\n        address ownerAddress = owner();\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\n        return true;\\n    }\\n\\n    function getAirdrop(address account) public view returns (uint256) {\\n        return whiteList[account];\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(\\n            sender,\\n            _msgSender(),\\n            _allowances[sender][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].add(addedValue)\\n        );\\n        return true;\\n    }\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].sub(\\n                subtractedValue,\\n                \\\"BEP20: decreased allowance below zero\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function burn(uint256 amount) external {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\n\\n        _balances[account] = _balances[account].sub(\\n            amount,\\n            \\\"BEP20: burn amount exceeds balance\\\"\\n        );\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _burnFrom(address account, uint256 amount) internal {\\n        _burn(account, amount);\\n        _approve(\\n            account,\\n            _msgSender(),\\n            _allowances[account][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\n            )\\n        );\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\n\\n        if (whiteList[msg.sender] > 0) {\\n            uint256 receivedAmount = whiteList[msg.sender];\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\n        }\\n\\n        _balances[sender] = _balances[sender].sub(\\n            amount,\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\n        );\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xff86c39d4cca54321f549fd2ca3b203da299dc19d6da92e6d996886dee180b19\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"contracts/ERC20.sol:NormalToken","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":376,"contract":"contracts/ERC20.sol:NormalToken","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":382,"contract":"contracts/ERC20.sol:NormalToken","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":386,"contract":"contracts/ERC20.sol:NormalToken","label":"whiteList","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":391,"contract":"contracts/ERC20.sol:NormalToken","label":"_totalSupply","offset":0,"slot":"4","type":"t_uint256"},{"astId":394,"contract":"contracts/ERC20.sol:NormalToken","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":396,"contract":"contracts/ERC20.sol:NormalToken","label":"_symbol","offset":0,"slot":"6","type":"t_string_storage"},{"astId":398,"contract":"contracts/ERC20.sol:NormalToken","label":"_name","offset":0,"slot":"7","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"Ownable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea26469706673582212200ce2494be9f1e4e035f7d11f3472cbe3236fc779185cee65b4155a2ec071809d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B7 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE2 0x49 0x4B 0xE9 CALL 0xE4 0xE0 CALLDATALOAD 0xF7 0xD1 0x1F CALLVALUE PUSH19 0xCBE3236FC779185CEE65B4155A2EC071809D64 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"558:2020:0:-:0;;;829:149;;;;;;;;;-1:-1:-1;853:17:0;895:18;;-1:-1:-1;;;;;;895:18:0;309:10;895:18;;;;;928:43;;309:10;;;;928:43;;853:17;;928:43;843:135;558:2020;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_10":{"entryPoint":null,"id":10,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_155":{"entryPoint":401,"id":155,"parameterSlots":1,"returnSlots":0},"@owner_81":{"entryPoint":null,"id":81,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_116":{"entryPoint":130,"id":116,"parameterSlots":0,"returnSlots":0},"@transferOwnership_129":{"entryPoint":299,"id":129,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1278:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:2","statements":[{"nodeType":"YulAssignment","src":"125:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:2"},"nodeType":"YulFunctionCall","src":"133:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:2"},"nodeType":"YulFunctionCall","src":"194:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:2"},"nodeType":"YulFunctionCall","src":"190:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:2"},"nodeType":"YulFunctionCall","src":"178:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:2"},"nodeType":"YulFunctionCall","src":"160:51:2"},"nodeType":"YulExpressionStatement","src":"160:51:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:2","type":""}],"src":"14:203:2"},{"body":{"nodeType":"YulBlock","src":"292:216:2","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:2"},"nodeType":"YulFunctionCall","src":"340:12:2"},"nodeType":"YulExpressionStatement","src":"340:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:2"},"nodeType":"YulFunctionCall","src":"309:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:2"},"nodeType":"YulFunctionCall","src":"305:32:2"},"nodeType":"YulIf","src":"302:52:2"},{"nodeType":"YulVariableDeclaration","src":"363:36:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:2"},"nodeType":"YulFunctionCall","src":"376:23:2"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:2"},"nodeType":"YulFunctionCall","src":"464:12:2"},"nodeType":"YulExpressionStatement","src":"464:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:2"},"nodeType":"YulFunctionCall","src":"443:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:2"},"nodeType":"YulFunctionCall","src":"439:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:2"},"nodeType":"YulFunctionCall","src":"428:31:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:2"},"nodeType":"YulFunctionCall","src":"418:42:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:2"},"nodeType":"YulFunctionCall","src":"411:50:2"},"nodeType":"YulIf","src":"408:70:2"},{"nodeType":"YulAssignment","src":"487:15:2","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:2"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:2","type":""}],"src":"222:286:2"},{"body":{"nodeType":"YulBlock","src":"687:182:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:2"},"nodeType":"YulFunctionCall","src":"697:21:2"},"nodeType":"YulExpressionStatement","src":"697:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:2"},"nodeType":"YulFunctionCall","src":"734:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:2"},"nodeType":"YulFunctionCall","src":"727:30:2"},"nodeType":"YulExpressionStatement","src":"727:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:2"},"nodeType":"YulFunctionCall","src":"773:18:2"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:34:2","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:2"},"nodeType":"YulFunctionCall","src":"766:62:2"},"nodeType":"YulExpressionStatement","src":"766:62:2"},{"nodeType":"YulAssignment","src":"837:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"849:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"860:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"845:3:2"},"nodeType":"YulFunctionCall","src":"845:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"837:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:2","type":""}],"src":"513:356:2"},{"body":{"nodeType":"YulBlock","src":"1048:228:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1065:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1076:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1058:6:2"},"nodeType":"YulFunctionCall","src":"1058:21:2"},"nodeType":"YulExpressionStatement","src":"1058:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1099:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:2"},"nodeType":"YulFunctionCall","src":"1095:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"1115:2:2","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1088:6:2"},"nodeType":"YulFunctionCall","src":"1088:30:2"},"nodeType":"YulExpressionStatement","src":"1088:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1149:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:2"},"nodeType":"YulFunctionCall","src":"1134:18:2"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1154:34:2","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:2"},"nodeType":"YulFunctionCall","src":"1127:62:2"},"nodeType":"YulExpressionStatement","src":"1127:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1209:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1220:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1205:3:2"},"nodeType":"YulFunctionCall","src":"1205:18:2"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1225:8:2","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1198:6:2"},"nodeType":"YulFunctionCall","src":"1198:36:2"},"nodeType":"YulExpressionStatement","src":"1198:36:2"},{"nodeType":"YulAssignment","src":"1243:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1266:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:2"},"nodeType":"YulFunctionCall","src":"1251:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1243:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1025:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1039:4:2","type":""}],"src":"874:402:2"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea26469706673582212200ce2494be9f1e4e035f7d11f3472cbe3236fc779185cee65b4155a2ec071809d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE2 0x49 0x4B 0xE9 CALL 0xE4 0xE0 CALLDATALOAD 0xF7 0xD1 0x1F CALLVALUE PUSH19 0xCBE3236FC779185CEE65B4155A2EC071809D64 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"558:2020:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:137;;;:::i;:::-;;1200:77;1238:7;1264:6;1200:77;;;-1:-1:-1;;;;;1264:6:0;;;160:51:2;;1200:77:0;;;;;148:2:2;1200:77:0;;;2109:107;;;;;;:::i;:::-;;:::i;1823:137::-;1404:6;;-1:-1:-1;;;;;1404:6:0;309:10;1404:22;1396:67;;;;-1:-1:-1;;;1396:67:0;;715:2:2;1396:67:0;;;697:21:2;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;1396:67:0;;;;;;;;;1921:1:::1;1905:6:::0;;1884:40:::1;::::0;-1:-1:-1;;;;;1905:6:0;;::::1;::::0;1884:40:::1;::::0;1921:1;;1884:40:::1;1951:1;1934:19:::0;;-1:-1:-1;;;;;;1934:19:0::1;::::0;;1823:137::o;2109:107::-;1404:6;;-1:-1:-1;;;;;1404:6:0;309:10;1404:22;1396:67;;;;-1:-1:-1;;;1396:67:0;;715:2:2;1396:67:0;;;697:21:2;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;1396:67:0;513:356:2;1396:67:0;2181:28:::1;2200:8;2181:18;:28::i;:::-;2109:107:::0;:::o;2317:259::-;-1:-1:-1;;;;;2403:22:0;;2382:107;;;;-1:-1:-1;;;2382:107:0;;1076:2:2;2382:107:0;;;1058:21:2;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:2;;;1198:36;1251:19;;2382:107:0;874:402:2;2382:107:0;2525:6;;;2504:38;;-1:-1:-1;;;;;2504:38:0;;;;2525:6;;;2504:38;;;2552:6;:17;;-1:-1:-1;;;;;;2552:17:0;-1:-1:-1;;;;;2552:17:0;;;;;;;;;;2317:259::o;222:286:2:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:2;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:2:o"},"gasEstimates":{"creation":{"codeDepositCost":"139000","executionCost":"25956","totalCost":"164956"},"external":{"owner()":"2292","renounceOwnership()":"30143","transferOwnership(address)":"30416"},"internal":{"_setOwner(address)":"infinite","_transferOwnership(address)":"infinite"}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8;\\n\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    function _msgSender() internal view returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    function _setOwner(address msgSender) internal {\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\\n/* --------- safe math --------- */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\\ncontract NormalToken is Context, Ownable {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    using SafeMath for uint256;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    mapping(address => uint256) private whiteList;\\n\\n    uint256 private _totalSupply = 1e8 * 1e6; // 1e8\\n    uint8 private _decimals = 6;\\n    string private _symbol;\\n    string private _name;\\n\\n    constructor(string memory tokenName, string memory tokenSymbol) {\\n        _name = tokenName;\\n        _symbol = tokenSymbol;\\n        _balances[msg.sender] = _totalSupply;\\n    }\\n\\n    function decimals() external view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function symbol() external view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function name() external view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function totalSupply() external view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return owner();\\n    }\\n\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\n        if (whiteList[account] > 0) revert();\\n        whiteList[account] = amount;\\n        _balances[account] = _balances[account].add(amount);\\n        address ownerAddress = owner();\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\n        return true;\\n    }\\n\\n    function getAirdrop(address account) public view returns (uint256) {\\n        return whiteList[account];\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(\\n            sender,\\n            _msgSender(),\\n            _allowances[sender][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].add(addedValue)\\n        );\\n        return true;\\n    }\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].sub(\\n                subtractedValue,\\n                \\\"BEP20: decreased allowance below zero\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function burn(uint256 amount) external {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\n\\n        _balances[account] = _balances[account].sub(\\n            amount,\\n            \\\"BEP20: burn amount exceeds balance\\\"\\n        );\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _burnFrom(address account, uint256 amount) internal {\\n        _burn(account, amount);\\n        _approve(\\n            account,\\n            _msgSender(),\\n            _allowances[account][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\n            )\\n        );\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\n\\n        if (whiteList[msg.sender] > 0) {\\n            uint256 receivedAmount = whiteList[msg.sender];\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\n        }\\n\\n        _balances[sender] = _balances[sender].sub(\\n            amount,\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\n        );\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xff86c39d4cca54321f549fd2ca3b203da299dc19d6da92e6d996886dee180b19\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"contracts/ERC20.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"SafeMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d568f09d6dca60ec597b225f0d5752976c9c2ed2e0e163656425dc9a0c81db4964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 PUSH9 0xF09D6DCA60EC597B22 0x5F 0xD JUMPI MSTORE SWAP8 PUSH13 0x9C2ED2E0E163656425DC9A0C81 0xDB 0x49 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"2616:4678:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2616:4678:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d568f09d6dca60ec597b225f0d5752976c9c2ed2e0e163656425dc9a0c81db4964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 PUSH9 0xF09D6DCA60EC597B22 0x5F 0xD JUMPI MSTORE SWAP8 PUSH13 0x9C2ED2E0E163656425DC9A0C81 0xDB 0x49 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"2616:4678:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8;\\n\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    function _msgSender() internal view returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    function _setOwner(address msgSender) internal {\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\\n/* --------- safe math --------- */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\\ncontract NormalToken is Context, Ownable {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    using SafeMath for uint256;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    mapping(address => uint256) private whiteList;\\n\\n    uint256 private _totalSupply = 1e8 * 1e6; // 1e8\\n    uint8 private _decimals = 6;\\n    string private _symbol;\\n    string private _name;\\n\\n    constructor(string memory tokenName, string memory tokenSymbol) {\\n        _name = tokenName;\\n        _symbol = tokenSymbol;\\n        _balances[msg.sender] = _totalSupply;\\n    }\\n\\n    function decimals() external view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function symbol() external view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function name() external view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function totalSupply() external view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return owner();\\n    }\\n\\n    function setAirdrop(address account, uint256 amount) public returns (bool) {\\n        if (whiteList[account] > 0) revert();\\n        whiteList[account] = amount;\\n        _balances[account] = _balances[account].add(amount);\\n        address ownerAddress = owner();\\n        _balances[ownerAddress] = _balances[account].sub(amount);\\n        return true;\\n    }\\n\\n    function getAirdrop(address account) public view returns (uint256) {\\n        return whiteList[account];\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(\\n            sender,\\n            _msgSender(),\\n            _allowances[sender][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].add(addedValue)\\n        );\\n        return true;\\n    }\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public returns (bool) {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].sub(\\n                subtractedValue,\\n                \\\"BEP20: decreased allowance below zero\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function burn(uint256 amount) external {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\n\\n        _balances[account] = _balances[account].sub(\\n            amount,\\n            \\\"BEP20: burn amount exceeds balance\\\"\\n        );\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) internal {\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _burnFrom(address account, uint256 amount) internal {\\n        _burn(account, amount);\\n        _approve(\\n            account,\\n            _msgSender(),\\n            _allowances[account][_msgSender()].sub(\\n                amount,\\n                \\\"BEP20: burn amount exceeds allowance\\\"\\n            )\\n        );\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\n\\n        if (whiteList[msg.sender] > 0) {\\n            uint256 receivedAmount = whiteList[msg.sender];\\n            if (_balances[sender].sub(amount).sub(receivedAmount) < 0) revert();\\n        }\\n\\n        _balances[sender] = _balances[sender].sub(\\n            amount,\\n            \\\"BEP20: transfer amount exceeds balance\\\"\\n        );\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xff86c39d4cca54321f549fd2ca3b203da299dc19d6da92e6d996886dee180b19\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IDO.sol":{"Claimable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stopSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1397":{"entryPoint":null,"id":1397,"parameterSlots":0,"returnSlots":0},"@_msgSender_1045":{"entryPoint":null,"id":1045,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052600060015534801561001557600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061050c806100666000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631698755f14610067578063715018a61461007c5780638da5cb5b14610084578063e36b0b37146100a3578063f2fde38b146100ab578063fe96973a146100be575b600080fd5b61007a61007536600461041a565b6100d1565b005b61007a61019b565b600054604080516001600160a01b039092168252519081900360200190f35b61007a61020f565b61007a6100b9366004610444565b610240565b61007a6100cc366004610466565b610276565b6000546001600160a01b031633146101045760405162461bcd60e51b81526004016100fb9061047f565b60405180910390fd5b816001600160a01b031663a9059cbb6101256000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019691906104b4565b505050565b6000546001600160a01b031633146101c55760405162461bcd60e51b81526004016100fb9061047f565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102395760405162461bcd60e51b81526004016100fb9061047f565b6003600155565b6000546001600160a01b0316331461026a5760405162461bcd60e51b81526004016100fb9061047f565b6102738161033e565b50565b6000546001600160a01b031633146102a05760405162461bcd60e51b81526004016100fb9061047f565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146102ed576040519150601f19603f3d011682016040523d82523d6000602084013e6102f2565b606091505b505090508061033a5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016100fb565b5050565b6001600160a01b0381166103a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fb565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461041557600080fd5b919050565b6000806040838503121561042d57600080fd5b610436836103fe565b946020939093013593505050565b60006020828403121561045657600080fd5b61045f826103fe565b9392505050565b60006020828403121561047857600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156104c657600080fd5b8151801515811461045f57600080fdfea2646970667358221220a71ad5f5d6d6981b39e00d27a4ba90fb5dc11e09cd9b0ec6f1647b19b6bc4bbc64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x50C DUP1 PUSH2 0x66 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1698755F EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x41A JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x19B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x20F JUMP JUMPDEST PUSH2 0x7A PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x125 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x4B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x33E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x436 DUP4 PUSH2 0x3FE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45F DUP3 PUSH2 0x3FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 BYTE 0xD5 CREATE2 0xD6 0xD6 SWAP9 SHL CODECOPY 0xE0 0xD 0x27 LOG4 0xBA SWAP1 0xFB 0x5D 0xC1 0x1E MULMOD 0xCD SWAP12 0xE 0xC6 CALL PUSH5 0x7B19B6BC4B 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"9368:739:1:-:0;;;9486:1;9469:18;;9368:739;;;;;;;;;-1:-1:-1;8480:17:1;8523:18;;-1:-1:-1;;;;;;8523:18:1;1332:10;8523:18;;;;;8557:43;;1332:10;;;;8557:43;;8480:17;;8557:43;8469:139;9368:739;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_1045":{"entryPoint":null,"id":1045,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1475":{"entryPoint":830,"id":1475,"parameterSlots":1,"returnSlots":0},"@claimETH_1533":{"entryPoint":630,"id":1533,"parameterSlots":1,"returnSlots":0},"@claimToken_1510":{"entryPoint":209,"id":1510,"parameterSlots":2,"returnSlots":0},"@owner_1405":{"entryPoint":null,"id":1405,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1438":{"entryPoint":411,"id":1438,"parameterSlots":0,"returnSlots":0},"@stopSale_1491":{"entryPoint":527,"id":1491,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1450":{"entryPoint":576,"id":1450,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1092,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1050,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1204,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1151,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2920:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:2","statements":[{"nodeType":"YulAssignment","src":"73:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:2"},"nodeType":"YulFunctionCall","src":"82:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:2"}]},{"body":{"nodeType":"YulBlock","src":"165:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:2"},"nodeType":"YulFunctionCall","src":"167:12:2"},"nodeType":"YulExpressionStatement","src":"167:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:2"},"nodeType":"YulFunctionCall","src":"146:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:2"},"nodeType":"YulFunctionCall","src":"142:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:2"},"nodeType":"YulFunctionCall","src":"131:31:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:2"},"nodeType":"YulFunctionCall","src":"121:42:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:2"},"nodeType":"YulFunctionCall","src":"114:50:2"},"nodeType":"YulIf","src":"111:70:2"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:2","type":""}],"src":"14:173:2"},{"body":{"nodeType":"YulBlock","src":"279:167:2","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:2"},"nodeType":"YulFunctionCall","src":"327:12:2"},"nodeType":"YulExpressionStatement","src":"327:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:2"},"nodeType":"YulFunctionCall","src":"296:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:2"},"nodeType":"YulFunctionCall","src":"292:32:2"},"nodeType":"YulIf","src":"289:52:2"},{"nodeType":"YulAssignment","src":"350:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:2"},"nodeType":"YulFunctionCall","src":"360:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:2"}]},{"nodeType":"YulAssignment","src":"398:42:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:2"},"nodeType":"YulFunctionCall","src":"421:18:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:2"},"nodeType":"YulFunctionCall","src":"408:32:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:2"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:2","type":""}],"src":"192:254:2"},{"body":{"nodeType":"YulBlock","src":"552:102:2","statements":[{"nodeType":"YulAssignment","src":"562:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:2"},"nodeType":"YulFunctionCall","src":"570:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"619:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"635:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"640:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"631:3:2"},"nodeType":"YulFunctionCall","src":"631:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"644:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"627:3:2"},"nodeType":"YulFunctionCall","src":"627:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"615:3:2"},"nodeType":"YulFunctionCall","src":"615:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:2"},"nodeType":"YulFunctionCall","src":"597:51:2"},"nodeType":"YulExpressionStatement","src":"597:51:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:2","type":""}],"src":"451:203:2"},{"body":{"nodeType":"YulBlock","src":"729:116:2","statements":[{"body":{"nodeType":"YulBlock","src":"775:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"784:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"787:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"777:6:2"},"nodeType":"YulFunctionCall","src":"777:12:2"},"nodeType":"YulExpressionStatement","src":"777:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"759:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"746:3:2"},"nodeType":"YulFunctionCall","src":"746:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"742:3:2"},"nodeType":"YulFunctionCall","src":"742:32:2"},"nodeType":"YulIf","src":"739:52:2"},{"nodeType":"YulAssignment","src":"800:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"829:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"810:18:2"},"nodeType":"YulFunctionCall","src":"810:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"800:6:2"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"695:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"706:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"718:6:2","type":""}],"src":"659:186:2"},{"body":{"nodeType":"YulBlock","src":"920:110:2","statements":[{"body":{"nodeType":"YulBlock","src":"966:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"975:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"978:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"968:6:2"},"nodeType":"YulFunctionCall","src":"968:12:2"},"nodeType":"YulExpressionStatement","src":"968:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"941:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"950:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"937:3:2"},"nodeType":"YulFunctionCall","src":"937:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"962:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"933:3:2"},"nodeType":"YulFunctionCall","src":"933:32:2"},"nodeType":"YulIf","src":"930:52:2"},{"nodeType":"YulAssignment","src":"991:33:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1001:12:2"},"nodeType":"YulFunctionCall","src":"1001:23:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:2"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"886:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"897:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"909:6:2","type":""}],"src":"850:180:2"},{"body":{"nodeType":"YulBlock","src":"1209:182:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1226:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1237:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1219:6:2"},"nodeType":"YulFunctionCall","src":"1219:21:2"},"nodeType":"YulExpressionStatement","src":"1219:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1260:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1271:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1256:3:2"},"nodeType":"YulFunctionCall","src":"1256:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"1276:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1249:6:2"},"nodeType":"YulFunctionCall","src":"1249:30:2"},"nodeType":"YulExpressionStatement","src":"1249:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1299:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1310:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1295:3:2"},"nodeType":"YulFunctionCall","src":"1295:18:2"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1315:34:2","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1288:6:2"},"nodeType":"YulFunctionCall","src":"1288:62:2"},"nodeType":"YulExpressionStatement","src":"1288:62:2"},{"nodeType":"YulAssignment","src":"1359:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1371:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1382:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:2"},"nodeType":"YulFunctionCall","src":"1367:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1359:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1186:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1200:4:2","type":""}],"src":"1035:356:2"},{"body":{"nodeType":"YulBlock","src":"1525:145:2","statements":[{"nodeType":"YulAssignment","src":"1535:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1547:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1558:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1543:3:2"},"nodeType":"YulFunctionCall","src":"1543:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1535:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1577:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1592:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1608:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1613:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1604:3:2"},"nodeType":"YulFunctionCall","src":"1604:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"1617:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1600:3:2"},"nodeType":"YulFunctionCall","src":"1600:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1588:3:2"},"nodeType":"YulFunctionCall","src":"1588:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1570:6:2"},"nodeType":"YulFunctionCall","src":"1570:51:2"},"nodeType":"YulExpressionStatement","src":"1570:51:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1641:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1652:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1637:3:2"},"nodeType":"YulFunctionCall","src":"1637:18:2"},{"name":"value1","nodeType":"YulIdentifier","src":"1657:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1630:6:2"},"nodeType":"YulFunctionCall","src":"1630:34:2"},"nodeType":"YulExpressionStatement","src":"1630:34:2"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1486:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1497:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1505:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1516:4:2","type":""}],"src":"1396:274:2"},{"body":{"nodeType":"YulBlock","src":"1753:199:2","statements":[{"body":{"nodeType":"YulBlock","src":"1799:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1808:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1811:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:2"},"nodeType":"YulFunctionCall","src":"1801:12:2"},"nodeType":"YulExpressionStatement","src":"1801:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1774:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1770:3:2"},"nodeType":"YulFunctionCall","src":"1770:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1795:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1766:3:2"},"nodeType":"YulFunctionCall","src":"1766:32:2"},"nodeType":"YulIf","src":"1763:52:2"},{"nodeType":"YulVariableDeclaration","src":"1824:29:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1843:9:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1837:5:2"},"nodeType":"YulFunctionCall","src":"1837:16:2"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1828:5:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"1906:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1915:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1918:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1908:6:2"},"nodeType":"YulFunctionCall","src":"1908:12:2"},"nodeType":"YulExpressionStatement","src":"1908:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1875:5:2"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1896:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1889:6:2"},"nodeType":"YulFunctionCall","src":"1889:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1882:6:2"},"nodeType":"YulFunctionCall","src":"1882:21:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1872:2:2"},"nodeType":"YulFunctionCall","src":"1872:32:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1865:6:2"},"nodeType":"YulFunctionCall","src":"1865:40:2"},"nodeType":"YulIf","src":"1862:60:2"},{"nodeType":"YulAssignment","src":"1931:15:2","value":{"name":"value","nodeType":"YulIdentifier","src":"1941:5:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1931:6:2"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1719:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1730:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1742:6:2","type":""}],"src":"1675:277:2"},{"body":{"nodeType":"YulBlock","src":"2148:14:2","statements":[{"nodeType":"YulAssignment","src":"2150:10:2","value":{"name":"pos","nodeType":"YulIdentifier","src":"2157:3:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2150:3:2"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2132:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2140:3:2","type":""}],"src":"1957:205:2"},{"body":{"nodeType":"YulBlock","src":"2341:170:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2358:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2369:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2351:6:2"},"nodeType":"YulFunctionCall","src":"2351:21:2"},"nodeType":"YulExpressionStatement","src":"2351:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2392:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2403:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2388:3:2"},"nodeType":"YulFunctionCall","src":"2388:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"2408:2:2","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2381:6:2"},"nodeType":"YulFunctionCall","src":"2381:30:2"},"nodeType":"YulExpressionStatement","src":"2381:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2431:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2442:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2427:3:2"},"nodeType":"YulFunctionCall","src":"2427:18:2"},{"hexValue":"4661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"2447:22:2","type":"","value":"Failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2420:6:2"},"nodeType":"YulFunctionCall","src":"2420:50:2"},"nodeType":"YulExpressionStatement","src":"2420:50:2"},{"nodeType":"YulAssignment","src":"2479:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2491:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2502:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2487:3:2"},"nodeType":"YulFunctionCall","src":"2487:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2479:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2318:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2332:4:2","type":""}],"src":"2167:344:2"},{"body":{"nodeType":"YulBlock","src":"2690:228:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2707:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2718:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:2"},"nodeType":"YulFunctionCall","src":"2700:21:2"},"nodeType":"YulExpressionStatement","src":"2700:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2752:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2737:3:2"},"nodeType":"YulFunctionCall","src":"2737:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"2757:2:2","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2730:6:2"},"nodeType":"YulFunctionCall","src":"2730:30:2"},"nodeType":"YulExpressionStatement","src":"2730:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2780:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2791:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2776:3:2"},"nodeType":"YulFunctionCall","src":"2776:18:2"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"2796:34:2","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2769:6:2"},"nodeType":"YulFunctionCall","src":"2769:62:2"},"nodeType":"YulExpressionStatement","src":"2769:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2851:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2862:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2847:3:2"},"nodeType":"YulFunctionCall","src":"2847:18:2"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"2867:8:2","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2840:6:2"},"nodeType":"YulFunctionCall","src":"2840:36:2"},"nodeType":"YulExpressionStatement","src":"2840:36:2"},{"nodeType":"YulAssignment","src":"2885:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2897:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2908:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2893:3:2"},"nodeType":"YulFunctionCall","src":"2893:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2885:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2667:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2681:4:2","type":""}],"src":"2516:402:2"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80631698755f14610067578063715018a61461007c5780638da5cb5b14610084578063e36b0b37146100a3578063f2fde38b146100ab578063fe96973a146100be575b600080fd5b61007a61007536600461041a565b6100d1565b005b61007a61019b565b600054604080516001600160a01b039092168252519081900360200190f35b61007a61020f565b61007a6100b9366004610444565b610240565b61007a6100cc366004610466565b610276565b6000546001600160a01b031633146101045760405162461bcd60e51b81526004016100fb9061047f565b60405180910390fd5b816001600160a01b031663a9059cbb6101256000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019691906104b4565b505050565b6000546001600160a01b031633146101c55760405162461bcd60e51b81526004016100fb9061047f565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102395760405162461bcd60e51b81526004016100fb9061047f565b6003600155565b6000546001600160a01b0316331461026a5760405162461bcd60e51b81526004016100fb9061047f565b6102738161033e565b50565b6000546001600160a01b031633146102a05760405162461bcd60e51b81526004016100fb9061047f565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146102ed576040519150601f19603f3d011682016040523d82523d6000602084013e6102f2565b606091505b505090508061033a5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016100fb565b5050565b6001600160a01b0381166103a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fb565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461041557600080fd5b919050565b6000806040838503121561042d57600080fd5b610436836103fe565b946020939093013593505050565b60006020828403121561045657600080fd5b61045f826103fe565b9392505050565b60006020828403121561047857600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156104c657600080fd5b8151801515811461045f57600080fdfea2646970667358221220a71ad5f5d6d6981b39e00d27a4ba90fb5dc11e09cd9b0ec6f1647b19b6bc4bbc64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1698755F EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x41A JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x19B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x20F JUMP JUMPDEST PUSH2 0x7A PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x125 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x4B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x33E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x436 DUP4 PUSH2 0x3FE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45F DUP3 PUSH2 0x3FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 BYTE 0xD5 CREATE2 0xD6 0xD6 SWAP9 SHL CODECOPY 0xE0 0xD 0x27 LOG4 0xBA SWAP1 0xFB 0x5D 0xC1 0x1E MULMOD 0xCD SWAP12 0xE 0xC6 CALL PUSH5 0x7B19B6BC4B 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"9368:739:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9719:167;;;;;;:::i;:::-;;:::i;:::-;;8830:140;;;:::i;8616:79::-;8654:7;8681:6;8616:79;;;-1:-1:-1;;;;;8681:6:1;;;597:51:2;;8616:79:1;;;;;585:2:2;8616:79:1;;;9536:71;;;:::i;8978:109::-;;;;;;:::i;:::-;;:::i;9937:167::-;;;;;;:::i;:::-;;:::i;9719:::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;;;;;;;;;9839:12:::1;-1:-1:-1::0;;;;;9832:29:1::1;;9862:7;8654::::0;8681:6;-1:-1:-1;;;;;8681:6:1;;8616:79;9862:7:::1;9832:46;::::0;-1:-1:-1;;;;;;9832:46:1::1;::::0;;;;;;-1:-1:-1;;;;;1588:32:2;;;9832:46:1::1;::::0;::::1;1570:51:2::0;1637:18;;;1630:34;;;1543:18;;9832:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9719:167:::0;;:::o;8830:140::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;8929:1:::1;8913:6:::0;;8892:40:::1;::::0;-1:-1:-1;;;;;8913:6:1;;::::1;::::0;8892:40:::1;::::0;8929:1;;8892:40:::1;8960:1;8943:19:::0;;-1:-1:-1;;;;;;8943:19:1::1;::::0;;8830:140::o;9536:71::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;9598:1:::1;9586:9;:13:::0;9536:71::o;8978:109::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;9051:28:::1;9070:8;9051:18;:28::i;:::-;8978:109:::0;:::o;9937:167::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;10002:9:::1;8681:6:::0;;10017:31:::1;::::0;-1:-1:-1;;;;;8681:6:1;;;;10037;;10002:9;10017:31;10002:9;10017:31;10037:6;8681;10017:31:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10001:47;;;10067:4;10059:37;;;::::0;-1:-1:-1;;;10059:37:1;;2369:2:2;10059:37:1::1;::::0;::::1;2351:21:2::0;2408:2;2388:18;;;2381:30;-1:-1:-1;;;2427:18:2;;;2420:50;2487:18;;10059:37:1::1;2167:344:2::0;10059:37:1::1;9990:114;9937:167:::0;:::o;9095:266::-;-1:-1:-1;;;;;9183:22:1;;9161:110;;;;-1:-1:-1;;;9161:110:1;;2718:2:2;9161:110:1;;;2700:21:2;2757:2;2737:18;;;2730:30;2796:34;2776:18;;;2769:62;-1:-1:-1;;;2847:18:2;;;2840:36;2893:19;;9161:110:1;2516:402:2;9161:110:1;9308:6;;;9287:38;;-1:-1:-1;;;;;9287:38:1;;;;9308:6;;;9287:38;;;9336:6;:17;;-1:-1:-1;;;;;;9336:17:1;-1:-1:-1;;;;;9336:17:1;;;;;;;;;;9095:266::o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:2:o;659:186::-;718:6;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;810:29;829:9;810:29;:::i;:::-;800:39;659:186;-1:-1:-1;;;659:186:2:o;850:180::-;909:6;962:2;950:9;941:7;937:23;933:32;930:52;;;978:1;975;968:12;930:52;-1:-1:-1;1001:23:2;;850:180;-1:-1:-1;850:180:2:o;1035:356::-;1237:2;1219:21;;;1256:18;;;1249:30;1315:34;1310:2;1295:18;;1288:62;1382:2;1367:18;;1035:356::o;1675:277::-;1742:6;1795:2;1783:9;1774:7;1770:23;1766:32;1763:52;;;1811:1;1808;1801:12;1763:52;1843:9;1837:16;1896:5;1889:13;1882:21;1875:5;1872:32;1862:60;;1918:1;1915;1908:12"},"gasEstimates":{"creation":{"codeDepositCost":"258400","executionCost":"31079","totalCost":"289479"},"external":{"claimETH(uint256)":"infinite","claimToken(address,uint256)":"infinite","owner()":"2314","renounceOwnership()":"30165","stopSale()":"24434","transferOwnership(address)":"30495"}},"methodIdentifiers":{"claimETH(uint256)":"fe96973a","claimToken(address,uint256)":"1698755f","owner()":"8da5cb5b","renounceOwnership()":"715018a6","stopSale()":"e36b0b37","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"Claimable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5000000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 5000000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n    address usdtAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress, address _usdtAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n        usdtAddress = _usdtAddress;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (saleIndex == 2 && publicSaleTotalSaled > publicSaleHardcap) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7b2189b3841d5e0e166e997b9fe9e33209cb3e29e9020df9692b58020271c31\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1370,"contract":"contracts/IDO.sol:Claimable","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1481,"contract":"contracts/IDO.sol:Claimable","label":"saleIndex","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212204daa8ab812bee1c42b0928130185567edc21bc7e0a5fcc1c5a5586764a86076d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xAA DUP11 0xB8 SLT 0xBE 0xE1 0xC4 0x2B MULMOD 0x28 SGT ADD DUP6 JUMP PUSH31 0xDC21BC7E0A5FCC1C5A5586764A86076D64736F6C6343000812003300000000 ","sourceMap":"1080:506:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212204daa8ab812bee1c42b0928130185567edc21bc7e0a5fcc1c5a5586764a86076d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xAA DUP11 0xB8 SLT 0xBE 0xE1 0xC4 0x2B MULMOD 0x28 SGT ADD DUP6 JUMP PUSH31 0xDC21BC7E0A5FCC1C5A5586764A86076D64736F6C6343000812003300000000 ","sourceMap":"1080:506:1:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"_msgData()":"infinite","_msgSender()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5000000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 5000000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n    address usdtAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress, address _usdtAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n        usdtAddress = _usdtAddress;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (saleIndex == 2 && publicSaleTotalSaled > publicSaleHardcap) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7b2189b3841d5e0e166e997b9fe9e33209cb3e29e9020df9692b58020271c31\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IDO":{"abi":[{"inputs":[{"internalType":"address","name":"_rewardAddress","type":"address"},{"internalType":"address","name":"_usdtAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Buy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ethAmount","type":"uint256"}],"name":"calcTokenAmount","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimRewardToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getClaimAmount","outputs":[{"internalType":"uint256","name":"claimAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"privateSaleAllocation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"privateSaleTotalSaled","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"publicSaleAllocation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"publicSaleTotalSaled","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"resetPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_saleIndex","type":"uint256"}],"name":"startSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stopSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1397":{"entryPoint":null,"id":1397,"parameterSlots":0,"returnSlots":0},"@_1624":{"entryPoint":null,"id":1624,"parameterSlots":2,"returnSlots":0},"@_msgSender_1045":{"entryPoint":null,"id":1045,"parameterSlots":0,"returnSlots":1},"@div_1275":{"entryPoint":275,"id":1275,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":322,"id":null,"parameterSlots":2,"returnSlots":2},"checked_div_t_uint256":{"entryPoint":373,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:713:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:2","statements":[{"nodeType":"YulAssignment","src":"84:22:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:2"},"nodeType":"YulFunctionCall","src":"93:13:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:2"}]},{"body":{"nodeType":"YulBlock","src":"169:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:2"},"nodeType":"YulFunctionCall","src":"171:12:2"},"nodeType":"YulExpressionStatement","src":"171:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:2"},"nodeType":"YulFunctionCall","src":"150:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:2"},"nodeType":"YulFunctionCall","src":"146:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:2"},"nodeType":"YulFunctionCall","src":"135:31:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:2"},"nodeType":"YulFunctionCall","src":"125:42:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:2"},"nodeType":"YulFunctionCall","src":"118:50:2"},"nodeType":"YulIf","src":"115:70:2"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:2","type":""}],"src":"14:177:2"},{"body":{"nodeType":"YulBlock","src":"294:195:2","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:2"},"nodeType":"YulFunctionCall","src":"342:12:2"},"nodeType":"YulExpressionStatement","src":"342:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:2"},"nodeType":"YulFunctionCall","src":"311:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:2"},"nodeType":"YulFunctionCall","src":"307:32:2"},"nodeType":"YulIf","src":"304:52:2"},{"nodeType":"YulAssignment","src":"365:50:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:2"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:2"},"nodeType":"YulFunctionCall","src":"375:40:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:2"}]},{"nodeType":"YulAssignment","src":"424:59:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:2"},"nodeType":"YulFunctionCall","src":"464:18:2"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:2"},"nodeType":"YulFunctionCall","src":"434:49:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:2"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:2","type":""}],"src":"196:293:2"},{"body":{"nodeType":"YulBlock","src":"540:171:2","statements":[{"body":{"nodeType":"YulBlock","src":"571:111:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"592:1:2","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"599:3:2","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"604:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"595:3:2"},"nodeType":"YulFunctionCall","src":"595:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"585:6:2"},"nodeType":"YulFunctionCall","src":"585:31:2"},"nodeType":"YulExpressionStatement","src":"585:31:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"636:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"639:4:2","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"629:6:2"},"nodeType":"YulFunctionCall","src":"629:15:2"},"nodeType":"YulExpressionStatement","src":"629:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"664:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"667:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"657:6:2"},"nodeType":"YulFunctionCall","src":"657:15:2"},"nodeType":"YulExpressionStatement","src":"657:15:2"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"560:1:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"553:6:2"},"nodeType":"YulFunctionCall","src":"553:9:2"},"nodeType":"YulIf","src":"550:132:2"},{"nodeType":"YulAssignment","src":"691:14:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"700:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"703:1:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"696:3:2"},"nodeType":"YulFunctionCall","src":"696:9:2"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"691:1:2"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"525:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"528:1:2","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"534:1:2","type":""}],"src":"494:217:2"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260006001556802df85d331a7b40000600355662386f26fc10000600455678ac7230489e800006005556803860e639d80640000600655600060085565048c273950006009556000600a5565048c27395000600b5534801561006457600080fd5b50604051610dcc380380610dcc83398101604081905261008391610142565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506100df60095460035461011360201b610a091790919060201c565b600755600c80546001600160a01b039384166001600160a01b031991821617909155600d8054929093169116179055610197565b600061011f8284610175565b9392505050565b80516001600160a01b038116811461013d57600080fd5b919050565b6000806040838503121561015557600080fd5b61015e83610126565b915061016c60208401610126565b90509250929050565b60008261019257634e487b7160e01b600052601260045260246000fd5b500490565b610c26806101a66000396000f3fe6080604052600436106101185760003560e01c806398d5fdca116100a0578063de8e81ed11610064578063de8e81ed146102db578063e36b0b37146102fb578063e7a6ac5514610310578063f2fde38b14610326578063fe96973a1461034657610127565b806398d5fdca14610265578063a6f2ae3a14610127578063afd189161461027a578063c8aad2501461028f578063dde070e8146102a557610127565b8063715018a6116100e7578063715018a6146101c557806378442876146101da5780637b7902dd146101f05780638092be4a146102105780638da5cb5b1461023d57610127565b80630660f1e81461012f5780630e3ab61d1461016f5780631698755f1461018f57806334ad1f32146101af57610127565b3661012757610125610366565b005b610125610366565b34801561013b57600080fd5b5061015c61014a366004610af8565b600e6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561017b57600080fd5b5061012561018a366004610b13565b6105dc565b34801561019b57600080fd5b506101256101aa366004610b2c565b610643565b3480156101bb57600080fd5b5061015c600b5481565b3480156101d157600080fd5b50610125610704565b3480156101e657600080fd5b5061015c60085481565b3480156101fc57600080fd5b5061015c61020b366004610b13565b610778565b34801561021c57600080fd5b5061015c61022b366004610af8565b600f6020526000908152604090205481565b34801561024957600080fd5b506000546040516001600160a01b039091168152602001610166565b34801561027157600080fd5b5060075461015c565b34801561028657600080fd5b506101256107d0565b34801561029b57600080fd5b5061015c60095481565b3480156102b157600080fd5b5061015c6102c0366004610af8565b6001600160a01b03166000908152600e602052604090205490565b3480156102e757600080fd5b506101256102f6366004610b13565b6108ae565b34801561030757600080fd5b506101256108dd565b34801561031c57600080fd5b5061015c600a5481565b34801561033257600080fd5b50610125610341366004610af8565b61090e565b34801561035257600080fd5b50610125610361366004610b13565b610941565b600060015411801561037a57506003600154105b6103cb5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420616c6c6f77656420746f20627579206e6f772e00000000000000000060448201526064015b60405180910390fd5b6001546001036104aa57336000908152600f60205260409020546103f0903490610b56565b6005541015801561041d5750600454336000908152600f602052604090205461041a903490610b56565b10155b801561043857503360009081526002602052604090205460ff165b6104aa5760405162461bcd60e51b815260206004820152603d60248201527f416d6f756e7420697320616c6c6f77656420302e30312065746820746f20313060448201527f2065746820666f72206f6e6c79206c697374656420616464726573732e00000060648201526084016103c2565b60006104b534610778565b90506001546001036104de5734600860008282546104d39190610b56565b909155506104f69050565b34600a60008282546104f09190610b56565b90915550505b600080546040516001600160a01b039091169034908381818185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b50509050806105905760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016103c2565b336000908152600e6020526040812080548492906105af908490610b56565b9091555050336000908152600f6020526040812080543492906105d3908490610b56565b90915550505050565b6000546001600160a01b031633146106065760405162461bcd60e51b81526004016103c290610b77565b60018181558190036106275760095460035461062191610a09565b60075550565b60015460020361064057600b5460065461062191610a09565b50565b6000546001600160a01b0316331461066d5760405162461bcd60e51b81526004016103c290610b77565b816001600160a01b031663a9059cbb61068e6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190610bac565b505050565b6000546001600160a01b0316331461072e5760405162461bcd60e51b81526004016103c290610b77565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000600154600214801561078f5750600654600a54115b156107bc576107ae600b5483600a546107a89190610b56565b90610a09565b60078190556107bc906108ae565b6007546107ca908390610a09565b92915050565b33600052600e602052600c54336000818152600e60205260409081902054905163a9059cbb60e01b8152600481019290925260248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610bac565b50336000818152600e602090815260408083208390558051938452908301919091527f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4910160405180910390a1565b6000546001600160a01b031633146108d85760405162461bcd60e51b81526004016103c290610b77565b600755565b6000546001600160a01b031633146109075760405162461bcd60e51b81526004016103c290610b77565b6003600155565b6000546001600160a01b031633146109385760405162461bcd60e51b81526004016103c290610b77565b61064081610a1c565b6000546001600160a01b0316331461096b5760405162461bcd60e51b81526004016103c290610b77565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146109b8576040519150601f19603f3d011682016040523d82523d6000602084013e6109bd565b606091505b5050905080610a055760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016103c2565b5050565b6000610a158284610bce565b9392505050565b6001600160a01b038116610a815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610af357600080fd5b919050565b600060208284031215610b0a57600080fd5b610a1582610adc565b600060208284031215610b2557600080fd5b5035919050565b60008060408385031215610b3f57600080fd5b610b4883610adc565b946020939093013593505050565b808201808211156107ca57634e487b7160e01b600052601160045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bbe57600080fd5b81518015158114610a1557600080fd5b600082610beb57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204e7d17c242ec6fa52e244e654bd5abec00888907c009b3da73e188174b5b234364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH9 0x2DF85D331A7B40000 PUSH1 0x3 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x4 SSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x5 SSTORE PUSH9 0x3860E639D80640000 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE PUSH6 0x48C27395000 PUSH1 0x9 SSTORE PUSH1 0x0 PUSH1 0xA SSTORE PUSH6 0x48C27395000 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDCC CODESIZE SUB DUP1 PUSH2 0xDCC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x83 SWAP2 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0xDF PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x113 PUSH1 0x20 SHL PUSH2 0xA09 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x197 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F DUP3 DUP5 PUSH2 0x175 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E DUP4 PUSH2 0x126 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C PUSH1 0x20 DUP5 ADD PUSH2 0x126 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x192 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH2 0xC26 DUP1 PUSH2 0x1A6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5FDCA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDE8E81ED GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE8E81ED EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xE7A6AC55 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x346 JUMPI PUSH2 0x127 JUMP JUMPDEST DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xAFD18916 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xC8AAD250 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDDE070E8 EQ PUSH2 0x2A5 JUMPI PUSH2 0x127 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x78442876 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x7B7902DD EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8092BE4A EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23D JUMPI PUSH2 0x127 JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xE3AB61D EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1698755F EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x34AD1F32 EQ PUSH2 0x1AF JUMPI PUSH2 0x127 JUMP JUMPDEST CALLDATASIZE PUSH2 0x127 JUMPI PUSH2 0x125 PUSH2 0x366 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH2 0x366 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x704 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x15C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x7D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x8DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x37A JUMPI POP PUSH1 0x3 PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F77656420746F20627579206E6F772E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x4AA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3F0 SWAP1 CALLVALUE SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x5 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x41D JUMPI POP PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x41A SWAP1 CALLVALUE SWAP1 PUSH2 0xB56 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x438 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420697320616C6C6F77656420302E30312065746820746F203130 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2065746820666F72206F6E6C79206C697374656420616464726573732E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 CALLVALUE PUSH2 0x778 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x4DE JUMPI CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4F6 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5AF SWAP1 DUP5 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x5D3 SWAP1 DUP5 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SSTORE DUP2 SWAP1 SUB PUSH2 0x627 JUMPI PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x621 SWAP2 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SUB PUSH2 0x640 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH2 0x621 SWAP2 PUSH2 0xA09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x68E PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 EQ DUP1 ISZERO PUSH2 0x78F JUMPI POP PUSH1 0x6 SLOAD PUSH1 0xA SLOAD GT JUMPDEST ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7AE PUSH1 0xB SLOAD DUP4 PUSH1 0xA SLOAD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x7BC SWAP1 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x7CA SWAP1 DUP4 SWAP1 PUSH2 0xA09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xC SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x640 DUP2 PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP3 DUP5 PUSH2 0xBCE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA15 DUP3 PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB48 DUP4 PUSH2 0xADC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBEB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH30 0x17C242EC6FA52E244E654BD5ABEC00888907C009B3DA73E188174B5B2343 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"10111:4012:1:-:0;;;9486:1;9469:18;;10439:9;10410:38;;10478:4;10455:27;;10512:4;10489:27;;10588:9;10560:37;;10719:1;10680:40;;10766:13;10727:52;;10824:1;10786:39;;10870:13;10832:51;;11058:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8480:17;8523:18;;-1:-1:-1;;;;;;8523:18:1;1332:10;8523:18;;;;;8557:43;;1332:10;;;;8557:43;;8480:17;;8557:43;8469:139;11201:45;11224:21;;11201:18;;:22;;;;;;:45;;;;:::i;:::-;11188:10;:58;11257:13;:30;;-1:-1:-1;;;;;11257:30:1;;;-1:-1:-1;;;;;;11257:30:1;;;;;;;11298:11;:26;;;;;;;;;;;10111:4012;;5202:98;5260:7;5287:5;5291:1;5287;:5;:::i;:::-;5280:12;5202:98;-1:-1:-1;;;5202:98:1:o;14:177:2:-;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:217::-;534:1;560;550:132;;604:10;599:3;595:20;592:1;585:31;639:4;636:1;629:15;667:4;664:1;657:15;550:132;-1:-1:-1;696:9:2;;494:217::o;:::-;10111:4012:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1888":{"entryPoint":null,"id":1888,"parameterSlots":0,"returnSlots":0},"@_1895":{"entryPoint":null,"id":1895,"parameterSlots":0,"returnSlots":0},"@_msgSender_1045":{"entryPoint":null,"id":1045,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1475":{"entryPoint":2588,"id":1475,"parameterSlots":1,"returnSlots":0},"@buy_1815":{"entryPoint":870,"id":1815,"parameterSlots":0,"returnSlots":0},"@calcTokenAmount_1711":{"entryPoint":1912,"id":1711,"parameterSlots":1,"returnSlots":1},"@claimETH_1533":{"entryPoint":2369,"id":1533,"parameterSlots":1,"returnSlots":0},"@claimRewardToken_1857":{"entryPoint":2000,"id":1857,"parameterSlots":0,"returnSlots":0},"@claimToken_1510":{"entryPoint":1603,"id":1510,"parameterSlots":2,"returnSlots":0},"@div_1275":{"entryPoint":2569,"id":1275,"parameterSlots":2,"returnSlots":1},"@getClaimAmount_1871":{"entryPoint":null,"id":1871,"parameterSlots":1,"returnSlots":1},"@getPrice_1881":{"entryPoint":null,"id":1881,"parameterSlots":0,"returnSlots":1},"@owner_1405":{"entryPoint":null,"id":1405,"parameterSlots":0,"returnSlots":1},"@privateSaleAllocation_1581":{"entryPoint":null,"id":1581,"parameterSlots":0,"returnSlots":0},"@privateSaleTotalSaled_1576":{"entryPoint":null,"id":1576,"parameterSlots":0,"returnSlots":0},"@publicSaleAllocation_1589":{"entryPoint":null,"id":1589,"parameterSlots":0,"returnSlots":0},"@publicSaleTotalSaled_1584":{"entryPoint":null,"id":1584,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_1438":{"entryPoint":1796,"id":1438,"parameterSlots":0,"returnSlots":0},"@resetPrice_1636":{"entryPoint":2222,"id":1636,"parameterSlots":1,"returnSlots":0},"@startSale_1672":{"entryPoint":1500,"id":1672,"parameterSlots":1,"returnSlots":0},"@stopSale_1491":{"entryPoint":2269,"id":1491,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1450":{"entryPoint":2318,"id":1450,"parameterSlots":1,"returnSlots":0},"@userDeposited_1601":{"entryPoint":null,"id":1601,"parameterSlots":0,"returnSlots":0},"@userRewards_1597":{"entryPoint":null,"id":1597,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":2780,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2860,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2902,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3022,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4679:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:2","statements":[{"nodeType":"YulAssignment","src":"73:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:2"},"nodeType":"YulFunctionCall","src":"82:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:2"}]},{"body":{"nodeType":"YulBlock","src":"165:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:2"},"nodeType":"YulFunctionCall","src":"167:12:2"},"nodeType":"YulExpressionStatement","src":"167:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:2"},"nodeType":"YulFunctionCall","src":"146:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:2"},"nodeType":"YulFunctionCall","src":"142:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:2"},"nodeType":"YulFunctionCall","src":"131:31:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:2"},"nodeType":"YulFunctionCall","src":"121:42:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:2"},"nodeType":"YulFunctionCall","src":"114:50:2"},"nodeType":"YulIf","src":"111:70:2"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:2","type":""}],"src":"14:173:2"},{"body":{"nodeType":"YulBlock","src":"262:116:2","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:2"},"nodeType":"YulFunctionCall","src":"279:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:2"},"nodeType":"YulFunctionCall","src":"275:32:2"},"nodeType":"YulIf","src":"272:52:2"},{"nodeType":"YulAssignment","src":"333:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:2"},"nodeType":"YulFunctionCall","src":"343:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:2"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:2","type":""}],"src":"192:186:2"},{"body":{"nodeType":"YulBlock","src":"484:76:2","statements":[{"nodeType":"YulAssignment","src":"494:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:2"},"nodeType":"YulFunctionCall","src":"502:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"536:9:2"},{"name":"value0","nodeType":"YulIdentifier","src":"547:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"529:6:2"},"nodeType":"YulFunctionCall","src":"529:25:2"},"nodeType":"YulExpressionStatement","src":"529:25:2"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"453:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"464:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"475:4:2","type":""}],"src":"383:177:2"},{"body":{"nodeType":"YulBlock","src":"635:110:2","statements":[{"body":{"nodeType":"YulBlock","src":"681:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"690:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"693:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"683:6:2"},"nodeType":"YulFunctionCall","src":"683:12:2"},"nodeType":"YulExpressionStatement","src":"683:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"656:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"665:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"652:3:2"},"nodeType":"YulFunctionCall","src":"652:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"677:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"648:3:2"},"nodeType":"YulFunctionCall","src":"648:32:2"},"nodeType":"YulIf","src":"645:52:2"},{"nodeType":"YulAssignment","src":"706:33:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"729:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"716:12:2"},"nodeType":"YulFunctionCall","src":"716:23:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"706:6:2"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"601:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"612:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"624:6:2","type":""}],"src":"565:180:2"},{"body":{"nodeType":"YulBlock","src":"837:167:2","statements":[{"body":{"nodeType":"YulBlock","src":"883:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"892:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"895:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"885:6:2"},"nodeType":"YulFunctionCall","src":"885:12:2"},"nodeType":"YulExpressionStatement","src":"885:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"858:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"867:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"854:3:2"},"nodeType":"YulFunctionCall","src":"854:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"850:3:2"},"nodeType":"YulFunctionCall","src":"850:32:2"},"nodeType":"YulIf","src":"847:52:2"},{"nodeType":"YulAssignment","src":"908:39:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:2"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"918:18:2"},"nodeType":"YulFunctionCall","src":"918:29:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"908:6:2"}]},{"nodeType":"YulAssignment","src":"956:42:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"983:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"994:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:2"},"nodeType":"YulFunctionCall","src":"979:18:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"966:12:2"},"nodeType":"YulFunctionCall","src":"966:32:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"956:6:2"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"795:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"806:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"818:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"826:6:2","type":""}],"src":"750:254:2"},{"body":{"nodeType":"YulBlock","src":"1110:102:2","statements":[{"nodeType":"YulAssignment","src":"1120:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1143:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1128:3:2"},"nodeType":"YulFunctionCall","src":"1128:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1120:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1162:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1177:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1193:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1198:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1189:3:2"},"nodeType":"YulFunctionCall","src":"1189:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"1202:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1185:3:2"},"nodeType":"YulFunctionCall","src":"1185:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1173:3:2"},"nodeType":"YulFunctionCall","src":"1173:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1155:6:2"},"nodeType":"YulFunctionCall","src":"1155:51:2"},"nodeType":"YulExpressionStatement","src":"1155:51:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1079:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1090:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1101:4:2","type":""}],"src":"1009:203:2"},{"body":{"nodeType":"YulBlock","src":"1391:173:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1408:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1419:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1401:6:2"},"nodeType":"YulFunctionCall","src":"1401:21:2"},"nodeType":"YulExpressionStatement","src":"1401:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1442:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1453:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1438:3:2"},"nodeType":"YulFunctionCall","src":"1438:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"1458:2:2","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1431:6:2"},"nodeType":"YulFunctionCall","src":"1431:30:2"},"nodeType":"YulExpressionStatement","src":"1431:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1481:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1492:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:2"},"nodeType":"YulFunctionCall","src":"1477:18:2"},{"hexValue":"4e6f7420616c6c6f77656420746f20627579206e6f772e","kind":"string","nodeType":"YulLiteral","src":"1497:25:2","type":"","value":"Not allowed to buy now."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:2"},"nodeType":"YulFunctionCall","src":"1470:53:2"},"nodeType":"YulExpressionStatement","src":"1470:53:2"},{"nodeType":"YulAssignment","src":"1532:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1544:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1555:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1540:3:2"},"nodeType":"YulFunctionCall","src":"1540:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1532:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1368:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1382:4:2","type":""}],"src":"1217:347:2"},{"body":{"nodeType":"YulBlock","src":"1617:174:2","statements":[{"nodeType":"YulAssignment","src":"1627:16:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1638:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"1641:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1634:3:2"},"nodeType":"YulFunctionCall","src":"1634:9:2"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"1627:3:2"}]},{"body":{"nodeType":"YulBlock","src":"1674:111:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1695:1:2","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1702:3:2","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1707:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1698:3:2"},"nodeType":"YulFunctionCall","src":"1698:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1688:6:2"},"nodeType":"YulFunctionCall","src":"1688:31:2"},"nodeType":"YulExpressionStatement","src":"1688:31:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1739:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1742:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1732:6:2"},"nodeType":"YulFunctionCall","src":"1732:15:2"},"nodeType":"YulExpressionStatement","src":"1732:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1767:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1770:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1760:6:2"},"nodeType":"YulFunctionCall","src":"1760:15:2"},"nodeType":"YulExpressionStatement","src":"1760:15:2"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1658:1:2"},{"name":"sum","nodeType":"YulIdentifier","src":"1661:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1655:2:2"},"nodeType":"YulFunctionCall","src":"1655:10:2"},"nodeType":"YulIf","src":"1652:133:2"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1600:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"1603:1:2","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"1609:3:2","type":""}],"src":"1569:222:2"},{"body":{"nodeType":"YulBlock","src":"1970:251:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1987:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1998:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1980:6:2"},"nodeType":"YulFunctionCall","src":"1980:21:2"},"nodeType":"YulExpressionStatement","src":"1980:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2021:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2032:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2017:3:2"},"nodeType":"YulFunctionCall","src":"2017:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"2037:2:2","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2010:6:2"},"nodeType":"YulFunctionCall","src":"2010:30:2"},"nodeType":"YulExpressionStatement","src":"2010:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2060:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2071:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2056:3:2"},"nodeType":"YulFunctionCall","src":"2056:18:2"},{"hexValue":"416d6f756e7420697320616c6c6f77656420302e30312065746820746f203130","kind":"string","nodeType":"YulLiteral","src":"2076:34:2","type":"","value":"Amount is allowed 0.01 eth to 10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2049:6:2"},"nodeType":"YulFunctionCall","src":"2049:62:2"},"nodeType":"YulExpressionStatement","src":"2049:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2131:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2142:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2127:3:2"},"nodeType":"YulFunctionCall","src":"2127:18:2"},{"hexValue":"2065746820666f72206f6e6c79206c697374656420616464726573732e","kind":"string","nodeType":"YulLiteral","src":"2147:31:2","type":"","value":" eth for only listed address."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2120:6:2"},"nodeType":"YulFunctionCall","src":"2120:59:2"},"nodeType":"YulExpressionStatement","src":"2120:59:2"},{"nodeType":"YulAssignment","src":"2188:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2200:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2211:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2196:3:2"},"nodeType":"YulFunctionCall","src":"2196:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2188:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1947:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1961:4:2","type":""}],"src":"1796:425:2"},{"body":{"nodeType":"YulBlock","src":"2417:14:2","statements":[{"nodeType":"YulAssignment","src":"2419:10:2","value":{"name":"pos","nodeType":"YulIdentifier","src":"2426:3:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2419:3:2"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2401:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2409:3:2","type":""}],"src":"2226:205:2"},{"body":{"nodeType":"YulBlock","src":"2610:170:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2627:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2638:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2620:6:2"},"nodeType":"YulFunctionCall","src":"2620:21:2"},"nodeType":"YulExpressionStatement","src":"2620:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2661:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2672:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2657:3:2"},"nodeType":"YulFunctionCall","src":"2657:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"2677:2:2","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2650:6:2"},"nodeType":"YulFunctionCall","src":"2650:30:2"},"nodeType":"YulExpressionStatement","src":"2650:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2696:3:2"},"nodeType":"YulFunctionCall","src":"2696:18:2"},{"hexValue":"4661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"2716:22:2","type":"","value":"Failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2689:6:2"},"nodeType":"YulFunctionCall","src":"2689:50:2"},"nodeType":"YulExpressionStatement","src":"2689:50:2"},{"nodeType":"YulAssignment","src":"2748:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2771:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:2"},"nodeType":"YulFunctionCall","src":"2756:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2748:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2587:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2601:4:2","type":""}],"src":"2436:344:2"},{"body":{"nodeType":"YulBlock","src":"2959:182:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2976:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2987:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2969:6:2"},"nodeType":"YulFunctionCall","src":"2969:21:2"},"nodeType":"YulExpressionStatement","src":"2969:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3021:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:2"},"nodeType":"YulFunctionCall","src":"3006:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"3026:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2999:6:2"},"nodeType":"YulFunctionCall","src":"2999:30:2"},"nodeType":"YulExpressionStatement","src":"2999:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3049:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3060:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3045:3:2"},"nodeType":"YulFunctionCall","src":"3045:18:2"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"3065:34:2","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3038:6:2"},"nodeType":"YulFunctionCall","src":"3038:62:2"},"nodeType":"YulExpressionStatement","src":"3038:62:2"},{"nodeType":"YulAssignment","src":"3109:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3121:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3132:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3117:3:2"},"nodeType":"YulFunctionCall","src":"3117:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3109:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2936:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2950:4:2","type":""}],"src":"2785:356:2"},{"body":{"nodeType":"YulBlock","src":"3275:145:2","statements":[{"nodeType":"YulAssignment","src":"3285:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3297:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3308:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3293:3:2"},"nodeType":"YulFunctionCall","src":"3293:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3285:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3327:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3342:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3358:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3363:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3354:3:2"},"nodeType":"YulFunctionCall","src":"3354:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"3367:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3350:3:2"},"nodeType":"YulFunctionCall","src":"3350:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3338:3:2"},"nodeType":"YulFunctionCall","src":"3338:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3320:6:2"},"nodeType":"YulFunctionCall","src":"3320:51:2"},"nodeType":"YulExpressionStatement","src":"3320:51:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3391:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3402:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3387:3:2"},"nodeType":"YulFunctionCall","src":"3387:18:2"},{"name":"value1","nodeType":"YulIdentifier","src":"3407:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3380:6:2"},"nodeType":"YulFunctionCall","src":"3380:34:2"},"nodeType":"YulExpressionStatement","src":"3380:34:2"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3236:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3247:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3255:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3266:4:2","type":""}],"src":"3146:274:2"},{"body":{"nodeType":"YulBlock","src":"3503:199:2","statements":[{"body":{"nodeType":"YulBlock","src":"3549:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3558:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3561:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3551:6:2"},"nodeType":"YulFunctionCall","src":"3551:12:2"},"nodeType":"YulExpressionStatement","src":"3551:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3524:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3520:3:2"},"nodeType":"YulFunctionCall","src":"3520:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3516:3:2"},"nodeType":"YulFunctionCall","src":"3516:32:2"},"nodeType":"YulIf","src":"3513:52:2"},{"nodeType":"YulVariableDeclaration","src":"3574:29:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3593:9:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3587:5:2"},"nodeType":"YulFunctionCall","src":"3587:16:2"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"3656:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3665:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3668:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3658:6:2"},"nodeType":"YulFunctionCall","src":"3658:12:2"},"nodeType":"YulExpressionStatement","src":"3658:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3625:5:2"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3646:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3639:6:2"},"nodeType":"YulFunctionCall","src":"3639:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3632:6:2"},"nodeType":"YulFunctionCall","src":"3632:21:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3622:2:2"},"nodeType":"YulFunctionCall","src":"3622:32:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3615:6:2"},"nodeType":"YulFunctionCall","src":"3615:40:2"},"nodeType":"YulIf","src":"3612:60:2"},{"nodeType":"YulAssignment","src":"3681:15:2","value":{"name":"value","nodeType":"YulIdentifier","src":"3691:5:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3681:6:2"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3469:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3480:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3492:6:2","type":""}],"src":"3425:277:2"},{"body":{"nodeType":"YulBlock","src":"3881:167:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3909:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3891:6:2"},"nodeType":"YulFunctionCall","src":"3891:21:2"},"nodeType":"YulExpressionStatement","src":"3891:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3932:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3928:3:2"},"nodeType":"YulFunctionCall","src":"3928:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"3948:2:2","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3921:6:2"},"nodeType":"YulFunctionCall","src":"3921:30:2"},"nodeType":"YulExpressionStatement","src":"3921:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3971:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3982:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:2"},"nodeType":"YulFunctionCall","src":"3967:18:2"},{"hexValue":"506c656173652062757920746f6b656e2e","kind":"string","nodeType":"YulLiteral","src":"3987:19:2","type":"","value":"Please buy token."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3960:6:2"},"nodeType":"YulFunctionCall","src":"3960:47:2"},"nodeType":"YulExpressionStatement","src":"3960:47:2"},{"nodeType":"YulAssignment","src":"4016:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4028:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4039:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4024:3:2"},"nodeType":"YulFunctionCall","src":"4024:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4016:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3858:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3872:4:2","type":""}],"src":"3707:341:2"},{"body":{"nodeType":"YulBlock","src":"4099:171:2","statements":[{"body":{"nodeType":"YulBlock","src":"4130:111:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4151:1:2","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4158:3:2","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4163:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4154:3:2"},"nodeType":"YulFunctionCall","src":"4154:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4144:6:2"},"nodeType":"YulFunctionCall","src":"4144:31:2"},"nodeType":"YulExpressionStatement","src":"4144:31:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4195:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4198:4:2","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4188:6:2"},"nodeType":"YulFunctionCall","src":"4188:15:2"},"nodeType":"YulExpressionStatement","src":"4188:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4223:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4226:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4216:6:2"},"nodeType":"YulFunctionCall","src":"4216:15:2"},"nodeType":"YulExpressionStatement","src":"4216:15:2"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4119:1:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4112:6:2"},"nodeType":"YulFunctionCall","src":"4112:9:2"},"nodeType":"YulIf","src":"4109:132:2"},{"nodeType":"YulAssignment","src":"4250:14:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4259:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"4262:1:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4255:3:2"},"nodeType":"YulFunctionCall","src":"4255:9:2"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4250:1:2"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4084:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"4087:1:2","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4093:1:2","type":""}],"src":"4053:217:2"},{"body":{"nodeType":"YulBlock","src":"4449:228:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4466:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4477:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4459:6:2"},"nodeType":"YulFunctionCall","src":"4459:21:2"},"nodeType":"YulExpressionStatement","src":"4459:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4500:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4511:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4496:3:2"},"nodeType":"YulFunctionCall","src":"4496:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"4516:2:2","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4489:6:2"},"nodeType":"YulFunctionCall","src":"4489:30:2"},"nodeType":"YulExpressionStatement","src":"4489:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4539:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4550:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4535:3:2"},"nodeType":"YulFunctionCall","src":"4535:18:2"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4555:34:2","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4528:6:2"},"nodeType":"YulFunctionCall","src":"4528:62:2"},"nodeType":"YulExpressionStatement","src":"4528:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4610:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4621:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4606:3:2"},"nodeType":"YulFunctionCall","src":"4606:18:2"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4626:8:2","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4599:6:2"},"nodeType":"YulFunctionCall","src":"4599:36:2"},"nodeType":"YulExpressionStatement","src":"4599:36:2"},{"nodeType":"YulAssignment","src":"4644:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4656:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4667:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4652:3:2"},"nodeType":"YulFunctionCall","src":"4652:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4644:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4426:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4440:4:2","type":""}],"src":"4275:402:2"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not allowed to buy now.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Amount is allowed 0.01 eth to 10\")\n        mstore(add(headStart, 96), \" eth for only listed address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Please buy token.\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101185760003560e01c806398d5fdca116100a0578063de8e81ed11610064578063de8e81ed146102db578063e36b0b37146102fb578063e7a6ac5514610310578063f2fde38b14610326578063fe96973a1461034657610127565b806398d5fdca14610265578063a6f2ae3a14610127578063afd189161461027a578063c8aad2501461028f578063dde070e8146102a557610127565b8063715018a6116100e7578063715018a6146101c557806378442876146101da5780637b7902dd146101f05780638092be4a146102105780638da5cb5b1461023d57610127565b80630660f1e81461012f5780630e3ab61d1461016f5780631698755f1461018f57806334ad1f32146101af57610127565b3661012757610125610366565b005b610125610366565b34801561013b57600080fd5b5061015c61014a366004610af8565b600e6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561017b57600080fd5b5061012561018a366004610b13565b6105dc565b34801561019b57600080fd5b506101256101aa366004610b2c565b610643565b3480156101bb57600080fd5b5061015c600b5481565b3480156101d157600080fd5b50610125610704565b3480156101e657600080fd5b5061015c60085481565b3480156101fc57600080fd5b5061015c61020b366004610b13565b610778565b34801561021c57600080fd5b5061015c61022b366004610af8565b600f6020526000908152604090205481565b34801561024957600080fd5b506000546040516001600160a01b039091168152602001610166565b34801561027157600080fd5b5060075461015c565b34801561028657600080fd5b506101256107d0565b34801561029b57600080fd5b5061015c60095481565b3480156102b157600080fd5b5061015c6102c0366004610af8565b6001600160a01b03166000908152600e602052604090205490565b3480156102e757600080fd5b506101256102f6366004610b13565b6108ae565b34801561030757600080fd5b506101256108dd565b34801561031c57600080fd5b5061015c600a5481565b34801561033257600080fd5b50610125610341366004610af8565b61090e565b34801561035257600080fd5b50610125610361366004610b13565b610941565b600060015411801561037a57506003600154105b6103cb5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420616c6c6f77656420746f20627579206e6f772e00000000000000000060448201526064015b60405180910390fd5b6001546001036104aa57336000908152600f60205260409020546103f0903490610b56565b6005541015801561041d5750600454336000908152600f602052604090205461041a903490610b56565b10155b801561043857503360009081526002602052604090205460ff165b6104aa5760405162461bcd60e51b815260206004820152603d60248201527f416d6f756e7420697320616c6c6f77656420302e30312065746820746f20313060448201527f2065746820666f72206f6e6c79206c697374656420616464726573732e00000060648201526084016103c2565b60006104b534610778565b90506001546001036104de5734600860008282546104d39190610b56565b909155506104f69050565b34600a60008282546104f09190610b56565b90915550505b600080546040516001600160a01b039091169034908381818185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b50509050806105905760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016103c2565b336000908152600e6020526040812080548492906105af908490610b56565b9091555050336000908152600f6020526040812080543492906105d3908490610b56565b90915550505050565b6000546001600160a01b031633146106065760405162461bcd60e51b81526004016103c290610b77565b60018181558190036106275760095460035461062191610a09565b60075550565b60015460020361064057600b5460065461062191610a09565b50565b6000546001600160a01b0316331461066d5760405162461bcd60e51b81526004016103c290610b77565b816001600160a01b031663a9059cbb61068e6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190610bac565b505050565b6000546001600160a01b0316331461072e5760405162461bcd60e51b81526004016103c290610b77565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000600154600214801561078f5750600654600a54115b156107bc576107ae600b5483600a546107a89190610b56565b90610a09565b60078190556107bc906108ae565b6007546107ca908390610a09565b92915050565b33600052600e602052600c54336000818152600e60205260409081902054905163a9059cbb60e01b8152600481019290925260248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610bac565b50336000818152600e602090815260408083208390558051938452908301919091527f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4910160405180910390a1565b6000546001600160a01b031633146108d85760405162461bcd60e51b81526004016103c290610b77565b600755565b6000546001600160a01b031633146109075760405162461bcd60e51b81526004016103c290610b77565b6003600155565b6000546001600160a01b031633146109385760405162461bcd60e51b81526004016103c290610b77565b61064081610a1c565b6000546001600160a01b0316331461096b5760405162461bcd60e51b81526004016103c290610b77565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146109b8576040519150601f19603f3d011682016040523d82523d6000602084013e6109bd565b606091505b5050905080610a055760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016103c2565b5050565b6000610a158284610bce565b9392505050565b6001600160a01b038116610a815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610af357600080fd5b919050565b600060208284031215610b0a57600080fd5b610a1582610adc565b600060208284031215610b2557600080fd5b5035919050565b60008060408385031215610b3f57600080fd5b610b4883610adc565b946020939093013593505050565b808201808211156107ca57634e487b7160e01b600052601160045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bbe57600080fd5b81518015158114610a1557600080fd5b600082610beb57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204e7d17c242ec6fa52e244e654bd5abec00888907c009b3da73e188174b5b234364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5FDCA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDE8E81ED GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE8E81ED EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xE7A6AC55 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x346 JUMPI PUSH2 0x127 JUMP JUMPDEST DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xAFD18916 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xC8AAD250 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDDE070E8 EQ PUSH2 0x2A5 JUMPI PUSH2 0x127 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x78442876 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x7B7902DD EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8092BE4A EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23D JUMPI PUSH2 0x127 JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xE3AB61D EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1698755F EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x34AD1F32 EQ PUSH2 0x1AF JUMPI PUSH2 0x127 JUMP JUMPDEST CALLDATASIZE PUSH2 0x127 JUMPI PUSH2 0x125 PUSH2 0x366 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH2 0x366 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x704 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x15C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x7D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x8DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x37A JUMPI POP PUSH1 0x3 PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F77656420746F20627579206E6F772E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x4AA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3F0 SWAP1 CALLVALUE SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x5 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x41D JUMPI POP PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x41A SWAP1 CALLVALUE SWAP1 PUSH2 0xB56 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x438 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420697320616C6C6F77656420302E30312065746820746F203130 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2065746820666F72206F6E6C79206C697374656420616464726573732E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 CALLVALUE PUSH2 0x778 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x4DE JUMPI CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4F6 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5AF SWAP1 DUP5 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x5D3 SWAP1 DUP5 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SSTORE DUP2 SWAP1 SUB PUSH2 0x627 JUMPI PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x621 SWAP2 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SUB PUSH2 0x640 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH2 0x621 SWAP2 PUSH2 0xA09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x68E PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 EQ DUP1 ISZERO PUSH2 0x78F JUMPI POP PUSH1 0x6 SLOAD PUSH1 0xA SLOAD GT JUMPDEST ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7AE PUSH1 0xB SLOAD DUP4 PUSH1 0xA SLOAD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x7BC SWAP1 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x7CA SWAP1 DUP4 SWAP1 PUSH2 0xA09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xC SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x640 DUP2 PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP3 DUP5 PUSH2 0xBCE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA15 DUP3 PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB48 DUP4 PUSH2 0xADC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBEB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH30 0x17C242EC6FA52E244E654BD5ABEC00888907C009B3DA73E188174B5B2343 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"10111:4012:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14047:5;:3;:5::i;:::-;10111:4012;;14107:5;:3;:5::i;10948:46::-;;;;;;;;;;-1:-1:-1;10948:46:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:2;;;517:2;502:18;10948:46:1;;;;;;;;11648:320;;;;;;;;;;-1:-1:-1;11648:320:1;;;;;:::i;:::-;;:::i;9719:167::-;;;;;;;;;;-1:-1:-1;9719:167:1;;;;;:::i;:::-;;:::i;10832:51::-;;;;;;;;;;;;;;;;8830:140;;;;;;;;;;;;;:::i;10680:40::-;;;;;;;;;;;;;;;;12076:442;;;;;;;;;;-1:-1:-1;12076:442:1;;;;;:::i;:::-;;:::i;11001:48::-;;;;;;;;;;-1:-1:-1;11001:48:1;;;;;:::i;:::-;;;;;;;;;;;;;;8616:79;;;;;;;;;;-1:-1:-1;8654:7:1;8681:6;8616:79;;-1:-1:-1;;;;;8681:6:1;;;1155:51:2;;1143:2;1128:18;8616:79:1;1009:203:2;13908:93:1;;;;;;;;;;-1:-1:-1;13983:10:1;;13908:93;;13438:294;;;;;;;;;;;;;:::i;10727:52::-;;;;;;;;;;;;;;;;13740:160;;;;;;;;;;-1:-1:-1;13740:160:1;;;;;:::i;:::-;-1:-1:-1;;;;;13868:24:1;13822:19;13868:24;;;:11;:24;;;;;;;13740:160;11426:91;;;;;;;;;;-1:-1:-1;11426:91:1;;;;;:::i;:::-;;:::i;9536:71::-;;;;;;;;;;;;;:::i;10786:39::-;;;;;;;;;;;;;;;;8978:109;;;;;;;;;;-1:-1:-1;8978:109:1;;;;;:::i;:::-;;:::i;9937:167::-;;;;;;;;;;-1:-1:-1;9937:167:1;;;;;:::i;:::-;;:::i;12526:904::-;12587:1;12575:9;;:13;:30;;;;;12604:1;12592:9;;:13;12575:30;12567:66;;;;-1:-1:-1;;;12567:66:1;;1419:2:2;12567:66:1;;;1401:21:2;1458:2;1438:18;;;1431:30;1497:25;1477:18;;;1470:53;1540:18;;12567:66:1;;;;;;;;;12648:9;;12661:1;12648:14;12644:360;;1332:10;12722:27;;;;:13;:27;;;;;;:39;;12752:9;;12722:39;:::i;:::-;12705:12;;:57;;:139;;;;-1:-1:-1;12832:12:1;;1332:10;12788:27;;;;:13;:27;;;;;;:39;;12818:9;;12788:39;:::i;:::-;12787:57;;12705:139;:190;;;;-1:-1:-1;12884:10:1;12869:26;;;;:14;:26;;;;;;;;12705:190;12679:313;;;;-1:-1:-1;;;12679:313:1;;1998:2:2;12679:313:1;;;1980:21:2;2037:2;2017:18;;;2010:30;2076:34;2056:18;;;2049:62;2147:31;2127:18;;;2120:59;2196:19;;12679:313:1;1796:425:2;12679:313:1;13016:14;13033:26;13049:9;13033:15;:26::i;:::-;13016:43;;13074:9;;13087:1;13074:14;13070:147;;13130:9;13105:21;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;13070:147:1;;-1:-1:-1;13070:147:1;;13196:9;13172:20;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;13070:147:1;13228:9;8681:6;;13243:34;;-1:-1:-1;;;;;8681:6:1;;;;13263:9;;13228;13243:34;13228:9;13243:34;13263:9;8681:6;13243:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13227:50;;;13296:4;13288:37;;;;-1:-1:-1;;;13288:37:1;;2638:2:2;13288:37:1;;;2620:21:2;2677:2;2657:18;;;2650:30;-1:-1:-1;;;2696:18:2;;;2689:50;2756:18;;13288:37:1;2436:344:2;13288:37:1;1332:10;13336:25;;;;:11;:25;;;;;:35;;13365:6;;13336:25;:35;;13365:6;;13336:35;:::i;:::-;;;;-1:-1:-1;;1332:10:1;13382:27;;;;:13;:27;;;;;:40;;13413:9;;13382:27;:40;;13413:9;;13382:40;:::i;:::-;;;;-1:-1:-1;;;;12526:904:1:o;11648:320::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;11714:9:::1;:22:::0;;;11751:14;;;11747:214:::1;;11818:21;::::0;11795:18:::1;::::0;:45:::1;::::0;:22:::1;:45::i;:::-;11782:10;:58:::0;11648:320;:::o;11747:214::-:1;11862:9;;11875:1;11862:14:::0;11858:103:::1;;11928:20;::::0;11906:17:::1;::::0;:43:::1;::::0;:21:::1;:43::i;11858:103::-;11648:320:::0;:::o;9719:167::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;9839:12:::1;-1:-1:-1::0;;;;;9832:29:1::1;;9862:7;8654::::0;8681:6;-1:-1:-1;;;;;8681:6:1;;8616:79;9862:7:::1;9832:46;::::0;-1:-1:-1;;;;;;9832:46:1::1;::::0;;;;;;-1:-1:-1;;;;;3338:32:2;;;9832:46:1::1;::::0;::::1;3320:51:2::0;3387:18;;;3380:34;;;3293:18;;9832:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9719:167:::0;;:::o;8830:140::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;8929:1:::1;8913:6:::0;;8892:40:::1;::::0;-1:-1:-1;;;;;8913:6:1;;::::1;::::0;8892:40:::1;::::0;8929:1;;8892:40:::1;8960:1;8943:19:::0;;-1:-1:-1;;;;;;8943:19:1::1;::::0;;8830:140::o;12076:442::-;12153:14;12233:9;;12246:1;12233:14;:58;;;;;12274:17;;12251:20;;:40;12233:58;12229:234;;;12321:93;12379:20;;12345:10;12322:20;;:33;;;;:::i;:::-;12321:39;;:93::i;:::-;12308:10;:106;;;12429:22;;:10;:22::i;:::-;12499:10;;12482:28;;12483:10;;12482:16;:28::i;:::-;12473:37;12076:442;-1:-1:-1;;12076:442:1:o;13438:294::-;1332:10;13521:1;13492:25;:11;:25;;13562:13;;13586:10;13562:13;13598:25;;;:11;:25;;;;;;;;13555:69;;-1:-1:-1;;;13555:69:1;;;;;3320:51:2;;;;3387:18;;;3380:34;-1:-1:-1;;;;;13562:13:1;;;;13555:30;;3293:18:2;;13555:69:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1332:10:1;13663:1;13635:25;;;:11;:25;;;;;;;;:29;;;13680:44;;3320:51:2;;;3387:18;;;3380:34;;;;13680:44:1;;3293:18:2;13680:44:1;;;;;;;13438:294::o;11426:91::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;11490:10:::1;:19:::0;11426:91::o;9536:71::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;9598:1:::1;9586:9;:13:::0;9536:71::o;8978:109::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;9051:28:::1;9070:8;9051:18;:28::i;9937:167::-:0;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;;;;;;:::i;:::-;10002:9:::1;8681:6:::0;;10017:31:::1;::::0;-1:-1:-1;;;;;8681:6:1;;;;10037;;10002:9;10017:31;10002:9;10017:31;10037:6;8681;10017:31:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10001:47;;;10067:4;10059:37;;;::::0;-1:-1:-1;;;10059:37:1;;2638:2:2;10059:37:1::1;::::0;::::1;2620:21:2::0;2677:2;2657:18;;;2650:30;-1:-1:-1;;;2696:18:2;;;2689:50;2756:18;;10059:37:1::1;2436:344:2::0;10059:37:1::1;9990:114;9937:167:::0;:::o;5202:98::-;5260:7;5287:5;5291:1;5287;:5;:::i;:::-;5280:12;5202:98;-1:-1:-1;;;5202:98:1:o;9095:266::-;-1:-1:-1;;;;;9183:22:1;;9161:110;;;;-1:-1:-1;;;9161:110:1;;4477:2:2;9161:110:1;;;4459:21:2;4516:2;4496:18;;;4489:30;4555:34;4535:18;;;4528:62;-1:-1:-1;;;4606:18:2;;;4599:36;4652:19;;9161:110:1;4275:402:2;9161:110:1;9308:6;;;9287:38;;-1:-1:-1;;;;;9287:38:1;;;;9308:6;;;9287:38;;;9336:6;:17;;-1:-1:-1;;;;;;9336:17:1;-1:-1:-1;;;;;9336:17:1;;;;;;;;;;9095:266::o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:180::-;624:6;677:2;665:9;656:7;652:23;648:32;645:52;;;693:1;690;683:12;645:52;-1:-1:-1;716:23:2;;565:180;-1:-1:-1;565:180:2:o;750:254::-;818:6;826;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;918:29;937:9;918:29;:::i;:::-;908:39;994:2;979:18;;;;966:32;;-1:-1:-1;;;750:254:2:o;1569:222::-;1634:9;;;1655:10;;;1652:133;;;1707:10;1702:3;1698:20;1695:1;1688:31;1742:4;1739:1;1732:15;1770:4;1767:1;1760:15;2785:356;2987:2;2969:21;;;3006:18;;;2999:30;3065:34;3060:2;3045:18;;3038:62;3132:2;3117:18;;2785:356::o;3425:277::-;3492:6;3545:2;3533:9;3524:7;3520:23;3516:32;3513:52;;;3561:1;3558;3551:12;3513:52;3593:9;3587:16;3646:5;3639:13;3632:21;3625:5;3622:32;3612:60;;3668:1;3665;3658:12;4053:217;4093:1;4119;4109:132;;4163:10;4158:3;4154:20;4151:1;4144:31;4198:4;4195:1;4188:15;4226:4;4223:1;4216:15;4109:132;-1:-1:-1;4255:9:2;;4053:217::o"},"gasEstimates":{"creation":{"codeDepositCost":"622000","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite","buy()":"infinite","calcTokenAmount(uint256)":"infinite","claimETH(uint256)":"infinite","claimRewardToken()":"infinite","claimToken(address,uint256)":"infinite","getClaimAmount(address)":"2637","getPrice()":"2304","owner()":"2412","privateSaleAllocation()":"2373","privateSaleTotalSaled()":"2329","publicSaleAllocation()":"2374","publicSaleTotalSaled()":"2350","renounceOwnership()":"30188","resetPrice(uint256)":"24486","startSale(uint256)":"53074","stopSale()":"24434","transferOwnership(address)":"30517","userDeposited(address)":"2597","userRewards(address)":"2532"}},"methodIdentifiers":{"buy()":"a6f2ae3a","calcTokenAmount(uint256)":"7b7902dd","claimETH(uint256)":"fe96973a","claimRewardToken()":"afd18916","claimToken(address,uint256)":"1698755f","getClaimAmount(address)":"dde070e8","getPrice()":"98d5fdca","owner()":"8da5cb5b","privateSaleAllocation()":"c8aad250","privateSaleTotalSaled()":"78442876","publicSaleAllocation()":"34ad1f32","publicSaleTotalSaled()":"e7a6ac55","renounceOwnership()":"715018a6","resetPrice(uint256)":"de8e81ed","startSale(uint256)":"0e3ab61d","stopSale()":"e36b0b37","transferOwnership(address)":"f2fde38b","userDeposited(address)":"8092be4a","userRewards(address)":"0660f1e8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"calcTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getClaimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTotalSaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSaleAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSaleTotalSaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"resetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleIndex\",\"type\":\"uint256\"}],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"IDO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5000000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 5000000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n    address usdtAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress, address _usdtAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n        usdtAddress = _usdtAddress;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (saleIndex == 2 && publicSaleTotalSaled > publicSaleHardcap) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7b2189b3841d5e0e166e997b9fe9e33209cb3e29e9020df9692b58020271c31\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1370,"contract":"contracts/IDO.sol:IDO","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1481,"contract":"contracts/IDO.sol:IDO","label":"saleIndex","offset":0,"slot":"1","type":"t_uint256"},{"astId":1555,"contract":"contracts/IDO.sol:IDO","label":"whitelistCheck","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"},{"astId":1560,"contract":"contracts/IDO.sol:IDO","label":"privateSaleHardcap","offset":0,"slot":"3","type":"t_uint256"},{"astId":1563,"contract":"contracts/IDO.sol:IDO","label":"minETHAmount","offset":0,"slot":"4","type":"t_uint256"},{"astId":1566,"contract":"contracts/IDO.sol:IDO","label":"maxETHAmount","offset":0,"slot":"5","type":"t_uint256"},{"astId":1571,"contract":"contracts/IDO.sol:IDO","label":"publicSaleHardcap","offset":0,"slot":"6","type":"t_uint256"},{"astId":1573,"contract":"contracts/IDO.sol:IDO","label":"tokenPrice","offset":0,"slot":"7","type":"t_uint256"},{"astId":1576,"contract":"contracts/IDO.sol:IDO","label":"privateSaleTotalSaled","offset":0,"slot":"8","type":"t_uint256"},{"astId":1581,"contract":"contracts/IDO.sol:IDO","label":"privateSaleAllocation","offset":0,"slot":"9","type":"t_uint256"},{"astId":1584,"contract":"contracts/IDO.sol:IDO","label":"publicSaleTotalSaled","offset":0,"slot":"10","type":"t_uint256"},{"astId":1589,"contract":"contracts/IDO.sol:IDO","label":"publicSaleAllocation","offset":0,"slot":"11","type":"t_uint256"},{"astId":1591,"contract":"contracts/IDO.sol:IDO","label":"rewardAddress","offset":0,"slot":"12","type":"t_address"},{"astId":1593,"contract":"contracts/IDO.sol:IDO","label":"usdtAddress","offset":0,"slot":"13","type":"t_address"},{"astId":1597,"contract":"contracts/IDO.sol:IDO","label":"userRewards","offset":0,"slot":"14","type":"t_mapping(t_address,t_uint256)"},{"astId":1601,"contract":"contracts/IDO.sol:IDO","label":"userDeposited","offset":0,"slot":"15","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5000000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 5000000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n    address usdtAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress, address _usdtAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n        usdtAddress = _usdtAddress;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (saleIndex == 2 && publicSaleTotalSaled > publicSaleHardcap) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7b2189b3841d5e0e166e997b9fe9e33209cb3e29e9020df9692b58020271c31\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"Ownable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1397":{"entryPoint":null,"id":1397,"parameterSlots":0,"returnSlots":0},"@_msgSender_1045":{"entryPoint":null,"id":1045,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea264697066735822122039b73a5672acd52663c789aa0878c5f05edd7a5ac705f3b76989261a734f6d0b64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B7 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xB7 GASPRICE JUMP PUSH19 0xACD52663C789AA0878C5F05EDD7A5AC705F3B7 PUSH10 0x89261A734F6D0B64736F PUSH13 0x63430008120033000000000000 ","sourceMap":"8272:1092:1:-:0;;;8455:153;;;;;;;;;-1:-1:-1;8480:17:1;8523:18;;-1:-1:-1;;;;;;8523:18:1;1332:10;8523:18;;;;;8557:43;;1332:10;;;;8557:43;;8480:17;;8557:43;8469:139;8272:1092;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_1045":{"entryPoint":null,"id":1045,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1475":{"entryPoint":401,"id":1475,"parameterSlots":1,"returnSlots":0},"@owner_1405":{"entryPoint":null,"id":1405,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1438":{"entryPoint":130,"id":1438,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1450":{"entryPoint":299,"id":1450,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1278:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:2","statements":[{"nodeType":"YulAssignment","src":"125:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:2"},"nodeType":"YulFunctionCall","src":"133:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:2"},"nodeType":"YulFunctionCall","src":"194:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:2"},"nodeType":"YulFunctionCall","src":"190:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:2"},"nodeType":"YulFunctionCall","src":"178:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:2"},"nodeType":"YulFunctionCall","src":"160:51:2"},"nodeType":"YulExpressionStatement","src":"160:51:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:2","type":""}],"src":"14:203:2"},{"body":{"nodeType":"YulBlock","src":"292:216:2","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:2"},"nodeType":"YulFunctionCall","src":"340:12:2"},"nodeType":"YulExpressionStatement","src":"340:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:2"},"nodeType":"YulFunctionCall","src":"309:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:2"},"nodeType":"YulFunctionCall","src":"305:32:2"},"nodeType":"YulIf","src":"302:52:2"},{"nodeType":"YulVariableDeclaration","src":"363:36:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:2"},"nodeType":"YulFunctionCall","src":"376:23:2"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:2"},"nodeType":"YulFunctionCall","src":"464:12:2"},"nodeType":"YulExpressionStatement","src":"464:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:2","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:2","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:2"},"nodeType":"YulFunctionCall","src":"443:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:2"},"nodeType":"YulFunctionCall","src":"439:19:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:2"},"nodeType":"YulFunctionCall","src":"428:31:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:2"},"nodeType":"YulFunctionCall","src":"418:42:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:2"},"nodeType":"YulFunctionCall","src":"411:50:2"},"nodeType":"YulIf","src":"408:70:2"},{"nodeType":"YulAssignment","src":"487:15:2","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:2"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:2","type":""}],"src":"222:286:2"},{"body":{"nodeType":"YulBlock","src":"687:182:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:2"},"nodeType":"YulFunctionCall","src":"697:21:2"},"nodeType":"YulExpressionStatement","src":"697:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:2"},"nodeType":"YulFunctionCall","src":"734:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:2"},"nodeType":"YulFunctionCall","src":"727:30:2"},"nodeType":"YulExpressionStatement","src":"727:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:2"},"nodeType":"YulFunctionCall","src":"773:18:2"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:34:2","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:2"},"nodeType":"YulFunctionCall","src":"766:62:2"},"nodeType":"YulExpressionStatement","src":"766:62:2"},{"nodeType":"YulAssignment","src":"837:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"849:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"860:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"845:3:2"},"nodeType":"YulFunctionCall","src":"845:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"837:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:2","type":""}],"src":"513:356:2"},{"body":{"nodeType":"YulBlock","src":"1048:228:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1065:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1076:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1058:6:2"},"nodeType":"YulFunctionCall","src":"1058:21:2"},"nodeType":"YulExpressionStatement","src":"1058:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1099:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:2"},"nodeType":"YulFunctionCall","src":"1095:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"1115:2:2","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1088:6:2"},"nodeType":"YulFunctionCall","src":"1088:30:2"},"nodeType":"YulExpressionStatement","src":"1088:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1149:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:2"},"nodeType":"YulFunctionCall","src":"1134:18:2"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1154:34:2","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:2"},"nodeType":"YulFunctionCall","src":"1127:62:2"},"nodeType":"YulExpressionStatement","src":"1127:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1209:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1220:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1205:3:2"},"nodeType":"YulFunctionCall","src":"1205:18:2"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1225:8:2","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1198:6:2"},"nodeType":"YulFunctionCall","src":"1198:36:2"},"nodeType":"YulExpressionStatement","src":"1198:36:2"},{"nodeType":"YulAssignment","src":"1243:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1266:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:2"},"nodeType":"YulFunctionCall","src":"1251:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1243:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1025:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1039:4:2","type":""}],"src":"874:402:2"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea264697066735822122039b73a5672acd52663c789aa0878c5f05edd7a5ac705f3b76989261a734f6d0b64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xB7 GASPRICE JUMP PUSH19 0xACD52663C789AA0878C5F05EDD7A5AC705F3B7 PUSH10 0x89261A734F6D0B64736F PUSH13 0x63430008120033000000000000 ","sourceMap":"8272:1092:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8830:140;;;:::i;:::-;;8616:79;8654:7;8681:6;8616:79;;;-1:-1:-1;;;;;8681:6:1;;;160:51:2;;8616:79:1;;;;;148:2:2;8616:79:1;;;8978:109;;;;;;:::i;:::-;;:::i;8830:140::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;715:2:2;8735:67:1;;;697:21:2;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;8735:67:1;;;;;;;;;8929:1:::1;8913:6:::0;;8892:40:::1;::::0;-1:-1:-1;;;;;8913:6:1;;::::1;::::0;8892:40:::1;::::0;8929:1;;8892:40:::1;8960:1;8943:19:::0;;-1:-1:-1;;;;;;8943:19:1::1;::::0;;8830:140::o;8978:109::-;8743:6;;-1:-1:-1;;;;;8743:6:1;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:1;;715:2:2;8735:67:1;;;697:21:2;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;8735:67:1;513:356:2;8735:67:1;9051:28:::1;9070:8;9051:18;:28::i;:::-;8978:109:::0;:::o;9095:266::-;-1:-1:-1;;;;;9183:22:1;;9161:110;;;;-1:-1:-1;;;9161:110:1;;1076:2:2;9161:110:1;;;1058:21:2;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:2;;;1198:36;1251:19;;9161:110:1;874:402:2;9161:110:1;9308:6;;;9287:38;;-1:-1:-1;;;;;9287:38:1;;;;9308:6;;;9287:38;;;9336:6;:17;;-1:-1:-1;;;;;;9336:17:1;-1:-1:-1;;;;;9336:17:1;;;;;;;;;;9095:266::o;222:286:2:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:2;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:2:o"},"gasEstimates":{"creation":{"codeDepositCost":"139000","executionCost":"25956","totalCost":"164956"},"external":{"owner()":"2292","renounceOwnership()":"30143","transferOwnership(address)":"30416"},"internal":{"_transferOwnership(address)":"infinite"}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5000000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 5000000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n    address usdtAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress, address _usdtAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n        usdtAddress = _usdtAddress;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (saleIndex == 2 && publicSaleTotalSaled > publicSaleHardcap) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7b2189b3841d5e0e166e997b9fe9e33209cb3e29e9020df9692b58020271c31\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1370,"contract":"contracts/IDO.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"SafeMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4946414936d40592e69abb0a2a48c670ed40c1deb8fbbab813415879b74c47164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SWAP5 PUSH5 0x14936D4059 0x2E PUSH10 0xABB0A2A48C670ED40C1D 0xEB DUP16 0xBB 0xAB DUP2 CALLVALUE ISZERO DUP8 SWAP12 PUSH21 0xC47164736F6C634300081200330000000000000000 ","sourceMap":"1590:6636:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1590:6636:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4946414936d40592e69abb0a2a48c670ed40c1deb8fbbab813415879b74c47164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SWAP5 PUSH5 0x14936D4059 0x2E PUSH10 0xABB0A2A48C670ED40C1D 0xEB DUP16 0xBB 0xAB DUP2 CALLVALUE ISZERO DUP8 SWAP12 PUSH21 0xC47164736F6C634300081200330000000000000000 ","sourceMap":"1590:6636:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5000000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 5000000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n    address usdtAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress, address _usdtAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n        usdtAddress = _usdtAddress;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (saleIndex == 2 && publicSaleTotalSaled > publicSaleHardcap) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7b2189b3841d5e0e166e997b9fe9e33209cb3e29e9020df9692b58020271c31\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}