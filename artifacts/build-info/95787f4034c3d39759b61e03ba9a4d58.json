{"id":"95787f4034c3d39759b61e03ba9a4d58","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"contracts/IDO.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8;\r\npragma experimental ABIEncoderV2;\r\n\r\n// import \"hardhat/console.sol\";\r\n\r\ninterface IERC20 {\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n}\r\n\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    function _msgSender() internal view returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n/* --------- Access Control --------- */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Claimable is Ownable {\r\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\r\n    uint public saleIndex = 0;\r\n\r\n    /*\r\n     * @dev stop sale\r\n     */\r\n    function stopSale() external onlyOwner {\r\n        saleIndex = 3;\r\n    }\r\n\r\n    /*\r\n     * @dev withdraw reward token or usdt\r\n     * @param tokenAddress : Token address\r\n     */\r\n    function claimToken(\r\n        address tokenAddress,\r\n        uint256 amount\r\n    ) external onlyOwner {\r\n        IERC20(tokenAddress).transfer(owner(), amount);\r\n    }\r\n\r\n    /*\r\n     * @dev withdraw ETH\r\n     */\r\n    function claimETH(uint256 amount) external onlyOwner {\r\n        (bool sent, ) = owner().call{value: amount}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n    }\r\n}\r\n\r\ncontract IDO is Claimable {\r\n    using SafeMath for uint256;\r\n    event Buy(address to, uint256 amount);\r\n    event Claim(address to, uint256 amount);\r\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\r\n    // private sale hardcap 53 eth\r\n    // 0.01 eth to 10eth\r\n    uint256 privateSaleHardcap = 53 * 1e18;\r\n    uint256 minETHAmount = 1e16;\r\n    uint256 maxETHAmount = 1e19;\r\n\r\n    // public sale hardcap 65 eth\r\n    uint256 publicSaleHardcap = 65 * 1e18;\r\n\r\n    // token price 1 token   = tokenPrice ETH\r\n    uint256 tokenPrice;\r\n\r\n    uint256 public privateSaleTotalSaled = 0;\r\n    uint256 public privateSaleAllocation = 5035000 * 1e6;\r\n    uint256 public publicSaleTotalSaled = 0;\r\n    uint256 public publicSaleAllocation = 4940000 * 1e6;\r\n\r\n    address rewardAddress;\r\n\r\n    mapping(address => uint256) public userRewards;\r\n    mapping(address => uint256) public userDeposited;\r\n\r\n    constructor(address _rewardAddress) {\r\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\r\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\r\n        rewardAddress = _rewardAddress;\r\n    }\r\n\r\n    // -------- Owner Functions ----------\r\n\r\n    /*\r\n     * @dev reset token price\r\n     * @Param _price: set price with\r\n     */\r\n    function resetPrice(uint256 _price) public onlyOwner {\r\n        tokenPrice = _price;\r\n    }\r\n\r\n    /*\r\n     * @dev start sale\r\n     * @dev 1: private sale,2:public sale\r\n     * @param _saleIndex : sale index\r\n     */\r\n    function startSale(uint _saleIndex) external onlyOwner {\r\n        saleIndex = _saleIndex;\r\n        if (saleIndex == 1) {\r\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\r\n        } else if (saleIndex == 2) {\r\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\r\n        }\r\n    }\r\n\r\n    function addToWhitelist(\r\n        address[] memory addressesToAdd\r\n    ) external onlyOwner {\r\n        for (uint i = 0; i < addressesToAdd.length; i++) {\r\n            whitelistCheck[addressesToAdd[i]] = true;\r\n        }\r\n    }\r\n\r\n    // ---------- owner functions end ----------------\r\n\r\n    /*\r\n     * @dev calcuate token admoutn from eth\r\n     * @Param _ethAmount: eth amount\r\n     */\r\n    function calcTokenAmount(\r\n        uint256 _ethAmount\r\n    ) public returns (uint256 amount) {\r\n        // calculate price for only public sale\r\n        if (\r\n            saleIndex == 2 &&\r\n            (publicSaleTotalSaled + _ethAmount) > publicSaleHardcap\r\n        ) {\r\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\r\n                publicSaleAllocation\r\n            );\r\n            resetPrice(tokenPrice);\r\n        }\r\n        amount = (_ethAmount).div(tokenPrice);\r\n    }\r\n\r\n    /*\r\n     * @dev buy token from eth\r\n     * @dev on private sale 0.01 - 10 eth for only whitelist addresses\r\n     * @dev on private sale Check for hardcap\r\n     */\r\n    function buy() public payable {\r\n        require(saleIndex > 0 && saleIndex < 3, \"Not allowed to buy now.\");\r\n        if (saleIndex == 1) {\r\n            require(\r\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\r\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\r\n                    whitelistCheck[msg.sender],\r\n                \"Amount is allowed 0.01 eth to 10 eth for only listed address.\"\r\n            );\r\n            require(\r\n                privateSaleHardcap >= (privateSaleTotalSaled + msg.value),\r\n                \"Cannot buy this amount\"\r\n            );\r\n        }\r\n\r\n        uint256 amount = calcTokenAmount(msg.value);\r\n        if (saleIndex == 1) {\r\n            privateSaleTotalSaled += msg.value;\r\n        } else {\r\n            publicSaleTotalSaled += msg.value;\r\n        }\r\n        (bool sent, ) = owner().call{value: msg.value}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n        userRewards[_msgSender()] += amount;\r\n        userDeposited[_msgSender()] += msg.value;\r\n    }\r\n\r\n    function claimRewardToken() public {\r\n        require(userRewards[_msgSender()] >= 0, \"Please buy token.\");\r\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\r\n        userRewards[_msgSender()] = 0;\r\n        emit Claim(msg.sender, userRewards[_msgSender()]);\r\n    }\r\n\r\n    function getClaimAmount(\r\n        address userAddress\r\n    ) public view returns (uint256 claimAmount) {\r\n        claimAmount = userRewards[userAddress];\r\n    }\r\n\r\n    function getPrice() public view returns (uint256 price) {\r\n        price = tokenPrice;\r\n    }\r\n\r\n    receive() external payable {\r\n        buy();\r\n    }\r\n\r\n    fallback() external payable {\r\n        buy();\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/IDO.sol":{"ast":{"absolutePath":"contracts/IDO.sol","exportedSymbols":{"Claimable":[582],"Context":[105],"IDO":[980],"IERC20":[84],"Ownable":[524],"SafeMath":[414]},"id":981,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8"],"nodeType":"PragmaDirective","src":"39:21:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"62:33:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":84,"linearizedBaseContracts":[84],"name":"IERC20","nameLocation":"145:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":10,"name":"Approval","nameLocation":"165:8:0","nodeType":"EventDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"200:5:0","nodeType":"VariableDeclaration","scope":10,"src":"184:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"184:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"232:7:0","nodeType":"VariableDeclaration","scope":10,"src":"216:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"258:5:0","nodeType":"VariableDeclaration","scope":10,"src":"250:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"250:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"173:97:0"},"src":"159:112:0"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":18,"name":"Transfer","nameLocation":"283:8:0","nodeType":"EventDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"308:4:0","nodeType":"VariableDeclaration","scope":18,"src":"292:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"330:2:0","nodeType":"VariableDeclaration","scope":18,"src":"314:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"314:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"342:5:0","nodeType":"VariableDeclaration","scope":18,"src":"334:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"291:57:0"},"src":"277:72:0"},{"functionSelector":"06fdde03","id":23,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"366:4:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"370:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":23,"src":"396:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":20,"name":"string","nodeType":"ElementaryTypeName","src":"396:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"395:15:0"},"scope":84,"src":"357:54:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":28,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"428:6:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"434:2:0"},"returnParameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":28,"src":"460:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":25,"name":"string","nodeType":"ElementaryTypeName","src":"460:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"459:15:0"},"scope":84,"src":"419:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":33,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"492:8:0","nodeType":"FunctionDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"500:2:0"},"returnParameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33,"src":"526:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":30,"name":"uint8","nodeType":"ElementaryTypeName","src":"526:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"525:7:0"},"scope":84,"src":"483:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":38,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"550:11:0","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"561:2:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38,"src":"587:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"586:9:0"},"scope":84,"src":"541:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":45,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"613:9:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"owner","nameLocation":"631:5:0","nodeType":"VariableDeclaration","scope":45,"src":"623:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"622:15:0"},"returnParameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":45,"src":"661:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"660:9:0"},"scope":84,"src":"604:66:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"687:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"715:5:0","nodeType":"VariableDeclaration","scope":54,"src":"707:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"739:7:0","nodeType":"VariableDeclaration","scope":54,"src":"731:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"696:57:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"777:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:9:0"},"scope":84,"src":"678:108:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"803:7:0","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"spender","nameLocation":"819:7:0","nodeType":"VariableDeclaration","scope":63,"src":"811:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"value","nameLocation":"836:5:0","nodeType":"VariableDeclaration","scope":63,"src":"828:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"810:32:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"861:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:0"},"scope":84,"src":"794:73:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":72,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"884:8:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"to","nameLocation":"901:2:0","nodeType":"VariableDeclaration","scope":72,"src":"893:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"value","nameLocation":"913:5:0","nodeType":"VariableDeclaration","scope":72,"src":"905:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"892:27:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":72,"src":"938:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"938:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"937:6:0"},"scope":84,"src":"875:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":83,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"961:12:0","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"from","nameLocation":"992:4:0","nodeType":"VariableDeclaration","scope":83,"src":"984:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"to","nameLocation":"1015:2:0","nodeType":"VariableDeclaration","scope":83,"src":"1007:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"value","nameLocation":"1036:5:0","nodeType":"VariableDeclaration","scope":83,"src":"1028:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:75:0"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":83,"src":"1067:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":80,"name":"bool","nodeType":"ElementaryTypeName","src":"1067:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1066:6:0"},"scope":84,"src":"952:121:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":981,"src":"135:941:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":105,"linearizedBaseContracts":[105],"name":"Context","nameLocation":"1089:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":92,"nodeType":"Block","src":"1314:36:0","statements":[{"expression":{"expression":{"id":89,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1332:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1336:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1332:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":88,"id":91,"nodeType":"Return","src":"1325:17:0"}]},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"1269:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"1279:2:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":93,"src":"1305:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1305:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1304:9:0"},"scope":105,"src":"1260:90:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":103,"nodeType":"Block","src":"1415:168:0","statements":[{"expression":{"id":98,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1426:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$105","typeString":"contract Context"}},"id":99,"nodeType":"ExpressionStatement","src":"1426:4:0"},{"expression":{"expression":{"id":100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1567:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1571:4:0","memberName":"data","nodeType":"MemberAccess","src":"1567:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":97,"id":102,"nodeType":"Return","src":"1560:15:0"}]},"id":104,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"1367:8:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"1375:2:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":104,"src":"1401:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":95,"name":"bytes","nodeType":"ElementaryTypeName","src":"1401:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1400:14:0"},"scope":105,"src":"1358:225:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":981,"src":"1080:506:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":414,"linearizedBaseContracts":[414],"name":"SafeMath","nameLocation":"1598:8:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":136,"nodeType":"Block","src":"1856:146:0","statements":[{"id":135,"nodeType":"UncheckedBlock","src":"1867:128:0","statements":[{"assignments":[118],"declarations":[{"constant":false,"id":118,"mutability":"mutable","name":"c","nameLocation":"1900:1:0","nodeType":"VariableDeclaration","scope":135,"src":"1892:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1892:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":122,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"1904:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":120,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"1908:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1904:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1892:17:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1928:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"1932:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1928:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":130,"nodeType":"IfStatement","src":"1924:28:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1943:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1942:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":116,"id":129,"nodeType":"Return","src":"1935:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1975:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":132,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1981:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1974:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":116,"id":134,"nodeType":"Return","src":"1967:16:0"}]}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"1614:135:0","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":137,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1764:6:0","nodeType":"FunctionDefinition","parameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"a","nameLocation":"1789:1:0","nodeType":"VariableDeclaration","scope":137,"src":"1781:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1781:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"b","nameLocation":"1809:1:0","nodeType":"VariableDeclaration","scope":137,"src":"1801:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1770:47:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":137,"src":"1841:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":112,"name":"bool","nodeType":"ElementaryTypeName","src":"1841:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":137,"src":"1847:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1847:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:15:0"},"scope":414,"src":"1755:247:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":164,"nodeType":"Block","src":"2255:118:0","statements":[{"id":163,"nodeType":"UncheckedBlock","src":"2266:100:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2295:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2299:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2295:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":156,"nodeType":"IfStatement","src":"2291:28:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2310:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2309:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":148,"id":155,"nodeType":"Return","src":"2302:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2348:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":159,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2352:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2348:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2341:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":148,"id":162,"nodeType":"Return","src":"2334:20:0"}]}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2010:138:0","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2163:6:0","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"a","nameLocation":"2188:1:0","nodeType":"VariableDeclaration","scope":165,"src":"2180:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"b","nameLocation":"2208:1:0","nodeType":"VariableDeclaration","scope":165,"src":"2200:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2169:47:0"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"2240:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":144,"name":"bool","nodeType":"ElementaryTypeName","src":"2240:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"2246:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2246:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2239:15:0"},"scope":414,"src":"2154:219:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":206,"nodeType":"Block","src":"2629:427:0","statements":[{"id":205,"nodeType":"UncheckedBlock","src":"2640:409:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2902:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2907:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2902:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":184,"nodeType":"IfStatement","src":"2898:28:0","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2918:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2924:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2917:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":176,"id":183,"nodeType":"Return","src":"2910:16:0"}},{"assignments":[186],"declarations":[{"constant":false,"id":186,"mutability":"mutable","name":"c","nameLocation":"2949:1:0","nodeType":"VariableDeclaration","scope":205,"src":"2941:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2941:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":190,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2953:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2957:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2953:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2941:17:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":191,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2977:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2981:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2977:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2986:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2977:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":200,"nodeType":"IfStatement","src":"2973:33:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2997:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2996:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":176,"id":199,"nodeType":"Return","src":"2989:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3029:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":202,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3035:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3028:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":176,"id":204,"nodeType":"Return","src":"3021:16:0"}]}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2381:141:0","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":207,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2537:6:0","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"a","nameLocation":"2562:1:0","nodeType":"VariableDeclaration","scope":207,"src":"2554:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2554:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"b","nameLocation":"2582:1:0","nodeType":"VariableDeclaration","scope":207,"src":"2574:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2574:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2543:47:0"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"2614:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":172,"name":"bool","nodeType":"ElementaryTypeName","src":"2614:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"2620:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2620:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2613:15:0"},"scope":414,"src":"2528:528:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":234,"nodeType":"Block","src":"3313:119:0","statements":[{"id":233,"nodeType":"UncheckedBlock","src":"3324:101:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3353:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3358:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3353:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":226,"nodeType":"IfStatement","src":"3349:29:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3369:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3376:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3368:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":218,"id":225,"nodeType":"Return","src":"3361:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3401:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"3407:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":229,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3411:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3407:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3400:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":218,"id":232,"nodeType":"Return","src":"3393:20:0"}]}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"3064:142:0","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":235,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3221:6:0","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"a","nameLocation":"3246:1:0","nodeType":"VariableDeclaration","scope":235,"src":"3238:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"b","nameLocation":"3266:1:0","nodeType":"VariableDeclaration","scope":235,"src":"3258:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3258:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3227:47:0"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":235,"src":"3298:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":214,"name":"bool","nodeType":"ElementaryTypeName","src":"3298:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":235,"src":"3304:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3304:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3297:15:0"},"scope":414,"src":"3212:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":262,"nodeType":"Block","src":"3699:119:0","statements":[{"id":261,"nodeType":"UncheckedBlock","src":"3710:101:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3739:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3744:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3739:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":254,"nodeType":"IfStatement","src":"3735:29:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3755:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3762:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3754:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":246,"id":253,"nodeType":"Return","src":"3747:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3787:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"3793:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":257,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3797:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3793:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3786:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":246,"id":260,"nodeType":"Return","src":"3779:20:0"}]}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"3440:152:0","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":263,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3607:6:0","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"a","nameLocation":"3632:1:0","nodeType":"VariableDeclaration","scope":263,"src":"3624:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"3624:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"b","nameLocation":"3652:1:0","nodeType":"VariableDeclaration","scope":263,"src":"3644:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"3644:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3613:47:0"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"3684:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":242,"name":"bool","nodeType":"ElementaryTypeName","src":"3684:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"3690:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:0"},"scope":414,"src":"3598:220:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":277,"nodeType":"Block","src":"4132:31:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4150:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"4154:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4150:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":272,"id":276,"nodeType":"Return","src":"4143:12:0"}]},"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"3826:233:0","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"4074:3:0","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"a","nameLocation":"4086:1:0","nodeType":"VariableDeclaration","scope":278,"src":"4078:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"b","nameLocation":"4097:1:0","nodeType":"VariableDeclaration","scope":278,"src":"4089:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4077:22:0"},"returnParameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"4123:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:0"},"scope":414,"src":"4065:98:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"4513:31:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4531:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4535:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4531:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":287,"id":291,"nodeType":"Return","src":"4524:12:0"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"4171:269:0","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":293,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4455:3:0","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"a","nameLocation":"4467:1:0","nodeType":"VariableDeclaration","scope":293,"src":"4459:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4459:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"b","nameLocation":"4478:1:0","nodeType":"VariableDeclaration","scope":293,"src":"4470:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4470:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4458:22:0"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":293,"src":"4504:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4503:9:0"},"scope":414,"src":"4446:98:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":307,"nodeType":"Block","src":"4870:31:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4888:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"4892:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4888:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":302,"id":306,"nodeType":"Return","src":"4881:12:0"}]},"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"4552:245:0","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":308,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"4812:3:0","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"a","nameLocation":"4824:1:0","nodeType":"VariableDeclaration","scope":308,"src":"4816:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4816:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"b","nameLocation":"4835:1:0","nodeType":"VariableDeclaration","scope":308,"src":"4827:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"4827:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4815:22:0"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":308,"src":"4861:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4861:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4860:9:0"},"scope":414,"src":"4803:98:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":322,"nodeType":"Block","src":"5269:31:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5287:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":319,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"5291:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5287:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":317,"id":321,"nodeType":"Return","src":"5280:12:0"}]},"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"4909:287:0","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":323,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5211:3:0","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"a","nameLocation":"5223:1:0","nodeType":"VariableDeclaration","scope":323,"src":"5215:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"b","nameLocation":"5234:1:0","nodeType":"VariableDeclaration","scope":323,"src":"5226:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"5226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5214:22:0"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":323,"src":"5260:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5260:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5259:9:0"},"scope":414,"src":"5202:98:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"5834:31:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5852:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5856:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5852:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":332,"id":336,"nodeType":"Return","src":"5845:12:0"}]},"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"5308:453:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":338,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"5776:3:0","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"a","nameLocation":"5788:1:0","nodeType":"VariableDeclaration","scope":338,"src":"5780:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"5780:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"b","nameLocation":"5799:1:0","nodeType":"VariableDeclaration","scope":338,"src":"5791:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5779:22:0"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":338,"src":"5825:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5824:9:0"},"scope":414,"src":"5767:98:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"6473:111:0","statements":[{"id":361,"nodeType":"UncheckedBlock","src":"6484:93:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"6517:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"6522:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6517:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":354,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"6525:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6509:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6509:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"6509:29:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"6560:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"6564:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6560:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":349,"id":360,"nodeType":"Return","src":"6553:12:0"}]}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"5873:465:0","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"6353:3:0","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"a","nameLocation":"6375:1:0","nodeType":"VariableDeclaration","scope":363,"src":"6367:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"6367:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"b","nameLocation":"6395:1:0","nodeType":"VariableDeclaration","scope":363,"src":"6387:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"6387:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"errorMessage","nameLocation":"6421:12:0","nodeType":"VariableDeclaration","scope":363,"src":"6407:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":344,"name":"string","nodeType":"ElementaryTypeName","src":"6407:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6356:84:0"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"6464:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6464:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6463:9:0"},"scope":414,"src":"6344:240:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":387,"nodeType":"Block","src":"7211:110:0","statements":[{"id":386,"nodeType":"UncheckedBlock","src":"7222:92:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"7255:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7259:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7255:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":379,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"7262:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7247:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7247:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"7247:28:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"7297:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"7301:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7297:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":374,"id":385,"nodeType":"Return","src":"7290:12:0"}]}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"6592:484:0","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":388,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"7091:3:0","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"a","nameLocation":"7113:1:0","nodeType":"VariableDeclaration","scope":388,"src":"7105:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"7105:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"b","nameLocation":"7133:1:0","nodeType":"VariableDeclaration","scope":388,"src":"7125:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"7125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"errorMessage","nameLocation":"7159:12:0","nodeType":"VariableDeclaration","scope":388,"src":"7145:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":369,"name":"string","nodeType":"ElementaryTypeName","src":"7145:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7094:84:0"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"7202:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"7202:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7201:9:0"},"scope":414,"src":"7082:239:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"8113:110:0","statements":[{"id":411,"nodeType":"UncheckedBlock","src":"8124:92:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"8157:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8161:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8157:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":404,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"8164:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8149:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"8149:28:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8199:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":408,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"8203:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8199:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":399,"id":410,"nodeType":"Return","src":"8192:12:0"}]}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"7329:649:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"7993:3:0","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"a","nameLocation":"8015:1:0","nodeType":"VariableDeclaration","scope":413,"src":"8007:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"b","nameLocation":"8035:1:0","nodeType":"VariableDeclaration","scope":413,"src":"8027:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"8027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"errorMessage","nameLocation":"8061:12:0","nodeType":"VariableDeclaration","scope":413,"src":"8047:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":394,"name":"string","nodeType":"ElementaryTypeName","src":"8047:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7996:84:0"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"8104:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"8104:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8103:9:0"},"scope":414,"src":"7984:239:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":981,"src":"1590:6636:0","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":415,"name":"Context","nameLocations":["8292:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":105,"src":"8292:7:0"},"id":416,"nodeType":"InheritanceSpecifier","src":"8292:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":524,"linearizedBaseContracts":[524,105],"name":"Ownable","nameLocation":"8281:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":418,"mutability":"mutable","name":"_owner","nameLocation":"8323:6:0","nodeType":"VariableDeclaration","scope":524,"src":"8307:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"8307:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":424,"name":"OwnershipTransferred","nameLocation":"8344:20:0","nodeType":"EventDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"8391:13:0","nodeType":"VariableDeclaration","scope":424,"src":"8375:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"8375:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"8431:8:0","nodeType":"VariableDeclaration","scope":424,"src":"8415:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"8415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8364:82:0"},"src":"8338:109:0"},{"body":{"id":444,"nodeType":"Block","src":"8469:139:0","statements":[{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"msgSender","nameLocation":"8488:9:0","nodeType":"VariableDeclaration","scope":444,"src":"8480:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"8480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":429,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"8500:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8480:32:0"},{"expression":{"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":432,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8523:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":433,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"8532:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":435,"nodeType":"ExpressionStatement","src":"8523:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8586:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8578:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"8578:7:0","typeDescriptions":{}}},"id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8578:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":441,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"8590:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":436,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"8557:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8557:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"EmitStatement","src":"8552:48:0"}]},"id":445,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"8466:2:0"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[],"src":"8469:0:0"},"scope":524,"src":"8455:153:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":452,"nodeType":"Block","src":"8663:32:0","statements":[{"expression":{"id":450,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8681:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"8674:13:0"}]},"functionSelector":"8da5cb5b","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"8625:5:0","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"8630:2:0"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"8654:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"8654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8653:9:0"},"scope":524,"src":"8616:79:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":464,"nodeType":"Block","src":"8724:98:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8743:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"8753:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8753:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8743:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8767:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8735:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8735:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"8735:67:0"},{"id":463,"nodeType":"PlaceholderStatement","src":"8813:1:0"}]},"id":465,"name":"onlyOwner","nameLocation":"8712:9:0","nodeType":"ModifierDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"8721:2:0"},"src":"8703:119:0","virtual":false,"visibility":"internal"},{"body":{"id":485,"nodeType":"Block","src":"8876:94:0","statements":[{"eventCall":{"arguments":[{"id":471,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8913:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8929:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8921:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"8921:7:0","typeDescriptions":{}}},"id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8921:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"8892:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8892:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":477,"nodeType":"EmitStatement","src":"8887:45:0"},{"expression":{"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":478,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8943:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8960:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"8952:7:0","typeDescriptions":{}}},"id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8943:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":484,"nodeType":"ExpressionStatement","src":"8943:19:0"}]},"functionSelector":"715018a6","id":486,"implemented":true,"kind":"function","modifiers":[{"id":468,"kind":"modifierInvocation","modifierName":{"id":467,"name":"onlyOwner","nameLocations":["8866:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"8866:9:0"},"nodeType":"ModifierInvocation","src":"8866:9:0"}],"name":"renounceOwnership","nameLocation":"8839:17:0","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8856:2:0"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"8876:0:0"},"scope":524,"src":"8830:140:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":497,"nodeType":"Block","src":"9040:47:0","statements":[{"expression":{"arguments":[{"id":494,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"9070:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":493,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9051:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9051:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"9051:28:0"}]},"functionSelector":"f2fde38b","id":498,"implemented":true,"kind":"function","modifiers":[{"id":491,"kind":"modifierInvocation","modifierName":{"id":490,"name":"onlyOwner","nameLocations":["9030:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"9030:9:0"},"nodeType":"ModifierInvocation","src":"9030:9:0"}],"name":"transferOwnership","nameLocation":"8987:17:0","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"newOwner","nameLocation":"9013:8:0","nodeType":"VariableDeclaration","scope":498,"src":"9005:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"9005:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9004:18:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"9040:0:0"},"scope":524,"src":"8978:109:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":522,"nodeType":"Block","src":"9150:211:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":504,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"9183:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9195:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"9195:7:0","typeDescriptions":{}}},"id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9183:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9220:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9161:110:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"9161:110:0"},{"eventCall":{"arguments":[{"id":514,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"9308:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"9316:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"9287:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9287:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"EmitStatement","src":"9282:43:0"},{"expression":{"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":518,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"9336:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":519,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"9345:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9336:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":521,"nodeType":"ExpressionStatement","src":"9336:17:0"}]},"id":523,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"9104:18:0","nodeType":"FunctionDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"newOwner","nameLocation":"9131:8:0","nodeType":"VariableDeclaration","scope":523,"src":"9123:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"9123:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9122:18:0"},"returnParameters":{"id":502,"nodeType":"ParameterList","parameters":[],"src":"9150:0:0"},"scope":524,"src":"9095:266:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":981,"src":"8272:1092:0","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":525,"name":"Ownable","nameLocations":["9390:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":524,"src":"9390:7:0"},"id":526,"nodeType":"InheritanceSpecifier","src":"9390:7:0"}],"canonicalName":"Claimable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":582,"linearizedBaseContracts":[582,524,105],"name":"Claimable","nameLocation":"9377:9:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"6ec012e7","id":529,"mutability":"mutable","name":"saleIndex","nameLocation":"9481:9:0","nodeType":"VariableDeclaration","scope":582,"src":"9469:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint","nodeType":"ElementaryTypeName","src":"9469:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9493:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"body":{"id":538,"nodeType":"Block","src":"9582:32:0","statements":[{"expression":{"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":534,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9593:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"33","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9605:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"9593:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":537,"nodeType":"ExpressionStatement","src":"9593:13:0"}]},"functionSelector":"e36b0b37","id":539,"implemented":true,"kind":"function","modifiers":[{"id":532,"kind":"modifierInvocation","modifierName":{"id":531,"name":"onlyOwner","nameLocations":["9572:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"9572:9:0"},"nodeType":"ModifierInvocation","src":"9572:9:0"}],"name":"stopSale","nameLocation":"9552:8:0","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"9560:2:0"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9582:0:0"},"scope":582,"src":"9543:71:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":557,"nodeType":"Block","src":"9828:65:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"9869:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9869:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":554,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"9878:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":549,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9846:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":548,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"9839:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$84_$","typeString":"type(contract IERC20)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9839:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$84","typeString":"contract IERC20"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9860:8:0","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":72,"src":"9839:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9839:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"ExpressionStatement","src":"9839:46:0"}]},"functionSelector":"1698755f","id":558,"implemented":true,"kind":"function","modifiers":[{"id":546,"kind":"modifierInvocation","modifierName":{"id":545,"name":"onlyOwner","nameLocations":["9818:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"9818:9:0"},"nodeType":"ModifierInvocation","src":"9818:9:0"}],"name":"claimToken","nameLocation":"9735:10:0","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"tokenAddress","nameLocation":"9764:12:0","nodeType":"VariableDeclaration","scope":558,"src":"9756:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"amount","nameLocation":"9795:6:0","nodeType":"VariableDeclaration","scope":558,"src":"9787:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9745:63:0"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[],"src":"9828:0:0"},"scope":582,"src":"9726:167:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":580,"nodeType":"Block","src":"9997:114:0","statements":[{"assignments":[566,null],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"sent","nameLocation":"10014:4:0","nodeType":"VariableDeclaration","scope":580,"src":"10009:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"10009:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":574,"initialValue":{"arguments":[{"hexValue":"","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10052:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":567,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"10024:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10024:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10032:4:0","memberName":"call","nodeType":"MemberAccess","src":"10024:12:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":570,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"10044:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10024:27:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10024:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10008:47:0"},{"expression":{"arguments":[{"id":576,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"10074:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204574686572","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10080:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""},"value":"Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""}],"id":575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10066:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"10066:37:0"}]},"functionSelector":"fe96973a","id":581,"implemented":true,"kind":"function","modifiers":[{"id":563,"kind":"modifierInvocation","modifierName":{"id":562,"name":"onlyOwner","nameLocations":["9987:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"9987:9:0"},"nodeType":"ModifierInvocation","src":"9987:9:0"}],"name":"claimETH","nameLocation":"9953:8:0","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"amount","nameLocation":"9970:6:0","nodeType":"VariableDeclaration","scope":581,"src":"9962:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"9962:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9961:16:0"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"9997:0:0"},"scope":582,"src":"9944:167:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":981,"src":"9368:746:0","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":583,"name":"Claimable","nameLocations":["10134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"10134:9:0"},"id":584,"nodeType":"InheritanceSpecifier","src":"10134:9:0"}],"canonicalName":"IDO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":980,"linearizedBaseContracts":[980,582,524,105],"name":"IDO","nameLocation":"10127:3:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":587,"libraryName":{"id":585,"name":"SafeMath","nameLocations":["10157:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":414,"src":"10157:8:0"},"nodeType":"UsingForDirective","src":"10151:27:0","typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"10170:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"anonymous":false,"eventSelector":"e3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e","id":593,"name":"Buy","nameLocation":"10190:3:0","nodeType":"EventDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"10202:2:0","nodeType":"VariableDeclaration","scope":593,"src":"10194:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"10194:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10214:6:0","nodeType":"VariableDeclaration","scope":593,"src":"10206:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"10206:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10193:28:0"},"src":"10184:38:0"},{"anonymous":false,"eventSelector":"47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4","id":599,"name":"Claim","nameLocation":"10234:5:0","nodeType":"EventDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"10248:2:0","nodeType":"VariableDeclaration","scope":599,"src":"10240:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"10240:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10260:6:0","nodeType":"VariableDeclaration","scope":599,"src":"10252:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"10252:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10239:28:0"},"src":"10228:40:0"},{"constant":false,"id":603,"mutability":"mutable","name":"whitelistCheck","nameLocation":"10299:14:0","nodeType":"VariableDeclaration","scope":980,"src":"10274:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":602,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"10274:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":601,"name":"bool","nodeType":"ElementaryTypeName","src":"10293:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"privateSaleHardcap","nameLocation":"10425:18:0","nodeType":"VariableDeclaration","scope":980,"src":"10417:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"10417:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_53000000000000000000_by_1","typeString":"int_const 53000000000000000000"},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3533","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:0","typeDescriptions":{"typeIdentifier":"t_rational_53_by_1","typeString":"int_const 53"},"value":"53"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10451:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10446:9:0","typeDescriptions":{"typeIdentifier":"t_rational_53000000000000000000_by_1","typeString":"int_const 53000000000000000000"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"minETHAmount","nameLocation":"10470:12:0","nodeType":"VariableDeclaration","scope":980,"src":"10462:27:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"10462:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653136","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10485:4:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"1e16"},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"maxETHAmount","nameLocation":"10504:12:0","nodeType":"VariableDeclaration","scope":980,"src":"10496:27:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10496:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653139","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:4:0","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"value":"1e19"},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"publicSaleHardcap","nameLocation":"10575:17:0","nodeType":"VariableDeclaration","scope":980,"src":"10567:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"10567:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_65000000000000000000_by_1","typeString":"int_const 65000000000000000000"},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3635","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10595:2:0","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10600:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"10595:9:0","typeDescriptions":{"typeIdentifier":"t_rational_65000000000000000000_by_1","typeString":"int_const 65000000000000000000"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"tokenPrice","nameLocation":"10668:10:0","nodeType":"VariableDeclaration","scope":980,"src":"10660:18:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"10660:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"78442876","id":624,"mutability":"mutable","name":"privateSaleTotalSaled","nameLocation":"10702:21:0","nodeType":"VariableDeclaration","scope":980,"src":"10687:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10726:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"c8aad250","id":629,"mutability":"mutable","name":"privateSaleAllocation","nameLocation":"10749:21:0","nodeType":"VariableDeclaration","scope":980,"src":"10734:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"10734:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_5035000000000_by_1","typeString":"int_const 5035000000000"},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35303335303030","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:7:0","typeDescriptions":{"typeIdentifier":"t_rational_5035000_by_1","typeString":"int_const 5035000"},"value":"5035000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10783:3:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"10773:13:0","typeDescriptions":{"typeIdentifier":"t_rational_5035000000000_by_1","typeString":"int_const 5035000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"e7a6ac55","id":632,"mutability":"mutable","name":"publicSaleTotalSaled","nameLocation":"10808:20:0","nodeType":"VariableDeclaration","scope":980,"src":"10793:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10831:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"34ad1f32","id":637,"mutability":"mutable","name":"publicSaleAllocation","nameLocation":"10854:20:0","nodeType":"VariableDeclaration","scope":980,"src":"10839:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"10839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4940000000000_by_1","typeString":"int_const 4940000000000"},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"34393430303030","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10877:7:0","typeDescriptions":{"typeIdentifier":"t_rational_4940000_by_1","typeString":"int_const 4940000"},"value":"4940000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10887:3:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"10877:13:0","typeDescriptions":{"typeIdentifier":"t_rational_4940000000000_by_1","typeString":"int_const 4940000000000"}},"visibility":"public"},{"constant":false,"id":639,"mutability":"mutable","name":"rewardAddress","nameLocation":"10907:13:0","nodeType":"VariableDeclaration","scope":980,"src":"10899:21:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"10899:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"0660f1e8","id":643,"mutability":"mutable","name":"userRewards","nameLocation":"10964:11:0","nodeType":"VariableDeclaration","scope":980,"src":"10929:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":642,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"10937:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"10929:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8092be4a","id":647,"mutability":"mutable","name":"userDeposited","nameLocation":"11017:13:0","nodeType":"VariableDeclaration","scope":980,"src":"10982:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":646,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"10990:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"10982:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"11001:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":663,"nodeType":"Block","src":"11075:179:0","statements":[{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":652,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"11147:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":655,"name":"privateSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"11183:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":653,"name":"privateSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"11160:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11179:3:0","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":323,"src":"11160:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11160:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11147:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"nodeType":"ExpressionStatement","src":"11147:58:0"},{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":659,"name":"rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"11216:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":660,"name":"_rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"11232:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11216:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":662,"nodeType":"ExpressionStatement","src":"11216:30:0"}]},"id":664,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"_rewardAddress","nameLocation":"11059:14:0","nodeType":"VariableDeclaration","scope":664,"src":"11051:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"11051:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11050:24:0"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"11075:0:0"},"scope":980,"src":"11039:215:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":675,"nodeType":"Block","src":"11447:38:0","statements":[{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":671,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"11458:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":672,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"11471:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11458:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":674,"nodeType":"ExpressionStatement","src":"11458:19:0"}]},"functionSelector":"de8e81ed","id":676,"implemented":true,"kind":"function","modifiers":[{"id":669,"kind":"modifierInvocation","modifierName":{"id":668,"name":"onlyOwner","nameLocations":["11437:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"11437:9:0"},"nodeType":"ModifierInvocation","src":"11437:9:0"}],"name":"resetPrice","nameLocation":"11403:10:0","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"_price","nameLocation":"11422:6:0","nodeType":"VariableDeclaration","scope":676,"src":"11414:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11414:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11413:16:0"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"11447:0:0"},"scope":980,"src":"11394:91:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":711,"nodeType":"Block","src":"11671:265:0","statements":[{"expression":{"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":683,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"11682:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":684,"name":"_saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"11694:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11682:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":686,"nodeType":"ExpressionStatement","src":"11682:22:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"11719:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11732:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11719:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":698,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"11830:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11843:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11830:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"11826:103:0","trueBody":{"id":708,"nodeType":"Block","src":"11846:83:0","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":701,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"11861:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":704,"name":"publicSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"11896:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":702,"name":"publicSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"11874:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11892:3:0","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":323,"src":"11874:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11874:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11861:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"11861:56:0"}]}},"id":710,"nodeType":"IfStatement","src":"11715:214:0","trueBody":{"id":697,"nodeType":"Block","src":"11735:85:0","statements":[{"expression":{"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":690,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"11750:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":693,"name":"privateSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"11786:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":691,"name":"privateSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"11763:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11782:3:0","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":323,"src":"11763:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11763:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11750:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":696,"nodeType":"ExpressionStatement","src":"11750:58:0"}]}}]},"functionSelector":"0e3ab61d","id":712,"implemented":true,"kind":"function","modifiers":[{"id":681,"kind":"modifierInvocation","modifierName":{"id":680,"name":"onlyOwner","nameLocations":["11661:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"11661:9:0"},"nodeType":"ModifierInvocation","src":"11661:9:0"}],"name":"startSale","nameLocation":"11625:9:0","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"_saleIndex","nameLocation":"11640:10:0","nodeType":"VariableDeclaration","scope":712,"src":"11635:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint","nodeType":"ElementaryTypeName","src":"11635:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11634:17:0"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"11671:0:0"},"scope":980,"src":"11616:320:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":741,"nodeType":"Block","src":"12036:134:0","statements":[{"body":{"id":739,"nodeType":"Block","src":"12096:67:0","statements":[{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":731,"name":"whitelistCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"12111:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":735,"indexExpression":{"baseExpression":{"id":732,"name":"addressesToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"12126:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":734,"indexExpression":{"id":733,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"12141:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12126:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12111:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12147:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12111:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":738,"nodeType":"ExpressionStatement","src":"12111:40:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"12064:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":725,"name":"addressesToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"12068:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12083:6:0","memberName":"length","nodeType":"MemberAccess","src":"12068:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12064:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":740,"initializationExpression":{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"i","nameLocation":"12057:1:0","nodeType":"VariableDeclaration","scope":740,"src":"12052:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint","nodeType":"ElementaryTypeName","src":"12052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":723,"initialValue":{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12061:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12052:10:0"},"loopExpression":{"expression":{"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12091:3:0","subExpression":{"id":728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"12091:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":730,"nodeType":"ExpressionStatement","src":"12091:3:0"},"nodeType":"ForStatement","src":"12047:116:0"}]},"functionSelector":"7f649783","id":742,"implemented":true,"kind":"function","modifiers":[{"id":718,"kind":"modifierInvocation","modifierName":{"id":717,"name":"onlyOwner","nameLocations":["12026:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"12026:9:0"},"nodeType":"ModifierInvocation","src":"12026:9:0"}],"name":"addToWhitelist","nameLocation":"11953:14:0","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"addressesToAdd","nameLocation":"11995:14:0","nodeType":"VariableDeclaration","scope":742,"src":"11978:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"11978:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":714,"nodeType":"ArrayTypeName","src":"11978:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11967:49:0"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"12036:0:0"},"scope":980,"src":"11944:226:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":783,"nodeType":"Block","src":"12429:401:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"12507:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12520:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12507:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":752,"name":"publicSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"12539:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":753,"name":"_ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"12562:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12539:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12538:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":756,"name":"publicSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"12576:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12538:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12507:86:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":774,"nodeType":"IfStatement","src":"12489:286:0","trueBody":{"id":773,"nodeType":"Block","src":"12605:170:0","statements":[{"expression":{"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":759,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12620:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":765,"name":"publicSaleAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"12691:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":760,"name":"publicSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"12634:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":761,"name":"_ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"12657:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12634:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12633:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12669:3:0","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":323,"src":"12633:39:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12633:93:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12620:106:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":768,"nodeType":"ExpressionStatement","src":"12620:106:0"},{"expression":{"arguments":[{"id":770,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12752:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":769,"name":"resetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"12741:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12741:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"12741:22:0"}]}},{"expression":{"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":775,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"12785:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":779,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12811:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"id":776,"name":"_ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"12795:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12794:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12807:3:0","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":323,"src":"12794:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12794:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12785:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ExpressionStatement","src":"12785:37:0"}]},"functionSelector":"7b7902dd","id":784,"implemented":true,"kind":"function","modifiers":[],"name":"calcTokenAmount","nameLocation":"12345:15:0","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"_ethAmount","nameLocation":"12379:10:0","nodeType":"VariableDeclaration","scope":784,"src":"12371:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"12371:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12360:36:0"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"amount","nameLocation":"12421:6:0","nodeType":"VariableDeclaration","scope":784,"src":"12413:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"12413:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12412:16:0"},"scope":980,"src":"12336:494:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":898,"nodeType":"Block","src":"13036:1030:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"13055:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13067:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13055:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":791,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"13072:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13084:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"13072:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13055:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f77656420746f20627579206e6f772e","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13087:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261","typeString":"literal_string \"Not allowed to buy now.\""},"value":"Not allowed to buy now."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261","typeString":"literal_string \"Not allowed to buy now.\""}],"id":787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13047:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13047:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"13047:66:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"13128:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13141:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13128:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"IfStatement","src":"13124:516:0","trueBody":{"id":842,"nodeType":"Block","src":"13144:496:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":802,"name":"maxETHAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"13185:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":803,"name":"userDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13202:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":806,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"13216:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13216:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13202:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13232:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13236:5:0","memberName":"value","nodeType":"MemberAccess","src":"13232:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13202:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13201:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13185:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":812,"name":"userDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13268:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":815,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":813,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"13282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13268:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13298:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13302:5:0","memberName":"value","nodeType":"MemberAccess","src":"13298:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13268:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13267:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":820,"name":"minETHAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13312:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13267:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13185:139:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":823,"name":"whitelistCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"13349:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":826,"indexExpression":{"expression":{"id":824,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13364:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13368:6:0","memberName":"sender","nodeType":"MemberAccess","src":"13364:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13349:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13185:190:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420697320616c6c6f77656420302e30312065746820746f2031302065746820666f72206f6e6c79206c697374656420616464726573732e","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13394:63:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb","typeString":"literal_string \"Amount is allowed 0.01 eth to 10 eth for only listed address.\""},"value":"Amount is allowed 0.01 eth to 10 eth for only listed address."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb","typeString":"literal_string \"Amount is allowed 0.01 eth to 10 eth for only listed address.\""}],"id":801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13159:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13159:313:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"13159:313:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"privateSaleHardcap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13513:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":833,"name":"privateSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"13536:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":834,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13560:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13564:5:0","memberName":"value","nodeType":"MemberAccess","src":"13560:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13536:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13535:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13513:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420627579207468697320616d6f756e74","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13589:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f79de05fb6abf551b5172d1c164f6a040a23dc262ef976fac7601d71815718ea","typeString":"literal_string \"Cannot buy this amount\""},"value":"Cannot buy this amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f79de05fb6abf551b5172d1c164f6a040a23dc262ef976fac7601d71815718ea","typeString":"literal_string \"Cannot buy this amount\""}],"id":831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13487:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13487:141:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"13487:141:0"}]}},{"assignments":[845],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"amount","nameLocation":"13660:6:0","nodeType":"VariableDeclaration","scope":898,"src":"13652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"13652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":850,"initialValue":{"arguments":[{"expression":{"id":847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13685:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13689:5:0","memberName":"value","nodeType":"MemberAccess","src":"13685:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":846,"name":"calcTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"13669:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13669:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13652:43:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"saleIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"13710:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13723:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13710:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":865,"nodeType":"Block","src":"13793:60:0","statements":[{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":860,"name":"publicSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"13808:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":861,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13832:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13836:5:0","memberName":"value","nodeType":"MemberAccess","src":"13832:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13808:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":864,"nodeType":"ExpressionStatement","src":"13808:33:0"}]},"id":866,"nodeType":"IfStatement","src":"13706:147:0","trueBody":{"id":859,"nodeType":"Block","src":"13726:61:0","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":854,"name":"privateSaleTotalSaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"13741:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":855,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13766:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13770:5:0","memberName":"value","nodeType":"MemberAccess","src":"13766:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13741:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"13741:34:0"}]}},{"assignments":[868,null],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"sent","nameLocation":"13869:4:0","nodeType":"VariableDeclaration","scope":898,"src":"13864:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":867,"name":"bool","nodeType":"ElementaryTypeName","src":"13864:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":877,"initialValue":{"arguments":[{"hexValue":"","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13910:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":869,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"13879:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13879:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13887:4:0","memberName":"call","nodeType":"MemberAccess","src":"13879:12:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13899:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13903:5:0","memberName":"value","nodeType":"MemberAccess","src":"13899:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13879:30:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13879:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13863:50:0"},{"expression":{"arguments":[{"id":879,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"13932:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204574686572","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13938:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""},"value":"Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""}],"id":878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13924:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13924:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"ExpressionStatement","src":"13924:37:0"},{"expression":{"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":883,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"13972:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":886,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":884,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"13984:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13972:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":887,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"14001:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13972:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":889,"nodeType":"ExpressionStatement","src":"13972:35:0"},{"expression":{"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":890,"name":"userDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"14018:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":893,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":891,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"14032:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14032:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14018:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":894,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14049:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14053:5:0","memberName":"value","nodeType":"MemberAccess","src":"14049:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14018:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":897,"nodeType":"ExpressionStatement","src":"14018:40:0"}]},"functionSelector":"a6f2ae3a","id":899,"implemented":true,"kind":"function","modifiers":[],"name":"buy","nameLocation":"13015:3:0","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"13018:2:0"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"13036:0:0"},"scope":980,"src":"13006:1060:0","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":940,"nodeType":"Block","src":"14109:259:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":903,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14128:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":906,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":904,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"14140:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14140:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14128:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14157:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14128:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c656173652062757920746f6b656e2e","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14160:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908","typeString":"literal_string \"Please buy token.\""},"value":"Please buy token."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908","typeString":"literal_string \"Please buy token.\""}],"id":902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14120:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14120:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"ExpressionStatement","src":"14120:60:0"},{"expression":{"arguments":[{"expression":{"id":916,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14222:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14226:6:0","memberName":"sender","nodeType":"MemberAccess","src":"14222:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":918,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14234:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":921,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":919,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"14246:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14246:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14234:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":913,"name":"rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"14198:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":912,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"14191:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$84_$","typeString":"type(contract IERC20)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14191:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$84","typeString":"contract IERC20"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14213:8:0","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":72,"src":"14191:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14191:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":923,"nodeType":"ExpressionStatement","src":"14191:69:0"},{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":924,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14271:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":927,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":925,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"14283:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14283:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14271:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14299:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14271:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"nodeType":"ExpressionStatement","src":"14271:29:0"},{"eventCall":{"arguments":[{"expression":{"id":932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14322:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14326:6:0","memberName":"sender","nodeType":"MemberAccess","src":"14322:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":934,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14334:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":937,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":935,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"14346:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14346:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14334:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":931,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"14316:5:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14316:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"EmitStatement","src":"14311:49:0"}]},"functionSelector":"afd18916","id":941,"implemented":true,"kind":"function","modifiers":[],"name":"claimRewardToken","nameLocation":"14083:16:0","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"14099:2:0"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"14109:0:0"},"scope":980,"src":"14074:294:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":954,"nodeType":"Block","src":"14479:57:0","statements":[{"expression":{"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":948,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14490:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":949,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14504:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":951,"indexExpression":{"id":950,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"14516:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14504:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14490:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":953,"nodeType":"ExpressionStatement","src":"14490:38:0"}]},"functionSelector":"dde070e8","id":955,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimAmount","nameLocation":"14385:14:0","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"userAddress","nameLocation":"14418:11:0","nodeType":"VariableDeclaration","scope":955,"src":"14410:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"14410:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14399:37:0"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"claimAmount","nameLocation":"14466:11:0","nodeType":"VariableDeclaration","scope":955,"src":"14458:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"14458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14457:21:0"},"scope":980,"src":"14376:160:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":964,"nodeType":"Block","src":"14600:37:0","statements":[{"expression":{"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":960,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"14611:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":961,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"14619:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14611:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":963,"nodeType":"ExpressionStatement","src":"14611:18:0"}]},"functionSelector":"98d5fdca","id":965,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"14553:8:0","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"14561:2:0"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"price","nameLocation":"14593:5:0","nodeType":"VariableDeclaration","scope":965,"src":"14585:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"14585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14584:15:0"},"scope":980,"src":"14544:93:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":971,"nodeType":"Block","src":"14672:24:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":968,"name":"buy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"14683:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14683:5:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"14683:5:0"}]},"id":972,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[],"src":"14652:2:0"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"14672:0:0"},"scope":980,"src":"14645:51:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":978,"nodeType":"Block","src":"14732:24:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":975,"name":"buy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"14743:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:5:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"ExpressionStatement","src":"14743:5:0"}]},"id":979,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"14712:2:0"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"14732:0:0"},"scope":980,"src":"14704:52:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":981,"src":"10118:4641:0","usedErrors":[]}],"src":"39:14722:0"},"id":0}},"contracts":{"contracts/IDO.sol":{"Claimable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"saleIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stopSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_445":{"entryPoint":null,"id":445,"parameterSlots":0,"returnSlots":0},"@_msgSender_93":{"entryPoint":null,"id":93,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052600060015534801561001557600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061053f806100666000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100bb578063e36b0b37146100d6578063f2fde38b146100de578063fe96973a146100f157600080fd5b80631698755f146100825780636ec012e714610097578063715018a6146100b3575b600080fd5b61009561009036600461044d565b610104565b005b6100a060015481565b6040519081526020015b60405180910390f35b6100956101ce565b6000546040516001600160a01b0390911681526020016100aa565b610095610242565b6100956100ec366004610477565b610273565b6100956100ff366004610499565b6102a9565b6000546001600160a01b031633146101375760405162461bcd60e51b815260040161012e906104b2565b60405180910390fd5b816001600160a01b031663a9059cbb6101586000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c991906104e7565b505050565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260040161012e906104b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461026c5760405162461bcd60e51b815260040161012e906104b2565b6003600155565b6000546001600160a01b0316331461029d5760405162461bcd60e51b815260040161012e906104b2565b6102a681610371565b50565b6000546001600160a01b031633146102d35760405162461bcd60e51b815260040161012e906104b2565b600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b505090508061036d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161012e565b5050565b6001600160a01b0381166103d65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461044857600080fd5b919050565b6000806040838503121561046057600080fd5b61046983610431565b946020939093013593505050565b60006020828403121561048957600080fd5b61049282610431565b9392505050565b6000602082840312156104ab57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156104f957600080fd5b8151801515811461049257600080fdfea26469706673582212206e466bc8fb177eaa4e72dce3b09fa5e39acf6b54c007014e2e46b26baab528ab64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x53F DUP1 PUSH2 0x66 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1698755F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x6EC012E7 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0x95 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x158 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x371 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x12E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP4 PUSH2 0x431 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x492 DUP3 PUSH2 0x431 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x466BC8FB177EAA4E72DCE3B09FA5E3 SWAP11 0xCF PUSH12 0x54C007014E2E46B26BAAB528 0xAB PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"9368:746:0:-:0;;;9493:1;9469:25;;9368:746;;;;;;;;;-1:-1:-1;8480:17:0;8523:18;;-1:-1:-1;;;;;;8523:18:0;1332:10;8523:18;;;;;8557:43;;1332:10;;;;8557:43;;8480:17;;8557:43;8469:139;9368:746;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_93":{"entryPoint":null,"id":93,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_523":{"entryPoint":881,"id":523,"parameterSlots":1,"returnSlots":0},"@claimETH_581":{"entryPoint":681,"id":581,"parameterSlots":1,"returnSlots":0},"@claimToken_558":{"entryPoint":260,"id":558,"parameterSlots":2,"returnSlots":0},"@owner_453":{"entryPoint":null,"id":453,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_486":{"entryPoint":462,"id":486,"parameterSlots":0,"returnSlots":0},"@saleIndex_529":{"entryPoint":null,"id":529,"parameterSlots":0,"returnSlots":0},"@stopSale_539":{"entryPoint":578,"id":539,"parameterSlots":0,"returnSlots":0},"@transferOwnership_498":{"entryPoint":627,"id":498,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1073,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1101,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1255,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3102:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:1","statements":[{"nodeType":"YulAssignment","src":"73:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:1"},"nodeType":"YulFunctionCall","src":"82:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:1"}]},{"body":{"nodeType":"YulBlock","src":"165:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:1"},"nodeType":"YulFunctionCall","src":"167:12:1"},"nodeType":"YulExpressionStatement","src":"167:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:1"},"nodeType":"YulFunctionCall","src":"146:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:1"},"nodeType":"YulFunctionCall","src":"142:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:1"},"nodeType":"YulFunctionCall","src":"131:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:1"},"nodeType":"YulFunctionCall","src":"121:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:1"},"nodeType":"YulFunctionCall","src":"114:50:1"},"nodeType":"YulIf","src":"111:70:1"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:1","type":""}],"src":"14:173:1"},{"body":{"nodeType":"YulBlock","src":"279:167:1","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:1"},"nodeType":"YulFunctionCall","src":"327:12:1"},"nodeType":"YulExpressionStatement","src":"327:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:1"},"nodeType":"YulFunctionCall","src":"296:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:1"},"nodeType":"YulFunctionCall","src":"292:32:1"},"nodeType":"YulIf","src":"289:52:1"},{"nodeType":"YulAssignment","src":"350:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:1"},"nodeType":"YulFunctionCall","src":"360:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:1"}]},{"nodeType":"YulAssignment","src":"398:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:1"},"nodeType":"YulFunctionCall","src":"421:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:1"},"nodeType":"YulFunctionCall","src":"408:32:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:1","type":""}],"src":"192:254:1"},{"body":{"nodeType":"YulBlock","src":"552:76:1","statements":[{"nodeType":"YulAssignment","src":"562:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:1"},"nodeType":"YulFunctionCall","src":"570:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:1"},"nodeType":"YulFunctionCall","src":"597:25:1"},"nodeType":"YulExpressionStatement","src":"597:25:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:1","type":""}],"src":"451:177:1"},{"body":{"nodeType":"YulBlock","src":"734:102:1","statements":[{"nodeType":"YulAssignment","src":"744:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"756:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"767:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"752:3:1"},"nodeType":"YulFunctionCall","src":"752:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"744:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"801:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"817:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"822:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"813:3:1"},"nodeType":"YulFunctionCall","src":"813:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"826:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"809:3:1"},"nodeType":"YulFunctionCall","src":"809:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"797:3:1"},"nodeType":"YulFunctionCall","src":"797:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"779:6:1"},"nodeType":"YulFunctionCall","src":"779:51:1"},"nodeType":"YulExpressionStatement","src":"779:51:1"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"703:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"714:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"725:4:1","type":""}],"src":"633:203:1"},{"body":{"nodeType":"YulBlock","src":"911:116:1","statements":[{"body":{"nodeType":"YulBlock","src":"957:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"966:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"969:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"959:6:1"},"nodeType":"YulFunctionCall","src":"959:12:1"},"nodeType":"YulExpressionStatement","src":"959:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"932:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"941:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"928:3:1"},"nodeType":"YulFunctionCall","src":"928:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"924:3:1"},"nodeType":"YulFunctionCall","src":"924:32:1"},"nodeType":"YulIf","src":"921:52:1"},{"nodeType":"YulAssignment","src":"982:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1011:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"992:18:1"},"nodeType":"YulFunctionCall","src":"992:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"982:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:1","type":""}],"src":"841:186:1"},{"body":{"nodeType":"YulBlock","src":"1102:110:1","statements":[{"body":{"nodeType":"YulBlock","src":"1148:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1157:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1160:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1150:6:1"},"nodeType":"YulFunctionCall","src":"1150:12:1"},"nodeType":"YulExpressionStatement","src":"1150:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1123:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1119:3:1"},"nodeType":"YulFunctionCall","src":"1119:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1144:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1115:3:1"},"nodeType":"YulFunctionCall","src":"1115:32:1"},"nodeType":"YulIf","src":"1112:52:1"},{"nodeType":"YulAssignment","src":"1173:33:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1196:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1183:12:1"},"nodeType":"YulFunctionCall","src":"1183:23:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1173:6:1"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1079:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1091:6:1","type":""}],"src":"1032:180:1"},{"body":{"nodeType":"YulBlock","src":"1391:182:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1408:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1419:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1401:6:1"},"nodeType":"YulFunctionCall","src":"1401:21:1"},"nodeType":"YulExpressionStatement","src":"1401:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1442:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1453:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1438:3:1"},"nodeType":"YulFunctionCall","src":"1438:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"1458:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1431:6:1"},"nodeType":"YulFunctionCall","src":"1431:30:1"},"nodeType":"YulExpressionStatement","src":"1431:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1481:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1492:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:1"},"nodeType":"YulFunctionCall","src":"1477:18:1"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1497:34:1","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:1"},"nodeType":"YulFunctionCall","src":"1470:62:1"},"nodeType":"YulExpressionStatement","src":"1470:62:1"},{"nodeType":"YulAssignment","src":"1541:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1553:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1564:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1549:3:1"},"nodeType":"YulFunctionCall","src":"1549:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1541:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1368:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1382:4:1","type":""}],"src":"1217:356:1"},{"body":{"nodeType":"YulBlock","src":"1707:145:1","statements":[{"nodeType":"YulAssignment","src":"1717:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1729:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1740:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1725:3:1"},"nodeType":"YulFunctionCall","src":"1725:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1717:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1759:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1774:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1790:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1795:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1786:3:1"},"nodeType":"YulFunctionCall","src":"1786:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"1799:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1782:3:1"},"nodeType":"YulFunctionCall","src":"1782:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1770:3:1"},"nodeType":"YulFunctionCall","src":"1770:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:1"},"nodeType":"YulFunctionCall","src":"1752:51:1"},"nodeType":"YulExpressionStatement","src":"1752:51:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1823:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1834:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1819:3:1"},"nodeType":"YulFunctionCall","src":"1819:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"1839:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1812:6:1"},"nodeType":"YulFunctionCall","src":"1812:34:1"},"nodeType":"YulExpressionStatement","src":"1812:34:1"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1668:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1679:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1687:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1698:4:1","type":""}],"src":"1578:274:1"},{"body":{"nodeType":"YulBlock","src":"1935:199:1","statements":[{"body":{"nodeType":"YulBlock","src":"1981:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1990:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1993:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1983:6:1"},"nodeType":"YulFunctionCall","src":"1983:12:1"},"nodeType":"YulExpressionStatement","src":"1983:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1956:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1965:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1952:3:1"},"nodeType":"YulFunctionCall","src":"1952:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1948:3:1"},"nodeType":"YulFunctionCall","src":"1948:32:1"},"nodeType":"YulIf","src":"1945:52:1"},{"nodeType":"YulVariableDeclaration","src":"2006:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2025:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2019:5:1"},"nodeType":"YulFunctionCall","src":"2019:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2010:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2088:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2100:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2090:6:1"},"nodeType":"YulFunctionCall","src":"2090:12:1"},"nodeType":"YulExpressionStatement","src":"2090:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2057:5:1"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2078:5:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2071:6:1"},"nodeType":"YulFunctionCall","src":"2071:13:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2064:6:1"},"nodeType":"YulFunctionCall","src":"2064:21:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2054:2:1"},"nodeType":"YulFunctionCall","src":"2054:32:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2047:6:1"},"nodeType":"YulFunctionCall","src":"2047:40:1"},"nodeType":"YulIf","src":"2044:60:1"},{"nodeType":"YulAssignment","src":"2113:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"2123:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2113:6:1"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1901:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1912:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1924:6:1","type":""}],"src":"1857:277:1"},{"body":{"nodeType":"YulBlock","src":"2330:14:1","statements":[{"nodeType":"YulAssignment","src":"2332:10:1","value":{"name":"pos","nodeType":"YulIdentifier","src":"2339:3:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2332:3:1"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2314:3:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2322:3:1","type":""}],"src":"2139:205:1"},{"body":{"nodeType":"YulBlock","src":"2523:170:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2540:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2533:6:1"},"nodeType":"YulFunctionCall","src":"2533:21:1"},"nodeType":"YulExpressionStatement","src":"2533:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2574:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2585:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2570:3:1"},"nodeType":"YulFunctionCall","src":"2570:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"2590:2:1","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2563:6:1"},"nodeType":"YulFunctionCall","src":"2563:30:1"},"nodeType":"YulExpressionStatement","src":"2563:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2613:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2624:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2609:3:1"},"nodeType":"YulFunctionCall","src":"2609:18:1"},{"hexValue":"4661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"2629:22:1","type":"","value":"Failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2602:6:1"},"nodeType":"YulFunctionCall","src":"2602:50:1"},"nodeType":"YulExpressionStatement","src":"2602:50:1"},{"nodeType":"YulAssignment","src":"2661:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2673:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2684:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2669:3:1"},"nodeType":"YulFunctionCall","src":"2669:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2661:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2500:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2514:4:1","type":""}],"src":"2349:344:1"},{"body":{"nodeType":"YulBlock","src":"2872:228:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2889:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2900:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2882:6:1"},"nodeType":"YulFunctionCall","src":"2882:21:1"},"nodeType":"YulExpressionStatement","src":"2882:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2923:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2934:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2919:3:1"},"nodeType":"YulFunctionCall","src":"2919:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"2939:2:1","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2912:6:1"},"nodeType":"YulFunctionCall","src":"2912:30:1"},"nodeType":"YulExpressionStatement","src":"2912:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2962:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2973:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2958:3:1"},"nodeType":"YulFunctionCall","src":"2958:18:1"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"2978:34:1","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:1"},"nodeType":"YulFunctionCall","src":"2951:62:1"},"nodeType":"YulExpressionStatement","src":"2951:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3033:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3044:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3029:3:1"},"nodeType":"YulFunctionCall","src":"3029:18:1"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"3049:8:1","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3022:6:1"},"nodeType":"YulFunctionCall","src":"3022:36:1"},"nodeType":"YulExpressionStatement","src":"3022:36:1"},{"nodeType":"YulAssignment","src":"3067:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3079:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3090:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3075:3:1"},"nodeType":"YulFunctionCall","src":"3075:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3067:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2849:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2863:4:1","type":""}],"src":"2698:402:1"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100bb578063e36b0b37146100d6578063f2fde38b146100de578063fe96973a146100f157600080fd5b80631698755f146100825780636ec012e714610097578063715018a6146100b3575b600080fd5b61009561009036600461044d565b610104565b005b6100a060015481565b6040519081526020015b60405180910390f35b6100956101ce565b6000546040516001600160a01b0390911681526020016100aa565b610095610242565b6100956100ec366004610477565b610273565b6100956100ff366004610499565b6102a9565b6000546001600160a01b031633146101375760405162461bcd60e51b815260040161012e906104b2565b60405180910390fd5b816001600160a01b031663a9059cbb6101586000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c991906104e7565b505050565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260040161012e906104b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461026c5760405162461bcd60e51b815260040161012e906104b2565b6003600155565b6000546001600160a01b0316331461029d5760405162461bcd60e51b815260040161012e906104b2565b6102a681610371565b50565b6000546001600160a01b031633146102d35760405162461bcd60e51b815260040161012e906104b2565b600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b505090508061036d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161012e565b5050565b6001600160a01b0381166103d65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461044857600080fd5b919050565b6000806040838503121561046057600080fd5b61046983610431565b946020939093013593505050565b60006020828403121561048957600080fd5b61049282610431565b9392505050565b6000602082840312156104ab57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156104f957600080fd5b8151801515811461049257600080fdfea26469706673582212206e466bc8fb177eaa4e72dce3b09fa5e39acf6b54c007014e2e46b26baab528ab64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1698755F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x6EC012E7 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0x95 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x158 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x371 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x12E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP4 PUSH2 0x431 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x492 DUP3 PUSH2 0x431 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x466BC8FB177EAA4E72DCE3B09FA5E3 SWAP11 0xCF PUSH12 0x54C007014E2E46B26BAAB528 0xAB PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"9368:746:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9726:167;;;;;;:::i;:::-;;:::i;:::-;;9469:25;;;;;;;;;597::1;;;585:2;570:18;9469:25:0;;;;;;;;8830:140;;;:::i;8616:79::-;8654:7;8681:6;8616:79;;-1:-1:-1;;;;;8681:6:0;;;779:51:1;;767:2;752:18;8616:79:0;633:203:1;9543:71:0;;;:::i;8978:109::-;;;;;;:::i;:::-;;:::i;9944:167::-;;;;;;:::i;:::-;;:::i;9726:::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;;;;;;;;;9846:12:::1;-1:-1:-1::0;;;;;9839:29:0::1;;9869:7;8654::::0;8681:6;-1:-1:-1;;;;;8681:6:0;;8616:79;9869:7:::1;9839:46;::::0;-1:-1:-1;;;;;;9839:46:0::1;::::0;;;;;;-1:-1:-1;;;;;1770:32:1;;;9839:46:0::1;::::0;::::1;1752:51:1::0;1819:18;;;1812:34;;;1725:18;;9839:46:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9726:167:::0;;:::o;8830:140::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;8929:1:::1;8913:6:::0;;8892:40:::1;::::0;-1:-1:-1;;;;;8913:6:0;;::::1;::::0;8892:40:::1;::::0;8929:1;;8892:40:::1;8960:1;8943:19:::0;;-1:-1:-1;;;;;;8943:19:0::1;::::0;;8830:140::o;9543:71::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;9605:1:::1;9593:9;:13:::0;9543:71::o;8978:109::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;9051:28:::1;9070:8;9051:18;:28::i;:::-;8978:109:::0;:::o;9944:167::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;10009:9:::1;8681:6:::0;;10024:31:::1;::::0;-1:-1:-1;;;;;8681:6:0;;;;10044;;10009:9;10024:31;10009:9;10024:31;10044:6;8681;10024:31:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10008:47;;;10074:4;10066:37;;;::::0;-1:-1:-1;;;10066:37:0;;2551:2:1;10066:37:0::1;::::0;::::1;2533:21:1::0;2590:2;2570:18;;;2563:30;-1:-1:-1;;;2609:18:1;;;2602:50;2669:18;;10066:37:0::1;2349:344:1::0;10066:37:0::1;9997:114;9944:167:::0;:::o;9095:266::-;-1:-1:-1;;;;;9183:22:0;;9161:110;;;;-1:-1:-1;;;9161:110:0;;2900:2:1;9161:110:0;;;2882:21:1;2939:2;2919:18;;;2912:30;2978:34;2958:18;;;2951:62;-1:-1:-1;;;3029:18:1;;;3022:36;3075:19;;9161:110:0;2698:402:1;9161:110:0;9308:6;;;9287:38;;-1:-1:-1;;;;;9287:38:0;;;;9308:6;;;9287:38;;;9336:6;:17;;-1:-1:-1;;;;;;9336:17:0;-1:-1:-1;;;;;9336:17:0;;;;;;;;;;9095:266::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;841:186::-;900:6;953:2;941:9;932:7;928:23;924:32;921:52;;;969:1;966;959:12;921:52;992:29;1011:9;992:29;:::i;:::-;982:39;841:186;-1:-1:-1;;;841:186:1:o;1032:180::-;1091:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:52;;;1160:1;1157;1150:12;1112:52;-1:-1:-1;1183:23:1;;1032:180;-1:-1:-1;1032:180:1:o;1217:356::-;1419:2;1401:21;;;1438:18;;;1431:30;1497:34;1492:2;1477:18;;1470:62;1564:2;1549:18;;1217:356::o;1857:277::-;1924:6;1977:2;1965:9;1956:7;1952:23;1948:32;1945:52;;;1993:1;1990;1983:12;1945:52;2025:9;2019:16;2078:5;2071:13;2064:21;2057:5;2054:32;2044:60;;2100:1;2097;2090:12"},"gasEstimates":{"creation":{"codeDepositCost":"268600","executionCost":"31085","totalCost":"299685"},"external":{"claimETH(uint256)":"infinite","claimToken(address,uint256)":"infinite","owner()":"2301","renounceOwnership()":"30210","saleIndex()":"2307","stopSale()":"24412","transferOwnership(address)":"30473"}},"methodIdentifiers":{"claimETH(uint256)":"fe96973a","claimToken(address,uint256)":"1698755f","owner()":"8da5cb5b","renounceOwnership()":"715018a6","saleIndex()":"6ec012e7","stopSale()":"e36b0b37","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"Claimable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint public saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5035000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 4940000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n    }\\r\\n\\r\\n    // -------- Owner Functions ----------\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addToWhitelist(\\r\\n        address[] memory addressesToAdd\\r\\n    ) external onlyOwner {\\r\\n        for (uint i = 0; i < addressesToAdd.length; i++) {\\r\\n            whitelistCheck[addressesToAdd[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // ---------- owner functions end ----------------\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (\\r\\n            saleIndex == 2 &&\\r\\n            (publicSaleTotalSaled + _ethAmount) > publicSaleHardcap\\r\\n        ) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev buy token from eth\\r\\n     * @dev on private sale 0.01 - 10 eth for only whitelist addresses\\r\\n     * @dev on private sale Check for hardcap\\r\\n     */\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n            require(\\r\\n                privateSaleHardcap >= (privateSaleTotalSaled + msg.value),\\r\\n                \\\"Cannot buy this amount\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd813197483671920c4137d834a87f4ed083ba47c1c8b19d7806d37f883facbd0\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":418,"contract":"contracts/IDO.sol:Claimable","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":529,"contract":"contracts/IDO.sol:Claimable","label":"saleIndex","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212207618e576409677b73a421b16608875983a11aeac65daadb8371f0df40aace5fe64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x18E576409677B73A421B16608875983A11AEAC65DAADB8 CALLDATACOPY 0x1F 0xD DELEGATECALL EXP 0xAC 0xE5 INVALID PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1080:506:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212207618e576409677b73a421b16608875983a11aeac65daadb8371f0df40aace5fe64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x18E576409677B73A421B16608875983A11AEAC65DAADB8 CALLDATACOPY 0x1F 0xD DELEGATECALL EXP 0xAC 0xE5 INVALID PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1080:506:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"_msgData()":"infinite","_msgSender()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint public saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5035000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 4940000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n    }\\r\\n\\r\\n    // -------- Owner Functions ----------\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addToWhitelist(\\r\\n        address[] memory addressesToAdd\\r\\n    ) external onlyOwner {\\r\\n        for (uint i = 0; i < addressesToAdd.length; i++) {\\r\\n            whitelistCheck[addressesToAdd[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // ---------- owner functions end ----------------\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (\\r\\n            saleIndex == 2 &&\\r\\n            (publicSaleTotalSaled + _ethAmount) > publicSaleHardcap\\r\\n        ) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev buy token from eth\\r\\n     * @dev on private sale 0.01 - 10 eth for only whitelist addresses\\r\\n     * @dev on private sale Check for hardcap\\r\\n     */\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n            require(\\r\\n                privateSaleHardcap >= (privateSaleTotalSaled + msg.value),\\r\\n                \\\"Cannot buy this amount\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd813197483671920c4137d834a87f4ed083ba47c1c8b19d7806d37f883facbd0\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IDO":{"abi":[{"inputs":[{"internalType":"address","name":"_rewardAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Buy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address[]","name":"addressesToAdd","type":"address[]"}],"name":"addToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ethAmount","type":"uint256"}],"name":"calcTokenAmount","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimRewardToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getClaimAmount","outputs":[{"internalType":"uint256","name":"claimAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"privateSaleAllocation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"privateSaleTotalSaled","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"publicSaleAllocation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"publicSaleTotalSaled","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"resetPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"saleIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_saleIndex","type":"uint256"}],"name":"startSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stopSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_445":{"entryPoint":null,"id":445,"parameterSlots":0,"returnSlots":0},"@_664":{"entryPoint":null,"id":664,"parameterSlots":1,"returnSlots":0},"@_msgSender_93":{"entryPoint":null,"id":93,"parameterSlots":0,"returnSlots":1},"@div_323":{"entryPoint":263,"id":323,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":282,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":323,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:528:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:1","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:1"},"nodeType":"YulFunctionCall","src":"143:12:1"},"nodeType":"YulExpressionStatement","src":"143:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:1"},"nodeType":"YulFunctionCall","src":"112:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:1"},"nodeType":"YulFunctionCall","src":"108:32:1"},"nodeType":"YulIf","src":"105:52:1"},{"nodeType":"YulVariableDeclaration","src":"166:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:1"},"nodeType":"YulFunctionCall","src":"179:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:1"},"nodeType":"YulFunctionCall","src":"260:12:1"},"nodeType":"YulExpressionStatement","src":"260:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:1"},"nodeType":"YulFunctionCall","src":"239:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:1"},"nodeType":"YulFunctionCall","src":"235:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:1"},"nodeType":"YulFunctionCall","src":"224:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:1"},"nodeType":"YulFunctionCall","src":"214:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:1"},"nodeType":"YulFunctionCall","src":"207:50:1"},"nodeType":"YulIf","src":"204:70:1"},{"nodeType":"YulAssignment","src":"283:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:1"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:1","type":""}],"src":"14:290:1"},{"body":{"nodeType":"YulBlock","src":"355:171:1","statements":[{"body":{"nodeType":"YulBlock","src":"386:111:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"407:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"414:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"419:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"410:3:1"},"nodeType":"YulFunctionCall","src":"410:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"400:6:1"},"nodeType":"YulFunctionCall","src":"400:31:1"},"nodeType":"YulExpressionStatement","src":"400:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"451:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"454:4:1","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"444:6:1"},"nodeType":"YulFunctionCall","src":"444:15:1"},"nodeType":"YulExpressionStatement","src":"444:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"479:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"482:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"472:6:1"},"nodeType":"YulFunctionCall","src":"472:15:1"},"nodeType":"YulExpressionStatement","src":"472:15:1"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"375:1:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"368:6:1"},"nodeType":"YulFunctionCall","src":"368:9:1"},"nodeType":"YulIf","src":"365:132:1"},{"nodeType":"YulAssignment","src":"506:14:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"515:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"518:1:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"511:3:1"},"nodeType":"YulFunctionCall","src":"511:9:1"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"506:1:1"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"340:1:1","type":""},{"name":"y","nodeType":"YulTypedName","src":"343:1:1","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"349:1:1","type":""}],"src":"309:217:1"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH9 0x2DF85D331A7B40000 PUSH1 0x3 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x4 SSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x5 SSTORE PUSH9 0x3860E639D80640000 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE PUSH6 0x4944D62EE00 PUSH1 0x9 SSTORE PUSH1 0x0 PUSH1 0xA SSTORE PUSH6 0x47E2EF1F800 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFED CODESIZE SUB DUP1 PUSH2 0xFED DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x83 SWAP2 PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0xDF PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x107 PUSH1 0x20 SHL PUSH2 0xB4A OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x165 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113 DUP3 DUP5 PUSH2 0x143 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x160 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH2 0xE79 DUP1 PUSH2 0x174 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDDE070E8 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDDE070E8 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDE8E81ED EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xE7A6AC55 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x392 JUMPI PUSH2 0x13D JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xAFD18916 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xC8AAD250 EQ PUSH2 0x2DB JUMPI PUSH2 0x13D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x78442876 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x7B7902DD EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8092BE4A EQ PUSH2 0x25C JUMPI PUSH2 0x13D JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE3AB61D EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x1698755F EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x34AD1F32 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6EC012E7 EQ PUSH2 0x1DB JUMPI PUSH2 0x13D JUMP JUMPDEST CALLDATASIZE PUSH2 0x13D JUMPI PUSH2 0x13B PUSH2 0x3B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x7A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x915 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0xA22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x3C6 JUMPI POP PUSH1 0x3 PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F77656420746F20627579206E6F772E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x54E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x43C SWAP1 CALLVALUE SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x5 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI POP PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x466 SWAP1 CALLVALUE SWAP1 PUSH2 0xD88 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420697320616C6C6F77656420302E30312065746820746F203130 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2065746820666F72206F6E6C79206C697374656420616464726573732E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10D85B9B9BDD08189D5E481D1A1A5CC8185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 CALLVALUE PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x582 JUMPI CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x59A SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x653 SWAP1 DUP5 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x677 SWAP1 DUP5 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SSTORE DUP2 SWAP1 SUB PUSH2 0x6CB JUMPI PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x6C5 SWAP2 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SUB PUSH2 0x6E4 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH2 0x6C5 SWAP2 PUSH2 0xB4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x732 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 EQ DUP1 ISZERO PUSH2 0x83E JUMPI POP PUSH1 0x6 SLOAD DUP3 PUSH1 0xA SLOAD PUSH2 0x83C SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x86B JUMPI PUSH2 0x85D PUSH1 0xB SLOAD DUP4 PUSH1 0xA SLOAD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x86B SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x879 SWAP1 DUP4 SWAP1 PUSH2 0xB4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x909 DUP2 PUSH2 0xE08 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8AC JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xC SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x6E4 DUP2 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0xE21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB56 DUP3 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC89 DUP4 PUSH2 0xC1D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCFE JUMPI PUSH2 0xCFE PUSH2 0xC97 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD23 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xD41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xD66 JUMPI PUSH2 0xD57 DUP6 PUSH2 0xC1D JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xD46 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x879 JUMPI PUSH2 0x879 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE1A JUMPI PUSH2 0xE1A PUSH2 0xD72 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH3 0x22EE97 0x4E RETURNDATACOPY 0xFC SWAP15 SDIV BLOCKHASH PUSH4 0xD7F70375 ISZERO 0x2F DUP12 ADDMOD 0xE2 PUSH28 0x588FE7993D477004879064736F6C6343000812003300000000000000 ","sourceMap":"10118:4641:0:-:0;;;9493:1;9469:25;;10446:9;10417:38;;10485:4;10462:27;;10519:4;10496:27;;10595:9;10567:37;;10726:1;10687:40;;10773:13;10734:52;;10831:1;10793:39;;10877:13;10839:51;;11039:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8480:17;8523:18;;-1:-1:-1;;;;;;8523:18:0;1332:10;8523:18;;;;;8557:43;;1332:10;;;;8557:43;;8480:17;;8557:43;8469:139;11160:45;11183:21;;11160:18;;:22;;;;;;:45;;;;:::i;:::-;11147:10;:58;11216:13;:30;;-1:-1:-1;;;;;;11216:30:0;-1:-1:-1;;;;;11216:30:0;;;;;;;;;;10118:4641;;5202:98;5260:7;5287:5;5291:1;5287;:5;:::i;:::-;5280:12;5202:98;-1:-1:-1;;;5202:98:0:o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;309:217;349:1;375;365:132;;419:10;414:3;410:20;407:1;400:31;454:4;451:1;444:15;482:4;479:1;472:15;365:132;-1:-1:-1;511:9:1;;309:217::o;:::-;10118:4641:0;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_972":{"entryPoint":null,"id":972,"parameterSlots":0,"returnSlots":0},"@_979":{"entryPoint":null,"id":979,"parameterSlots":0,"returnSlots":0},"@_msgSender_93":{"entryPoint":null,"id":93,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_523":{"entryPoint":2909,"id":523,"parameterSlots":1,"returnSlots":0},"@addToWhitelist_742":{"entryPoint":2175,"id":742,"parameterSlots":1,"returnSlots":0},"@buy_899":{"entryPoint":946,"id":899,"parameterSlots":0,"returnSlots":0},"@calcTokenAmount_784":{"entryPoint":2076,"id":784,"parameterSlots":1,"returnSlots":1},"@claimETH_581":{"entryPoint":2694,"id":581,"parameterSlots":1,"returnSlots":0},"@claimRewardToken_941":{"entryPoint":2325,"id":941,"parameterSlots":0,"returnSlots":0},"@claimToken_558":{"entryPoint":1767,"id":558,"parameterSlots":2,"returnSlots":0},"@div_323":{"entryPoint":2890,"id":323,"parameterSlots":2,"returnSlots":1},"@getClaimAmount_955":{"entryPoint":null,"id":955,"parameterSlots":1,"returnSlots":1},"@getPrice_965":{"entryPoint":null,"id":965,"parameterSlots":0,"returnSlots":1},"@owner_453":{"entryPoint":null,"id":453,"parameterSlots":0,"returnSlots":1},"@privateSaleAllocation_629":{"entryPoint":null,"id":629,"parameterSlots":0,"returnSlots":0},"@privateSaleTotalSaled_624":{"entryPoint":null,"id":624,"parameterSlots":0,"returnSlots":0},"@publicSaleAllocation_637":{"entryPoint":null,"id":637,"parameterSlots":0,"returnSlots":0},"@publicSaleTotalSaled_632":{"entryPoint":null,"id":632,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_486":{"entryPoint":1960,"id":486,"parameterSlots":0,"returnSlots":0},"@resetPrice_676":{"entryPoint":2547,"id":676,"parameterSlots":1,"returnSlots":0},"@saleIndex_529":{"entryPoint":null,"id":529,"parameterSlots":0,"returnSlots":0},"@startSale_712":{"entryPoint":1664,"id":712,"parameterSlots":1,"returnSlots":0},"@stopSale_539":{"entryPoint":2594,"id":539,"parameterSlots":0,"returnSlots":0},"@transferOwnership_498":{"entryPoint":2643,"id":498,"parameterSlots":1,"returnSlots":0},"@userDeposited_647":{"entryPoint":null,"id":647,"parameterSlots":0,"returnSlots":0},"@userRewards_643":{"entryPoint":null,"id":643,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":3101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3181,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":3245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3483,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f79de05fb6abf551b5172d1c164f6a040a23dc262ef976fac7601d71815718ea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3464,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3617,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":3592,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3442,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3570,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3223,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6595:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:1","statements":[{"nodeType":"YulAssignment","src":"73:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:1"},"nodeType":"YulFunctionCall","src":"82:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:1"}]},{"body":{"nodeType":"YulBlock","src":"165:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:1"},"nodeType":"YulFunctionCall","src":"167:12:1"},"nodeType":"YulExpressionStatement","src":"167:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:1"},"nodeType":"YulFunctionCall","src":"146:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:1"},"nodeType":"YulFunctionCall","src":"142:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:1"},"nodeType":"YulFunctionCall","src":"131:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:1"},"nodeType":"YulFunctionCall","src":"121:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:1"},"nodeType":"YulFunctionCall","src":"114:50:1"},"nodeType":"YulIf","src":"111:70:1"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:1","type":""}],"src":"14:173:1"},{"body":{"nodeType":"YulBlock","src":"262:116:1","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:1"},"nodeType":"YulFunctionCall","src":"310:12:1"},"nodeType":"YulExpressionStatement","src":"310:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:1"},"nodeType":"YulFunctionCall","src":"279:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:1"},"nodeType":"YulFunctionCall","src":"275:32:1"},"nodeType":"YulIf","src":"272:52:1"},{"nodeType":"YulAssignment","src":"333:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:1"},"nodeType":"YulFunctionCall","src":"343:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:1","type":""}],"src":"192:186:1"},{"body":{"nodeType":"YulBlock","src":"484:76:1","statements":[{"nodeType":"YulAssignment","src":"494:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:1"},"nodeType":"YulFunctionCall","src":"502:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"536:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"547:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"529:6:1"},"nodeType":"YulFunctionCall","src":"529:25:1"},"nodeType":"YulExpressionStatement","src":"529:25:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"453:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"464:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"475:4:1","type":""}],"src":"383:177:1"},{"body":{"nodeType":"YulBlock","src":"635:110:1","statements":[{"body":{"nodeType":"YulBlock","src":"681:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"690:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"693:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"683:6:1"},"nodeType":"YulFunctionCall","src":"683:12:1"},"nodeType":"YulExpressionStatement","src":"683:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"656:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"665:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"652:3:1"},"nodeType":"YulFunctionCall","src":"652:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"677:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"648:3:1"},"nodeType":"YulFunctionCall","src":"648:32:1"},"nodeType":"YulIf","src":"645:52:1"},{"nodeType":"YulAssignment","src":"706:33:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"729:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"716:12:1"},"nodeType":"YulFunctionCall","src":"716:23:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"706:6:1"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"601:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"612:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"624:6:1","type":""}],"src":"565:180:1"},{"body":{"nodeType":"YulBlock","src":"837:167:1","statements":[{"body":{"nodeType":"YulBlock","src":"883:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"892:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"895:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"885:6:1"},"nodeType":"YulFunctionCall","src":"885:12:1"},"nodeType":"YulExpressionStatement","src":"885:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"858:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"867:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"854:3:1"},"nodeType":"YulFunctionCall","src":"854:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"850:3:1"},"nodeType":"YulFunctionCall","src":"850:32:1"},"nodeType":"YulIf","src":"847:52:1"},{"nodeType":"YulAssignment","src":"908:39:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"918:18:1"},"nodeType":"YulFunctionCall","src":"918:29:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"908:6:1"}]},{"nodeType":"YulAssignment","src":"956:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"983:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"994:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:1"},"nodeType":"YulFunctionCall","src":"979:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"966:12:1"},"nodeType":"YulFunctionCall","src":"966:32:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"956:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"795:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"806:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"818:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"826:6:1","type":""}],"src":"750:254:1"},{"body":{"nodeType":"YulBlock","src":"1041:95:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1058:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1065:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1070:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1061:3:1"},"nodeType":"YulFunctionCall","src":"1061:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1051:6:1"},"nodeType":"YulFunctionCall","src":"1051:31:1"},"nodeType":"YulExpressionStatement","src":"1051:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1098:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1101:4:1","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1091:6:1"},"nodeType":"YulFunctionCall","src":"1091:15:1"},"nodeType":"YulExpressionStatement","src":"1091:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1122:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1125:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1115:6:1"},"nodeType":"YulFunctionCall","src":"1115:15:1"},"nodeType":"YulExpressionStatement","src":"1115:15:1"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1009:127:1"},{"body":{"nodeType":"YulBlock","src":"1236:1026:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1246:12:1","value":{"kind":"number","nodeType":"YulLiteral","src":"1256:2:1","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1250:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1303:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1312:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1315:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1305:6:1"},"nodeType":"YulFunctionCall","src":"1305:12:1"},"nodeType":"YulExpressionStatement","src":"1305:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1278:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1287:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:1"},"nodeType":"YulFunctionCall","src":"1274:23:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1299:2:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1270:3:1"},"nodeType":"YulFunctionCall","src":"1270:32:1"},"nodeType":"YulIf","src":"1267:52:1"},{"nodeType":"YulVariableDeclaration","src":"1328:37:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1355:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1342:12:1"},"nodeType":"YulFunctionCall","src":"1342:23:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1332:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1374:28:1","value":{"kind":"number","nodeType":"YulLiteral","src":"1384:18:1","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1378:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1429:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1438:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1441:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1431:6:1"},"nodeType":"YulFunctionCall","src":"1431:12:1"},"nodeType":"YulExpressionStatement","src":"1431:12:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1417:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1425:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1414:2:1"},"nodeType":"YulFunctionCall","src":"1414:14:1"},"nodeType":"YulIf","src":"1411:34:1"},{"nodeType":"YulVariableDeclaration","src":"1454:32:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1468:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"1479:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1464:3:1"},"nodeType":"YulFunctionCall","src":"1464:22:1"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1458:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1534:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1543:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1546:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1536:6:1"},"nodeType":"YulFunctionCall","src":"1536:12:1"},"nodeType":"YulExpressionStatement","src":"1536:12:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1513:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"1517:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1509:3:1"},"nodeType":"YulFunctionCall","src":"1509:13:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1524:7:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1505:3:1"},"nodeType":"YulFunctionCall","src":"1505:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1498:6:1"},"nodeType":"YulFunctionCall","src":"1498:35:1"},"nodeType":"YulIf","src":"1495:55:1"},{"nodeType":"YulVariableDeclaration","src":"1559:26:1","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1582:2:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1569:12:1"},"nodeType":"YulFunctionCall","src":"1569:16:1"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1563:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1608:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1610:16:1"},"nodeType":"YulFunctionCall","src":"1610:18:1"},"nodeType":"YulExpressionStatement","src":"1610:18:1"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1600:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1604:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1597:2:1"},"nodeType":"YulFunctionCall","src":"1597:10:1"},"nodeType":"YulIf","src":"1594:36:1"},{"nodeType":"YulVariableDeclaration","src":"1639:20:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1653:1:1","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"1656:2:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1649:3:1"},"nodeType":"YulFunctionCall","src":"1649:10:1"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"1643:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1668:23:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1688:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1682:5:1"},"nodeType":"YulFunctionCall","src":"1682:9:1"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1672:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1700:56:1","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1722:6:1"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1738:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"1742:2:1","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1734:3:1"},"nodeType":"YulFunctionCall","src":"1734:11:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1751:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1747:3:1"},"nodeType":"YulFunctionCall","src":"1747:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1730:3:1"},"nodeType":"YulFunctionCall","src":"1730:25:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1718:3:1"},"nodeType":"YulFunctionCall","src":"1718:38:1"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1704:10:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1815:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1817:16:1"},"nodeType":"YulFunctionCall","src":"1817:18:1"},"nodeType":"YulExpressionStatement","src":"1817:18:1"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1774:10:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1786:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1771:2:1"},"nodeType":"YulFunctionCall","src":"1771:18:1"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1794:10:1"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1806:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1791:2:1"},"nodeType":"YulFunctionCall","src":"1791:22:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1768:2:1"},"nodeType":"YulFunctionCall","src":"1768:46:1"},"nodeType":"YulIf","src":"1765:72:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1853:2:1","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1857:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1846:6:1"},"nodeType":"YulFunctionCall","src":"1846:22:1"},"nodeType":"YulExpressionStatement","src":"1846:22:1"},{"nodeType":"YulVariableDeclaration","src":"1877:17:1","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1888:6:1"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1881:3:1","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1910:6:1"},{"name":"_4","nodeType":"YulIdentifier","src":"1918:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1903:6:1"},"nodeType":"YulFunctionCall","src":"1903:18:1"},"nodeType":"YulExpressionStatement","src":"1903:18:1"},{"nodeType":"YulAssignment","src":"1930:22:1","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1941:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1949:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1937:3:1"},"nodeType":"YulFunctionCall","src":"1937:15:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1930:3:1"}]},{"nodeType":"YulVariableDeclaration","src":"1961:34:1","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1983:2:1"},{"name":"_5","nodeType":"YulIdentifier","src":"1987:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:1"},"nodeType":"YulFunctionCall","src":"1979:11:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1992:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1975:3:1"},"nodeType":"YulFunctionCall","src":"1975:20:1"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1965:6:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2027:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2036:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2039:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2029:6:1"},"nodeType":"YulFunctionCall","src":"2029:12:1"},"nodeType":"YulExpressionStatement","src":"2029:12:1"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2010:6:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2018:7:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2007:2:1"},"nodeType":"YulFunctionCall","src":"2007:19:1"},"nodeType":"YulIf","src":"2004:39:1"},{"nodeType":"YulVariableDeclaration","src":"2052:22:1","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2067:2:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2071:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2063:3:1"},"nodeType":"YulFunctionCall","src":"2063:11:1"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2056:3:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2139:92:1","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2160:3:1"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2184:3:1"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2165:18:1"},"nodeType":"YulFunctionCall","src":"2165:23:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2153:6:1"},"nodeType":"YulFunctionCall","src":"2153:36:1"},"nodeType":"YulExpressionStatement","src":"2153:36:1"},{"nodeType":"YulAssignment","src":"2202:19:1","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2213:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2218:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2209:3:1"},"nodeType":"YulFunctionCall","src":"2209:12:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2202:3:1"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2094:3:1"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2099:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2091:2:1"},"nodeType":"YulFunctionCall","src":"2091:15:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2107:23:1","statements":[{"nodeType":"YulAssignment","src":"2109:19:1","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2120:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2125:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2116:3:1"},"nodeType":"YulFunctionCall","src":"2116:12:1"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2109:3:1"}]}]},"pre":{"nodeType":"YulBlock","src":"2087:3:1","statements":[]},"src":"2083:148:1"},{"nodeType":"YulAssignment","src":"2240:16:1","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2250:6:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2240:6:1"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1202:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1213:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1225:6:1","type":""}],"src":"1141:1121:1"},{"body":{"nodeType":"YulBlock","src":"2368:102:1","statements":[{"nodeType":"YulAssignment","src":"2378:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2390:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2401:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2386:3:1"},"nodeType":"YulFunctionCall","src":"2386:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2378:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2420:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2435:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2451:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2456:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2447:3:1"},"nodeType":"YulFunctionCall","src":"2447:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2443:3:1"},"nodeType":"YulFunctionCall","src":"2443:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2431:3:1"},"nodeType":"YulFunctionCall","src":"2431:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2413:6:1"},"nodeType":"YulFunctionCall","src":"2413:51:1"},"nodeType":"YulExpressionStatement","src":"2413:51:1"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2337:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2348:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2359:4:1","type":""}],"src":"2267:203:1"},{"body":{"nodeType":"YulBlock","src":"2649:173:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2666:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2677:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2659:6:1"},"nodeType":"YulFunctionCall","src":"2659:21:1"},"nodeType":"YulExpressionStatement","src":"2659:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2696:3:1"},"nodeType":"YulFunctionCall","src":"2696:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"2716:2:1","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2689:6:1"},"nodeType":"YulFunctionCall","src":"2689:30:1"},"nodeType":"YulExpressionStatement","src":"2689:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2739:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2750:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2735:3:1"},"nodeType":"YulFunctionCall","src":"2735:18:1"},{"hexValue":"4e6f7420616c6c6f77656420746f20627579206e6f772e","kind":"string","nodeType":"YulLiteral","src":"2755:25:1","type":"","value":"Not allowed to buy now."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2728:6:1"},"nodeType":"YulFunctionCall","src":"2728:53:1"},"nodeType":"YulExpressionStatement","src":"2728:53:1"},{"nodeType":"YulAssignment","src":"2790:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2802:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2813:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2798:3:1"},"nodeType":"YulFunctionCall","src":"2798:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2790:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2626:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2640:4:1","type":""}],"src":"2475:347:1"},{"body":{"nodeType":"YulBlock","src":"2859:95:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2876:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2883:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2888:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2879:3:1"},"nodeType":"YulFunctionCall","src":"2879:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2869:6:1"},"nodeType":"YulFunctionCall","src":"2869:31:1"},"nodeType":"YulExpressionStatement","src":"2869:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2916:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2919:4:1","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2909:6:1"},"nodeType":"YulFunctionCall","src":"2909:15:1"},"nodeType":"YulExpressionStatement","src":"2909:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2940:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2943:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2933:6:1"},"nodeType":"YulFunctionCall","src":"2933:15:1"},"nodeType":"YulExpressionStatement","src":"2933:15:1"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2827:127:1"},{"body":{"nodeType":"YulBlock","src":"3007:77:1","statements":[{"nodeType":"YulAssignment","src":"3017:16:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3028:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"3031:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3024:3:1"},"nodeType":"YulFunctionCall","src":"3024:9:1"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3017:3:1"}]},{"body":{"nodeType":"YulBlock","src":"3056:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3058:16:1"},"nodeType":"YulFunctionCall","src":"3058:18:1"},"nodeType":"YulExpressionStatement","src":"3058:18:1"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3048:1:1"},{"name":"sum","nodeType":"YulIdentifier","src":"3051:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3045:2:1"},"nodeType":"YulFunctionCall","src":"3045:10:1"},"nodeType":"YulIf","src":"3042:36:1"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2990:1:1","type":""},{"name":"y","nodeType":"YulTypedName","src":"2993:1:1","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2999:3:1","type":""}],"src":"2959:125:1"},{"body":{"nodeType":"YulBlock","src":"3263:251:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3280:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3291:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3273:6:1"},"nodeType":"YulFunctionCall","src":"3273:21:1"},"nodeType":"YulExpressionStatement","src":"3273:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3325:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3310:3:1"},"nodeType":"YulFunctionCall","src":"3310:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"3330:2:1","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3303:6:1"},"nodeType":"YulFunctionCall","src":"3303:30:1"},"nodeType":"YulExpressionStatement","src":"3303:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3353:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3364:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3349:3:1"},"nodeType":"YulFunctionCall","src":"3349:18:1"},{"hexValue":"416d6f756e7420697320616c6c6f77656420302e30312065746820746f203130","kind":"string","nodeType":"YulLiteral","src":"3369:34:1","type":"","value":"Amount is allowed 0.01 eth to 10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3342:6:1"},"nodeType":"YulFunctionCall","src":"3342:62:1"},"nodeType":"YulExpressionStatement","src":"3342:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3435:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3420:3:1"},"nodeType":"YulFunctionCall","src":"3420:18:1"},{"hexValue":"2065746820666f72206f6e6c79206c697374656420616464726573732e","kind":"string","nodeType":"YulLiteral","src":"3440:31:1","type":"","value":" eth for only listed address."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:1"},"nodeType":"YulFunctionCall","src":"3413:59:1"},"nodeType":"YulExpressionStatement","src":"3413:59:1"},{"nodeType":"YulAssignment","src":"3481:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3493:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3504:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3489:3:1"},"nodeType":"YulFunctionCall","src":"3489:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3481:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3240:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3254:4:1","type":""}],"src":"3089:425:1"},{"body":{"nodeType":"YulBlock","src":"3693:172:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3710:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3721:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3703:6:1"},"nodeType":"YulFunctionCall","src":"3703:21:1"},"nodeType":"YulExpressionStatement","src":"3703:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3744:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3755:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3740:3:1"},"nodeType":"YulFunctionCall","src":"3740:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"3760:2:1","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3733:6:1"},"nodeType":"YulFunctionCall","src":"3733:30:1"},"nodeType":"YulExpressionStatement","src":"3733:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3783:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3794:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3779:3:1"},"nodeType":"YulFunctionCall","src":"3779:18:1"},{"hexValue":"43616e6e6f7420627579207468697320616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"3799:24:1","type":"","value":"Cannot buy this amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3772:6:1"},"nodeType":"YulFunctionCall","src":"3772:52:1"},"nodeType":"YulExpressionStatement","src":"3772:52:1"},{"nodeType":"YulAssignment","src":"3833:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3845:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3856:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3841:3:1"},"nodeType":"YulFunctionCall","src":"3841:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3833:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_f79de05fb6abf551b5172d1c164f6a040a23dc262ef976fac7601d71815718ea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3670:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3684:4:1","type":""}],"src":"3519:346:1"},{"body":{"nodeType":"YulBlock","src":"4061:14:1","statements":[{"nodeType":"YulAssignment","src":"4063:10:1","value":{"name":"pos","nodeType":"YulIdentifier","src":"4070:3:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4063:3:1"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4045:3:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4053:3:1","type":""}],"src":"3870:205:1"},{"body":{"nodeType":"YulBlock","src":"4254:170:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4271:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4282:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4264:6:1"},"nodeType":"YulFunctionCall","src":"4264:21:1"},"nodeType":"YulExpressionStatement","src":"4264:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4305:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4316:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4301:3:1"},"nodeType":"YulFunctionCall","src":"4301:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"4321:2:1","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4294:6:1"},"nodeType":"YulFunctionCall","src":"4294:30:1"},"nodeType":"YulExpressionStatement","src":"4294:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4344:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4355:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4340:3:1"},"nodeType":"YulFunctionCall","src":"4340:18:1"},{"hexValue":"4661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"4360:22:1","type":"","value":"Failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4333:6:1"},"nodeType":"YulFunctionCall","src":"4333:50:1"},"nodeType":"YulExpressionStatement","src":"4333:50:1"},{"nodeType":"YulAssignment","src":"4392:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4404:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4415:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4400:3:1"},"nodeType":"YulFunctionCall","src":"4400:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4392:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4231:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4245:4:1","type":""}],"src":"4080:344:1"},{"body":{"nodeType":"YulBlock","src":"4603:182:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4620:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4631:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4613:6:1"},"nodeType":"YulFunctionCall","src":"4613:21:1"},"nodeType":"YulExpressionStatement","src":"4613:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4654:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4665:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4650:3:1"},"nodeType":"YulFunctionCall","src":"4650:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"4670:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4643:6:1"},"nodeType":"YulFunctionCall","src":"4643:30:1"},"nodeType":"YulExpressionStatement","src":"4643:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4693:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4704:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4689:3:1"},"nodeType":"YulFunctionCall","src":"4689:18:1"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4709:34:1","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4682:6:1"},"nodeType":"YulFunctionCall","src":"4682:62:1"},"nodeType":"YulExpressionStatement","src":"4682:62:1"},{"nodeType":"YulAssignment","src":"4753:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:1"},"nodeType":"YulFunctionCall","src":"4761:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4753:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4580:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4594:4:1","type":""}],"src":"4429:356:1"},{"body":{"nodeType":"YulBlock","src":"4919:145:1","statements":[{"nodeType":"YulAssignment","src":"4929:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4941:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4952:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:1"},"nodeType":"YulFunctionCall","src":"4937:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4929:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4971:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4986:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5002:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5007:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4998:3:1"},"nodeType":"YulFunctionCall","src":"4998:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"5011:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4994:3:1"},"nodeType":"YulFunctionCall","src":"4994:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4982:3:1"},"nodeType":"YulFunctionCall","src":"4982:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4964:6:1"},"nodeType":"YulFunctionCall","src":"4964:51:1"},"nodeType":"YulExpressionStatement","src":"4964:51:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5035:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5046:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:1"},"nodeType":"YulFunctionCall","src":"5031:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"5051:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5024:6:1"},"nodeType":"YulFunctionCall","src":"5024:34:1"},"nodeType":"YulExpressionStatement","src":"5024:34:1"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4880:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4891:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4899:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4910:4:1","type":""}],"src":"4790:274:1"},{"body":{"nodeType":"YulBlock","src":"5147:199:1","statements":[{"body":{"nodeType":"YulBlock","src":"5193:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5202:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5205:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5195:6:1"},"nodeType":"YulFunctionCall","src":"5195:12:1"},"nodeType":"YulExpressionStatement","src":"5195:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5168:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"5177:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5164:3:1"},"nodeType":"YulFunctionCall","src":"5164:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"5189:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5160:3:1"},"nodeType":"YulFunctionCall","src":"5160:32:1"},"nodeType":"YulIf","src":"5157:52:1"},{"nodeType":"YulVariableDeclaration","src":"5218:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5237:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5231:5:1"},"nodeType":"YulFunctionCall","src":"5231:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5222:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"5300:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5309:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5312:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5302:6:1"},"nodeType":"YulFunctionCall","src":"5302:12:1"},"nodeType":"YulExpressionStatement","src":"5302:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5269:5:1"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5290:5:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5283:6:1"},"nodeType":"YulFunctionCall","src":"5283:13:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5276:6:1"},"nodeType":"YulFunctionCall","src":"5276:21:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5266:2:1"},"nodeType":"YulFunctionCall","src":"5266:32:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5259:6:1"},"nodeType":"YulFunctionCall","src":"5259:40:1"},"nodeType":"YulIf","src":"5256:60:1"},{"nodeType":"YulAssignment","src":"5325:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"5335:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5325:6:1"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5113:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5124:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5136:6:1","type":""}],"src":"5069:277:1"},{"body":{"nodeType":"YulBlock","src":"5383:95:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5400:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5407:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5412:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5403:3:1"},"nodeType":"YulFunctionCall","src":"5403:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5393:6:1"},"nodeType":"YulFunctionCall","src":"5393:31:1"},"nodeType":"YulExpressionStatement","src":"5393:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5440:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5443:4:1","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5433:6:1"},"nodeType":"YulFunctionCall","src":"5433:15:1"},"nodeType":"YulExpressionStatement","src":"5433:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5464:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5467:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5457:6:1"},"nodeType":"YulFunctionCall","src":"5457:15:1"},"nodeType":"YulExpressionStatement","src":"5457:15:1"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5351:127:1"},{"body":{"nodeType":"YulBlock","src":"5530:88:1","statements":[{"body":{"nodeType":"YulBlock","src":"5561:22:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5563:16:1"},"nodeType":"YulFunctionCall","src":"5563:18:1"},"nodeType":"YulExpressionStatement","src":"5563:18:1"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5546:5:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5557:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5553:3:1"},"nodeType":"YulFunctionCall","src":"5553:6:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5543:2:1"},"nodeType":"YulFunctionCall","src":"5543:17:1"},"nodeType":"YulIf","src":"5540:43:1"},{"nodeType":"YulAssignment","src":"5592:20:1","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5603:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"5610:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5599:3:1"},"nodeType":"YulFunctionCall","src":"5599:13:1"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5592:3:1"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5512:5:1","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5522:3:1","type":""}],"src":"5483:135:1"},{"body":{"nodeType":"YulBlock","src":"5797:167:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5825:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5807:6:1"},"nodeType":"YulFunctionCall","src":"5807:21:1"},"nodeType":"YulExpressionStatement","src":"5807:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5848:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5859:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5844:3:1"},"nodeType":"YulFunctionCall","src":"5844:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"5864:2:1","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5837:6:1"},"nodeType":"YulFunctionCall","src":"5837:30:1"},"nodeType":"YulExpressionStatement","src":"5837:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5887:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5898:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5883:3:1"},"nodeType":"YulFunctionCall","src":"5883:18:1"},{"hexValue":"506c656173652062757920746f6b656e2e","kind":"string","nodeType":"YulLiteral","src":"5903:19:1","type":"","value":"Please buy token."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5876:6:1"},"nodeType":"YulFunctionCall","src":"5876:47:1"},"nodeType":"YulExpressionStatement","src":"5876:47:1"},{"nodeType":"YulAssignment","src":"5932:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5944:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5955:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5940:3:1"},"nodeType":"YulFunctionCall","src":"5940:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5932:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5774:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5788:4:1","type":""}],"src":"5623:341:1"},{"body":{"nodeType":"YulBlock","src":"6015:171:1","statements":[{"body":{"nodeType":"YulBlock","src":"6046:111:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6067:1:1","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6074:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6079:10:1","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6070:3:1"},"nodeType":"YulFunctionCall","src":"6070:20:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6060:6:1"},"nodeType":"YulFunctionCall","src":"6060:31:1"},"nodeType":"YulExpressionStatement","src":"6060:31:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6111:1:1","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6114:4:1","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6104:6:1"},"nodeType":"YulFunctionCall","src":"6104:15:1"},"nodeType":"YulExpressionStatement","src":"6104:15:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6139:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6142:4:1","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6132:6:1"},"nodeType":"YulFunctionCall","src":"6132:15:1"},"nodeType":"YulExpressionStatement","src":"6132:15:1"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6035:1:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6028:6:1"},"nodeType":"YulFunctionCall","src":"6028:9:1"},"nodeType":"YulIf","src":"6025:132:1"},{"nodeType":"YulAssignment","src":"6166:14:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6175:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"6178:1:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6171:3:1"},"nodeType":"YulFunctionCall","src":"6171:9:1"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6166:1:1"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6000:1:1","type":""},{"name":"y","nodeType":"YulTypedName","src":"6003:1:1","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6009:1:1","type":""}],"src":"5969:217:1"},{"body":{"nodeType":"YulBlock","src":"6365:228:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6382:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6393:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6375:6:1"},"nodeType":"YulFunctionCall","src":"6375:21:1"},"nodeType":"YulExpressionStatement","src":"6375:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6416:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6427:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6412:3:1"},"nodeType":"YulFunctionCall","src":"6412:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:1","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6405:6:1"},"nodeType":"YulFunctionCall","src":"6405:30:1"},"nodeType":"YulExpressionStatement","src":"6405:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6455:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6466:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6451:3:1"},"nodeType":"YulFunctionCall","src":"6451:18:1"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"6471:34:1","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6444:6:1"},"nodeType":"YulFunctionCall","src":"6444:62:1"},"nodeType":"YulExpressionStatement","src":"6444:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6526:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6537:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6522:3:1"},"nodeType":"YulFunctionCall","src":"6522:18:1"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"6542:8:1","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6515:6:1"},"nodeType":"YulFunctionCall","src":"6515:36:1"},"nodeType":"YulExpressionStatement","src":"6515:36:1"},{"nodeType":"YulAssignment","src":"6560:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6583:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:1"},"nodeType":"YulFunctionCall","src":"6568:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6560:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6342:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6356:4:1","type":""}],"src":"6191:402:1"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_17d67e55e25f57674b2d371b54180938132d879cd196f78ebd4f3efe2c739261__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not allowed to buy now.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_16c109910cafd6ff652c7cb9875c0f7cd5443a276afa59c2b386970293b5c3eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Amount is allowed 0.01 eth to 10\")\n        mstore(add(headStart, 96), \" eth for only listed address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f79de05fb6abf551b5172d1c164f6a040a23dc262ef976fac7601d71815718ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot buy this amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_a877888a7961bab57e32ecce77d2df09f5f6ab109b3e07e97e7958a5ff7c4908__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Please buy token.\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061012e5760003560e01c80638da5cb5b116100ab578063dde070e81161006f578063dde070e8146102f1578063de8e81ed14610327578063e36b0b3714610347578063e7a6ac551461035c578063f2fde38b14610372578063fe96973a146103925761013d565b80638da5cb5b1461028957806398d5fdca146102b1578063a6f2ae3a1461013d578063afd18916146102c6578063c8aad250146102db5761013d565b8063715018a6116100f2578063715018a6146101f157806378442876146102065780637b7902dd1461021c5780637f6497831461023c5780638092be4a1461025c5761013d565b80630660f1e8146101455780630e3ab61d146101855780631698755f146101a557806334ad1f32146101c55780636ec012e7146101db5761013d565b3661013d5761013b6103b2565b005b61013b6103b2565b34801561015157600080fd5b50610172610160366004610c39565b600d6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561019157600080fd5b5061013b6101a0366004610c54565b610680565b3480156101b157600080fd5b5061013b6101c0366004610c6d565b6106e7565b3480156101d157600080fd5b50610172600b5481565b3480156101e757600080fd5b5061017260015481565b3480156101fd57600080fd5b5061013b6107a8565b34801561021257600080fd5b5061017260085481565b34801561022857600080fd5b50610172610237366004610c54565b61081c565b34801561024857600080fd5b5061013b610257366004610cad565b61087f565b34801561026857600080fd5b50610172610277366004610c39565b600e6020526000908152604090205481565b34801561029557600080fd5b506000546040516001600160a01b03909116815260200161017c565b3480156102bd57600080fd5b50600754610172565b3480156102d257600080fd5b5061013b610915565b3480156102e757600080fd5b5061017260095481565b3480156102fd57600080fd5b5061017261030c366004610c39565b6001600160a01b03166000908152600d602052604090205490565b34801561033357600080fd5b5061013b610342366004610c54565b6109f3565b34801561035357600080fd5b5061013b610a22565b34801561036857600080fd5b50610172600a5481565b34801561037e57600080fd5b5061013b61038d366004610c39565b610a53565b34801561039e57600080fd5b5061013b6103ad366004610c54565b610a86565b60006001541180156103c657506003600154105b6104175760405162461bcd60e51b815260206004820152601760248201527f4e6f7420616c6c6f77656420746f20627579206e6f772e00000000000000000060448201526064015b60405180910390fd5b60015460010361054e57336000908152600e602052604090205461043c903490610d88565b600554101580156104695750600454336000908152600e6020526040902054610466903490610d88565b10155b801561048457503360009081526002602052604090205460ff165b6104f65760405162461bcd60e51b815260206004820152603d60248201527f416d6f756e7420697320616c6c6f77656420302e30312065746820746f20313060448201527f2065746820666f72206f6e6c79206c697374656420616464726573732e000000606482015260840161040e565b346008546105049190610d88565b600354101561054e5760405162461bcd60e51b815260206004820152601660248201527510d85b9b9bdd08189d5e481d1a1a5cc8185b5bdd5b9d60521b604482015260640161040e565b60006105593461081c565b90506001546001036105825734600860008282546105779190610d88565b9091555061059a9050565b34600a60008282546105949190610d88565b90915550505b600080546040516001600160a01b039091169034908381818185875af1925050503d80600081146105e7576040519150601f19603f3d011682016040523d82523d6000602084013e6105ec565b606091505b50509050806106345760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161040e565b336000908152600d602052604081208054849290610653908490610d88565b9091555050336000908152600e602052604081208054349290610677908490610d88565b90915550505050565b6000546001600160a01b031633146106aa5760405162461bcd60e51b815260040161040e90610d9b565b60018181558190036106cb576009546003546106c591610b4a565b60075550565b6001546002036106e457600b546006546106c591610b4a565b50565b6000546001600160a01b031633146107115760405162461bcd60e51b815260040161040e90610d9b565b816001600160a01b031663a9059cbb6107326000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190610dd0565b505050565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260040161040e90610d9b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000600154600214801561083e575060065482600a5461083c9190610d88565b115b1561086b5761085d600b5483600a546108579190610d88565b90610b4a565b600781905561086b906109f3565b600754610879908390610b4a565b92915050565b6000546001600160a01b031633146108a95760405162461bcd60e51b815260040161040e90610d9b565b60005b8151811015610911576001600260008484815181106108cd576108cd610df2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061090981610e08565b9150506108ac565b5050565b33600052600d602052600c54336000818152600d60205260409081902054905163a9059cbb60e01b8152600481019290925260248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a49190610dd0565b50336000818152600d602090815260408083208390558051938452908301919091527f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4910160405180910390a1565b6000546001600160a01b03163314610a1d5760405162461bcd60e51b815260040161040e90610d9b565b600755565b6000546001600160a01b03163314610a4c5760405162461bcd60e51b815260040161040e90610d9b565b6003600155565b6000546001600160a01b03163314610a7d5760405162461bcd60e51b815260040161040e90610d9b565b6106e481610b5d565b6000546001600160a01b03163314610ab05760405162461bcd60e51b815260040161040e90610d9b565b600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114610afd576040519150601f19603f3d011682016040523d82523d6000602084013e610b02565b606091505b50509050806109115760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161040e565b6000610b568284610e21565b9392505050565b6001600160a01b038116610bc25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610c3457600080fd5b919050565b600060208284031215610c4b57600080fd5b610b5682610c1d565b600060208284031215610c6657600080fd5b5035919050565b60008060408385031215610c8057600080fd5b610c8983610c1d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610cc057600080fd5b823567ffffffffffffffff80821115610cd857600080fd5b818501915085601f830112610cec57600080fd5b813581811115610cfe57610cfe610c97565b8060051b604051601f19603f83011681018181108582111715610d2357610d23610c97565b604052918252848201925083810185019188831115610d4157600080fd5b938501935b82851015610d6657610d5785610c1d565b84529385019392850192610d46565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561087957610879610d72565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610de257600080fd5b81518015158114610b5657600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610e1a57610e1a610d72565b5060010190565b600082610e3e57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220cf6222ee974e3efc9e054063d7f70375152f8b08e27b588fe7993d477004879064736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDDE070E8 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDDE070E8 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDE8E81ED EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xE7A6AC55 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xFE96973A EQ PUSH2 0x392 JUMPI PUSH2 0x13D JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xAFD18916 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xC8AAD250 EQ PUSH2 0x2DB JUMPI PUSH2 0x13D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x78442876 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x7B7902DD EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8092BE4A EQ PUSH2 0x25C JUMPI PUSH2 0x13D JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE3AB61D EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x1698755F EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x34AD1F32 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6EC012E7 EQ PUSH2 0x1DB JUMPI PUSH2 0x13D JUMP JUMPDEST CALLDATASIZE PUSH2 0x13D JUMPI PUSH2 0x13B PUSH2 0x3B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x7A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x915 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0xA22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD GT DUP1 ISZERO PUSH2 0x3C6 JUMPI POP PUSH1 0x3 PUSH1 0x1 SLOAD LT JUMPDEST PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616C6C6F77656420746F20627579206E6F772E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x54E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x43C SWAP1 CALLVALUE SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x5 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI POP PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x466 SWAP1 CALLVALUE SWAP1 PUSH2 0xD88 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420697320616C6C6F77656420302E30312065746820746F203130 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2065746820666F72206F6E6C79206C697374656420616464726573732E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10D85B9B9BDD08189D5E481D1A1A5CC8185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 CALLVALUE PUSH2 0x81C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD PUSH1 0x1 SUB PUSH2 0x582 JUMPI CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x59A SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x653 SWAP1 DUP5 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x677 SWAP1 DUP5 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SSTORE DUP2 SWAP1 SUB PUSH2 0x6CB JUMPI PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x6C5 SWAP2 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SUB PUSH2 0x6E4 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH2 0x6C5 SWAP2 PUSH2 0xB4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x732 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 EQ DUP1 ISZERO PUSH2 0x83E JUMPI POP PUSH1 0x6 SLOAD DUP3 PUSH1 0xA SLOAD PUSH2 0x83C SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x86B JUMPI PUSH2 0x85D PUSH1 0xB SLOAD DUP4 PUSH1 0xA SLOAD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP1 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x86B SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x879 SWAP1 DUP4 SWAP1 PUSH2 0xB4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x909 DUP2 PUSH2 0xE08 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8AC JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xC SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x6E4 DUP2 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB56 DUP3 DUP5 PUSH2 0xE21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB56 DUP3 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC89 DUP4 PUSH2 0xC1D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCFE JUMPI PUSH2 0xCFE PUSH2 0xC97 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD23 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xD41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xD66 JUMPI PUSH2 0xD57 DUP6 PUSH2 0xC1D JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xD46 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x879 JUMPI PUSH2 0x879 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE1A JUMPI PUSH2 0xE1A PUSH2 0xD72 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH3 0x22EE97 0x4E RETURNDATACOPY 0xFC SWAP15 SDIV BLOCKHASH PUSH4 0xD7F70375 ISZERO 0x2F DUP12 ADDMOD 0xE2 PUSH28 0x588FE7993D477004879064736F6C6343000812003300000000000000 ","sourceMap":"10118:4641:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14683:5;:3;:5::i;:::-;10118:4641;;14743:5;:3;:5::i;10929:46::-;;;;;;;;;;-1:-1:-1;10929:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:1;;;517:2;502:18;10929:46:0;;;;;;;;11616:320;;;;;;;;;;-1:-1:-1;11616:320:0;;;;;:::i;:::-;;:::i;9726:167::-;;;;;;;;;;-1:-1:-1;9726:167:0;;;;;:::i;:::-;;:::i;10839:51::-;;;;;;;;;;;;;;;;9469:25;;;;;;;;;;;;;;;;8830:140;;;;;;;;;;;;;:::i;10687:40::-;;;;;;;;;;;;;;;;12336:494;;;;;;;;;;-1:-1:-1;12336:494:0;;;;;:::i;:::-;;:::i;11944:226::-;;;;;;;;;;-1:-1:-1;11944:226:0;;;;;:::i;:::-;;:::i;10982:48::-;;;;;;;;;;-1:-1:-1;10982:48:0;;;;;:::i;:::-;;;;;;;;;;;;;;8616:79;;;;;;;;;;-1:-1:-1;8654:7:0;8681:6;8616:79;;-1:-1:-1;;;;;8681:6:0;;;2413:51:1;;2401:2;2386:18;8616:79:0;2267:203:1;14544:93:0;;;;;;;;;;-1:-1:-1;14619:10:0;;14544:93;;14074:294;;;;;;;;;;;;;:::i;10734:52::-;;;;;;;;;;;;;;;;14376:160;;;;;;;;;;-1:-1:-1;14376:160:0;;;;;:::i;:::-;-1:-1:-1;;;;;14504:24:0;14458:19;14504:24;;;:11;:24;;;;;;;14376:160;11394:91;;;;;;;;;;-1:-1:-1;11394:91:0;;;;;:::i;:::-;;:::i;9543:71::-;;;;;;;;;;;;;:::i;10793:39::-;;;;;;;;;;;;;;;;8978:109;;;;;;;;;;-1:-1:-1;8978:109:0;;;;;:::i;:::-;;:::i;9944:167::-;;;;;;;;;;-1:-1:-1;9944:167:0;;;;;:::i;:::-;;:::i;13006:1060::-;13067:1;13055:9;;:13;:30;;;;;13084:1;13072:9;;:13;13055:30;13047:66;;;;-1:-1:-1;;;13047:66:0;;2677:2:1;13047:66:0;;;2659:21:1;2716:2;2696:18;;;2689:30;2755:25;2735:18;;;2728:53;2798:18;;13047:66:0;;;;;;;;;13128:9;;13141:1;13128:14;13124:516;;1332:10;13202:27;;;;:13;:27;;;;;;:39;;13232:9;;13202:39;:::i;:::-;13185:12;;:57;;:139;;;;-1:-1:-1;13312:12:0;;1332:10;13268:27;;;;:13;:27;;;;;;:39;;13298:9;;13268:39;:::i;:::-;13267:57;;13185:139;:190;;;;-1:-1:-1;13364:10:0;13349:26;;;;:14;:26;;;;;;;;13185:190;13159:313;;;;-1:-1:-1;;;13159:313:0;;3291:2:1;13159:313:0;;;3273:21:1;3330:2;3310:18;;;3303:30;3369:34;3349:18;;;3342:62;3440:31;3420:18;;;3413:59;3489:19;;13159:313:0;3089:425:1;13159:313:0;13560:9;13536:21;;:33;;;;:::i;:::-;13513:18;;:57;;13487:141;;;;-1:-1:-1;;;13487:141:0;;3721:2:1;13487:141:0;;;3703:21:1;3760:2;3740:18;;;3733:30;-1:-1:-1;;;3779:18:1;;;3772:52;3841:18;;13487:141:0;3519:346:1;13487:141:0;13652:14;13669:26;13685:9;13669:15;:26::i;:::-;13652:43;;13710:9;;13723:1;13710:14;13706:147;;13766:9;13741:21;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;13706:147:0;;-1:-1:-1;13706:147:0;;13832:9;13808:20;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;13706:147:0;13864:9;8681:6;;13879:34;;-1:-1:-1;;;;;8681:6:0;;;;13899:9;;13864;13879:34;13864:9;13879:34;13899:9;8681:6;13879:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13863:50;;;13932:4;13924:37;;;;-1:-1:-1;;;13924:37:0;;4282:2:1;13924:37:0;;;4264:21:1;4321:2;4301:18;;;4294:30;-1:-1:-1;;;4340:18:1;;;4333:50;4400:18;;13924:37:0;4080:344:1;13924:37:0;1332:10;13972:25;;;;:11;:25;;;;;:35;;14001:6;;13972:25;:35;;14001:6;;13972:35;:::i;:::-;;;;-1:-1:-1;;1332:10:0;14018:27;;;;:13;:27;;;;;:40;;14049:9;;14018:27;:40;;14049:9;;14018:40;:::i;:::-;;;;-1:-1:-1;;;;13006:1060:0:o;11616:320::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;11682:9:::1;:22:::0;;;11719:14;;;11715:214:::1;;11786:21;::::0;11763:18:::1;::::0;:45:::1;::::0;:22:::1;:45::i;:::-;11750:10;:58:::0;11616:320;:::o;11715:214::-:1;11830:9;;11843:1;11830:14:::0;11826:103:::1;;11896:20;::::0;11874:17:::1;::::0;:43:::1;::::0;:21:::1;:43::i;11826:103::-;11616:320:::0;:::o;9726:167::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;9846:12:::1;-1:-1:-1::0;;;;;9839:29:0::1;;9869:7;8654::::0;8681:6;-1:-1:-1;;;;;8681:6:0;;8616:79;9869:7:::1;9839:46;::::0;-1:-1:-1;;;;;;9839:46:0::1;::::0;;;;;;-1:-1:-1;;;;;4982:32:1;;;9839:46:0::1;::::0;::::1;4964:51:1::0;5031:18;;;5024:34;;;4937:18;;9839:46:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9726:167:::0;;:::o;8830:140::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;8929:1:::1;8913:6:::0;;8892:40:::1;::::0;-1:-1:-1;;;;;8913:6:0;;::::1;::::0;8892:40:::1;::::0;8929:1;;8892:40:::1;8960:1;8943:19:::0;;-1:-1:-1;;;;;;8943:19:0::1;::::0;;8830:140::o;12336:494::-;12413:14;12507:9;;12520:1;12507:14;:86;;;;;12576:17;;12562:10;12539:20;;:33;;;;:::i;:::-;12538:55;12507:86;12489:286;;;12633:93;12691:20;;12657:10;12634:20;;:33;;;;:::i;:::-;12633:39;;:93::i;:::-;12620:10;:106;;;12741:22;;:10;:22::i;:::-;12811:10;;12794:28;;12795:10;;12794:16;:28::i;:::-;12785:37;12336:494;-1:-1:-1;;12336:494:0:o;11944:226::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;12052:6:::1;12047:116;12068:14;:21;12064:1;:25;12047:116;;;12147:4;12111:14;:33;12126:14;12141:1;12126:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;12111:33:0::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;12111:33:0;:40;;-1:-1:-1;;12111:40:0::1;::::0;::::1;;::::0;;;::::1;::::0;;12091:3;::::1;::::0;::::1;:::i;:::-;;;;12047:116;;;;11944:226:::0;:::o;14074:294::-;1332:10;14157:1;14128:25;:11;:25;;14198:13;;14222:10;14198:13;14234:25;;;:11;:25;;;;;;;;14191:69;;-1:-1:-1;;;14191:69:0;;;;;4964:51:1;;;;5031:18;;;5024:34;-1:-1:-1;;;;;14198:13:0;;;;14191:30;;4937:18:1;;14191:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1332:10:0;14299:1;14271:25;;;:11;:25;;;;;;;;:29;;;14316:44;;4964:51:1;;;5031:18;;;5024:34;;;;14316:44:0;;4937:18:1;14316:44:0;;;;;;;14074:294::o;11394:91::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;11458:10:::1;:19:::0;11394:91::o;9543:71::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;9605:1:::1;9593:9;:13:::0;9543:71::o;8978:109::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;9051:28:::1;9070:8;9051:18;:28::i;9944:167::-:0;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;;;;;;:::i;:::-;10009:9:::1;8681:6:::0;;10024:31:::1;::::0;-1:-1:-1;;;;;8681:6:0;;;;10044;;10009:9;10024:31;10009:9;10024:31;10044:6;8681;10024:31:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10008:47;;;10074:4;10066:37;;;::::0;-1:-1:-1;;;10066:37:0;;4282:2:1;10066:37:0::1;::::0;::::1;4264:21:1::0;4321:2;4301:18;;;4294:30;-1:-1:-1;;;4340:18:1;;;4333:50;4400:18;;10066:37:0::1;4080:344:1::0;5202:98:0;5260:7;5287:5;5291:1;5287;:5;:::i;:::-;5280:12;5202:98;-1:-1:-1;;;5202:98:0:o;9095:266::-;-1:-1:-1;;;;;9183:22:0;;9161:110;;;;-1:-1:-1;;;9161:110:0;;6393:2:1;9161:110:0;;;6375:21:1;6432:2;6412:18;;;6405:30;6471:34;6451:18;;;6444:62;-1:-1:-1;;;6522:18:1;;;6515:36;6568:19;;9161:110:0;6191:402:1;9161:110:0;9308:6;;;9287:38;;-1:-1:-1;;;;;9287:38:0;;;;9308:6;;;9287:38;;;9336:6;:17;;-1:-1:-1;;;;;;9336:17:0;-1:-1:-1;;;;;9336:17:0;;;;;;;;;;9095:266::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:180::-;624:6;677:2;665:9;656:7;652:23;648:32;645:52;;;693:1;690;683:12;645:52;-1:-1:-1;716:23:1;;565:180;-1:-1:-1;565:180:1:o;750:254::-;818:6;826;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;918:29;937:9;918:29;:::i;:::-;908:39;994:2;979:18;;;;966:32;;-1:-1:-1;;;750:254:1:o;1009:127::-;1070:10;1065:3;1061:20;1058:1;1051:31;1101:4;1098:1;1091:15;1125:4;1122:1;1115:15;1141:1121;1225:6;1256:2;1299;1287:9;1278:7;1274:23;1270:32;1267:52;;;1315:1;1312;1305:12;1267:52;1355:9;1342:23;1384:18;1425:2;1417:6;1414:14;1411:34;;;1441:1;1438;1431:12;1411:34;1479:6;1468:9;1464:22;1454:32;;1524:7;1517:4;1513:2;1509:13;1505:27;1495:55;;1546:1;1543;1536:12;1495:55;1582:2;1569:16;1604:2;1600;1597:10;1594:36;;;1610:18;;:::i;:::-;1656:2;1653:1;1649:10;1688:2;1682:9;1751:2;1747:7;1742:2;1738;1734:11;1730:25;1722:6;1718:38;1806:6;1794:10;1791:22;1786:2;1774:10;1771:18;1768:46;1765:72;;;1817:18;;:::i;:::-;1853:2;1846:22;1903:18;;;1937:15;;;;-1:-1:-1;1979:11:1;;;1975:20;;;2007:19;;;2004:39;;;2039:1;2036;2029:12;2004:39;2063:11;;;;2083:148;2099:6;2094:3;2091:15;2083:148;;;2165:23;2184:3;2165:23;:::i;:::-;2153:36;;2116:12;;;;2209;;;;2083:148;;;2250:6;1141:1121;-1:-1:-1;;;;;;;;1141:1121:1:o;2827:127::-;2888:10;2883:3;2879:20;2876:1;2869:31;2919:4;2916:1;2909:15;2943:4;2940:1;2933:15;2959:125;3024:9;;;3045:10;;;3042:36;;;3058:18;;:::i;4429:356::-;4631:2;4613:21;;;4650:18;;;4643:30;4709:34;4704:2;4689:18;;4682:62;4776:2;4761:18;;4429:356::o;5069:277::-;5136:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:52;;;5205:1;5202;5195:12;5157:52;5237:9;5231:16;5290:5;5283:13;5276:21;5269:5;5266:32;5256:60;;5312:1;5309;5302:12;5351:127;5412:10;5407:3;5403:20;5400:1;5393:31;5443:4;5440:1;5433:15;5467:4;5464:1;5457:15;5483:135;5522:3;5543:17;;;5540:43;;5563:18;;:::i;:::-;-1:-1:-1;5610:1:1;5599:13;;5483:135::o;5969:217::-;6009:1;6035;6025:132;;6079:10;6074:3;6070:20;6067:1;6060:31;6114:4;6111:1;6104:15;6142:4;6139:1;6132:15;6025:132;-1:-1:-1;6171:9:1;;5969:217::o"},"gasEstimates":{"creation":{"codeDepositCost":"741000","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite","addToWhitelist(address[])":"infinite","buy()":"infinite","calcTokenAmount(uint256)":"infinite","claimETH(uint256)":"infinite","claimRewardToken()":"infinite","claimToken(address,uint256)":"infinite","getClaimAmount(address)":"2548","getPrice()":"2326","owner()":"2324","privateSaleAllocation()":"2395","privateSaleTotalSaled()":"2329","publicSaleAllocation()":"2374","publicSaleTotalSaled()":"2372","renounceOwnership()":"30188","resetPrice(uint256)":"24508","saleIndex()":"2396","startSale(uint256)":"53074","stopSale()":"24456","transferOwnership(address)":"30539","userDeposited(address)":"2619","userRewards(address)":"2532"}},"methodIdentifiers":{"addToWhitelist(address[])":"7f649783","buy()":"a6f2ae3a","calcTokenAmount(uint256)":"7b7902dd","claimETH(uint256)":"fe96973a","claimRewardToken()":"afd18916","claimToken(address,uint256)":"1698755f","getClaimAmount(address)":"dde070e8","getPrice()":"98d5fdca","owner()":"8da5cb5b","privateSaleAllocation()":"c8aad250","privateSaleTotalSaled()":"78442876","publicSaleAllocation()":"34ad1f32","publicSaleTotalSaled()":"e7a6ac55","renounceOwnership()":"715018a6","resetPrice(uint256)":"de8e81ed","saleIndex()":"6ec012e7","startSale(uint256)":"0e3ab61d","stopSale()":"e36b0b37","transferOwnership(address)":"f2fde38b","userDeposited(address)":"8092be4a","userRewards(address)":"0660f1e8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addressesToAdd\",\"type\":\"address[]\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"calcTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getClaimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTotalSaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSaleAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSaleTotalSaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"resetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleIndex\",\"type\":\"uint256\"}],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"IDO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint public saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5035000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 4940000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n    }\\r\\n\\r\\n    // -------- Owner Functions ----------\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addToWhitelist(\\r\\n        address[] memory addressesToAdd\\r\\n    ) external onlyOwner {\\r\\n        for (uint i = 0; i < addressesToAdd.length; i++) {\\r\\n            whitelistCheck[addressesToAdd[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // ---------- owner functions end ----------------\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (\\r\\n            saleIndex == 2 &&\\r\\n            (publicSaleTotalSaled + _ethAmount) > publicSaleHardcap\\r\\n        ) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev buy token from eth\\r\\n     * @dev on private sale 0.01 - 10 eth for only whitelist addresses\\r\\n     * @dev on private sale Check for hardcap\\r\\n     */\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n            require(\\r\\n                privateSaleHardcap >= (privateSaleTotalSaled + msg.value),\\r\\n                \\\"Cannot buy this amount\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd813197483671920c4137d834a87f4ed083ba47c1c8b19d7806d37f883facbd0\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":418,"contract":"contracts/IDO.sol:IDO","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":529,"contract":"contracts/IDO.sol:IDO","label":"saleIndex","offset":0,"slot":"1","type":"t_uint256"},{"astId":603,"contract":"contracts/IDO.sol:IDO","label":"whitelistCheck","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"},{"astId":608,"contract":"contracts/IDO.sol:IDO","label":"privateSaleHardcap","offset":0,"slot":"3","type":"t_uint256"},{"astId":611,"contract":"contracts/IDO.sol:IDO","label":"minETHAmount","offset":0,"slot":"4","type":"t_uint256"},{"astId":614,"contract":"contracts/IDO.sol:IDO","label":"maxETHAmount","offset":0,"slot":"5","type":"t_uint256"},{"astId":619,"contract":"contracts/IDO.sol:IDO","label":"publicSaleHardcap","offset":0,"slot":"6","type":"t_uint256"},{"astId":621,"contract":"contracts/IDO.sol:IDO","label":"tokenPrice","offset":0,"slot":"7","type":"t_uint256"},{"astId":624,"contract":"contracts/IDO.sol:IDO","label":"privateSaleTotalSaled","offset":0,"slot":"8","type":"t_uint256"},{"astId":629,"contract":"contracts/IDO.sol:IDO","label":"privateSaleAllocation","offset":0,"slot":"9","type":"t_uint256"},{"astId":632,"contract":"contracts/IDO.sol:IDO","label":"publicSaleTotalSaled","offset":0,"slot":"10","type":"t_uint256"},{"astId":637,"contract":"contracts/IDO.sol:IDO","label":"publicSaleAllocation","offset":0,"slot":"11","type":"t_uint256"},{"astId":639,"contract":"contracts/IDO.sol:IDO","label":"rewardAddress","offset":0,"slot":"12","type":"t_address"},{"astId":643,"contract":"contracts/IDO.sol:IDO","label":"userRewards","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"},{"astId":647,"contract":"contracts/IDO.sol:IDO","label":"userDeposited","offset":0,"slot":"14","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint public saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5035000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 4940000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n    }\\r\\n\\r\\n    // -------- Owner Functions ----------\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addToWhitelist(\\r\\n        address[] memory addressesToAdd\\r\\n    ) external onlyOwner {\\r\\n        for (uint i = 0; i < addressesToAdd.length; i++) {\\r\\n            whitelistCheck[addressesToAdd[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // ---------- owner functions end ----------------\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (\\r\\n            saleIndex == 2 &&\\r\\n            (publicSaleTotalSaled + _ethAmount) > publicSaleHardcap\\r\\n        ) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev buy token from eth\\r\\n     * @dev on private sale 0.01 - 10 eth for only whitelist addresses\\r\\n     * @dev on private sale Check for hardcap\\r\\n     */\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n            require(\\r\\n                privateSaleHardcap >= (privateSaleTotalSaled + msg.value),\\r\\n                \\\"Cannot buy this amount\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd813197483671920c4137d834a87f4ed083ba47c1c8b19d7806d37f883facbd0\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"Ownable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_445":{"entryPoint":null,"id":445,"parameterSlots":0,"returnSlots":0},"@_msgSender_93":{"entryPoint":null,"id":93,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea264697066735822122086a626b6a92c7c7b028b39140a0cebdade04aba078771494f0a44664ee74e47864736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B7 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xA6 0x26 0xB6 0xA9 0x2C PUSH29 0x7B028B39140A0CEBDADE04ABA078771494F0A44664EE74E47864736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"8272:1092:0:-:0;;;8455:153;;;;;;;;;-1:-1:-1;8480:17:0;8523:18;;-1:-1:-1;;;;;;8523:18:0;1332:10;8523:18;;;;;8557:43;;1332:10;;;;8557:43;;8480:17;;8557:43;8469:139;8272:1092;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_93":{"entryPoint":null,"id":93,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_523":{"entryPoint":401,"id":523,"parameterSlots":1,"returnSlots":0},"@owner_453":{"entryPoint":null,"id":453,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_486":{"entryPoint":130,"id":486,"parameterSlots":0,"returnSlots":0},"@transferOwnership_498":{"entryPoint":299,"id":498,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1278:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:1","statements":[{"nodeType":"YulAssignment","src":"125:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:1"},"nodeType":"YulFunctionCall","src":"133:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:1"},"nodeType":"YulFunctionCall","src":"194:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:1"},"nodeType":"YulFunctionCall","src":"190:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:1"},"nodeType":"YulFunctionCall","src":"178:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:1"},"nodeType":"YulFunctionCall","src":"160:51:1"},"nodeType":"YulExpressionStatement","src":"160:51:1"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:1","type":""}],"src":"14:203:1"},{"body":{"nodeType":"YulBlock","src":"292:216:1","statements":[{"body":{"nodeType":"YulBlock","src":"338:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"347:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"350:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"340:6:1"},"nodeType":"YulFunctionCall","src":"340:12:1"},"nodeType":"YulExpressionStatement","src":"340:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"313:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"309:3:1"},"nodeType":"YulFunctionCall","src":"309:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"334:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"305:3:1"},"nodeType":"YulFunctionCall","src":"305:32:1"},"nodeType":"YulIf","src":"302:52:1"},{"nodeType":"YulVariableDeclaration","src":"363:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"389:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"376:12:1"},"nodeType":"YulFunctionCall","src":"376:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"367:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"462:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"471:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"474:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"464:6:1"},"nodeType":"YulFunctionCall","src":"464:12:1"},"nodeType":"YulExpressionStatement","src":"464:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"421:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"432:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"447:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"443:3:1"},"nodeType":"YulFunctionCall","src":"443:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"456:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"439:3:1"},"nodeType":"YulFunctionCall","src":"439:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:1"},"nodeType":"YulFunctionCall","src":"428:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"418:2:1"},"nodeType":"YulFunctionCall","src":"418:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"411:6:1"},"nodeType":"YulFunctionCall","src":"411:50:1"},"nodeType":"YulIf","src":"408:70:1"},{"nodeType":"YulAssignment","src":"487:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"497:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"487:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"258:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"269:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"281:6:1","type":""}],"src":"222:286:1"},{"body":{"nodeType":"YulBlock","src":"687:182:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"697:6:1"},"nodeType":"YulFunctionCall","src":"697:21:1"},"nodeType":"YulExpressionStatement","src":"697:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"738:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"749:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"734:3:1"},"nodeType":"YulFunctionCall","src":"734:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:1"},"nodeType":"YulFunctionCall","src":"727:30:1"},"nodeType":"YulExpressionStatement","src":"727:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"777:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:1"},"nodeType":"YulFunctionCall","src":"773:18:1"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"793:34:1","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"766:6:1"},"nodeType":"YulFunctionCall","src":"766:62:1"},"nodeType":"YulExpressionStatement","src":"766:62:1"},{"nodeType":"YulAssignment","src":"837:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"849:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"860:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"845:3:1"},"nodeType":"YulFunctionCall","src":"845:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"837:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"678:4:1","type":""}],"src":"513:356:1"},{"body":{"nodeType":"YulBlock","src":"1048:228:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1065:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1076:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1058:6:1"},"nodeType":"YulFunctionCall","src":"1058:21:1"},"nodeType":"YulExpressionStatement","src":"1058:21:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1099:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:1"},"nodeType":"YulFunctionCall","src":"1095:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"1115:2:1","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1088:6:1"},"nodeType":"YulFunctionCall","src":"1088:30:1"},"nodeType":"YulExpressionStatement","src":"1088:30:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1149:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:1"},"nodeType":"YulFunctionCall","src":"1134:18:1"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1154:34:1","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:1"},"nodeType":"YulFunctionCall","src":"1127:62:1"},"nodeType":"YulExpressionStatement","src":"1127:62:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1209:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1220:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1205:3:1"},"nodeType":"YulFunctionCall","src":"1205:18:1"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1225:8:1","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1198:6:1"},"nodeType":"YulFunctionCall","src":"1198:36:1"},"nodeType":"YulExpressionStatement","src":"1198:36:1"},{"nodeType":"YulAssignment","src":"1243:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1266:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:1"},"nodeType":"YulFunctionCall","src":"1251:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1243:4:1"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1025:9:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1039:4:1","type":""}],"src":"874:402:1"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea264697066735822122086a626b6a92c7c7b028b39140a0cebdade04aba078771494f0a44664ee74e47864736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xA6 0x26 0xB6 0xA9 0x2C PUSH29 0x7B028B39140A0CEBDADE04ABA078771494F0A44664EE74E47864736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"8272:1092:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8830:140;;;:::i;:::-;;8616:79;8654:7;8681:6;8616:79;;;-1:-1:-1;;;;;8681:6:0;;;160:51:1;;8616:79:0;;;;;148:2:1;8616:79:0;;;8978:109;;;;;;:::i;:::-;;:::i;8830:140::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;715:2:1;8735:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;8735:67:0;;;;;;;;;8929:1:::1;8913:6:::0;;8892:40:::1;::::0;-1:-1:-1;;;;;8913:6:0;;::::1;::::0;8892:40:::1;::::0;8929:1;;8892:40:::1;8960:1;8943:19:::0;;-1:-1:-1;;;;;;8943:19:0::1;::::0;;8830:140::o;8978:109::-;8743:6;;-1:-1:-1;;;;;8743:6:0;1332:10;8743:22;8735:67;;;;-1:-1:-1;;;8735:67:0;;715:2:1;8735:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;8735:67:0;513:356:1;8735:67:0;9051:28:::1;9070:8;9051:18;:28::i;:::-;8978:109:::0;:::o;9095:266::-;-1:-1:-1;;;;;9183:22:0;;9161:110;;;;-1:-1:-1;;;9161:110:0;;1076:2:1;9161:110:0;;;1058:21:1;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:1;;;1198:36;1251:19;;9161:110:0;874:402:1;9161:110:0;9308:6;;;9287:38;;-1:-1:-1;;;;;9287:38:0;;;;9308:6;;;9287:38;;;9336:6;:17;;-1:-1:-1;;;;;;9336:17:0;-1:-1:-1;;;;;9336:17:0;;;;;;;;;;9095:266::o;222:286:1:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:1;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:1:o"},"gasEstimates":{"creation":{"codeDepositCost":"139000","executionCost":"25956","totalCost":"164956"},"external":{"owner()":"2292","renounceOwnership()":"30143","transferOwnership(address)":"30416"},"internal":{"_transferOwnership(address)":"infinite"}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint public saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5035000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 4940000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n    }\\r\\n\\r\\n    // -------- Owner Functions ----------\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addToWhitelist(\\r\\n        address[] memory addressesToAdd\\r\\n    ) external onlyOwner {\\r\\n        for (uint i = 0; i < addressesToAdd.length; i++) {\\r\\n            whitelistCheck[addressesToAdd[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // ---------- owner functions end ----------------\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (\\r\\n            saleIndex == 2 &&\\r\\n            (publicSaleTotalSaled + _ethAmount) > publicSaleHardcap\\r\\n        ) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev buy token from eth\\r\\n     * @dev on private sale 0.01 - 10 eth for only whitelist addresses\\r\\n     * @dev on private sale Check for hardcap\\r\\n     */\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n            require(\\r\\n                privateSaleHardcap >= (privateSaleTotalSaled + msg.value),\\r\\n                \\\"Cannot buy this amount\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd813197483671920c4137d834a87f4ed083ba47c1c8b19d7806d37f883facbd0\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":418,"contract":"contracts/IDO.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"SafeMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220017d0f61c64cc21410320e5199945407cfb045d641664f269f25eb7662948ae564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH30 0xF61C64CC21410320E5199945407CFB045D641664F269F25EB7662948AE5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1590:6636:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1590:6636:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220017d0f61c64cc21410320e5199945407cfb045d641664f269f25eb7662948ae564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH30 0xF61C64CC21410320E5199945407CFB045D641664F269F25EB7662948AE5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1590:6636:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDO.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IDO.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    function _msgSender() internal view returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryAdd(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            uint256 c = a + b;\\r\\n            if (c < a) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function trySub(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b > a) return (false, 0);\\r\\n            return (true, a - b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMul(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n            // benefit is lost if 'b' is also tested.\\r\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n            if (a == 0) return (true, 0);\\r\\n            uint256 c = a * b;\\r\\n            if (c / a != b) return (false, 0);\\r\\n            return (true, c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryDiv(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a / b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function tryMod(\\r\\n        uint256 a,\\r\\n        uint256 b\\r\\n    ) internal pure returns (bool, uint256) {\\r\\n        unchecked {\\r\\n            if (b == 0) return (false, 0);\\r\\n            return (true, a % b);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b <= a, errorMessage);\\r\\n            return a - b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a / b;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * reverting with custom message when dividing by zero.\\r\\n     *\\r\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\r\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        unchecked {\\r\\n            require(b > 0, errorMessage);\\r\\n            return a % b;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Claimable is Ownable {\\r\\n    // 0: Pending 1: private sale 2: public sale 3 : stop sale\\r\\n    uint public saleIndex = 0;\\r\\n\\r\\n    /*\\r\\n     * @dev stop sale\\r\\n     */\\r\\n    function stopSale() external onlyOwner {\\r\\n        saleIndex = 3;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw reward token or usdt\\r\\n     * @param tokenAddress : Token address\\r\\n     */\\r\\n    function claimToken(\\r\\n        address tokenAddress,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(owner(), amount);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev withdraw ETH\\r\\n     */\\r\\n    function claimETH(uint256 amount) external onlyOwner {\\r\\n        (bool sent, ) = owner().call{value: amount}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract IDO is Claimable {\\r\\n    using SafeMath for uint256;\\r\\n    event Buy(address to, uint256 amount);\\r\\n    event Claim(address to, uint256 amount);\\r\\n    mapping(address => bool) whitelistCheck; //Check if address is in whitelist\\r\\n    // private sale hardcap 53 eth\\r\\n    // 0.01 eth to 10eth\\r\\n    uint256 privateSaleHardcap = 53 * 1e18;\\r\\n    uint256 minETHAmount = 1e16;\\r\\n    uint256 maxETHAmount = 1e19;\\r\\n\\r\\n    // public sale hardcap 65 eth\\r\\n    uint256 publicSaleHardcap = 65 * 1e18;\\r\\n\\r\\n    // token price 1 token   = tokenPrice ETH\\r\\n    uint256 tokenPrice;\\r\\n\\r\\n    uint256 public privateSaleTotalSaled = 0;\\r\\n    uint256 public privateSaleAllocation = 5035000 * 1e6;\\r\\n    uint256 public publicSaleTotalSaled = 0;\\r\\n    uint256 public publicSaleAllocation = 4940000 * 1e6;\\r\\n\\r\\n    address rewardAddress;\\r\\n\\r\\n    mapping(address => uint256) public userRewards;\\r\\n    mapping(address => uint256) public userDeposited;\\r\\n\\r\\n    constructor(address _rewardAddress) {\\r\\n        // 1 token  = 53e18/5000000 * 1e6 =  10,600,000 wei\\r\\n        tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        rewardAddress = _rewardAddress;\\r\\n    }\\r\\n\\r\\n    // -------- Owner Functions ----------\\r\\n\\r\\n    /*\\r\\n     * @dev reset token price\\r\\n     * @Param _price: set price with\\r\\n     */\\r\\n    function resetPrice(uint256 _price) public onlyOwner {\\r\\n        tokenPrice = _price;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev start sale\\r\\n     * @dev 1: private sale,2:public sale\\r\\n     * @param _saleIndex : sale index\\r\\n     */\\r\\n    function startSale(uint _saleIndex) external onlyOwner {\\r\\n        saleIndex = _saleIndex;\\r\\n        if (saleIndex == 1) {\\r\\n            tokenPrice = privateSaleHardcap.div(privateSaleAllocation);\\r\\n        } else if (saleIndex == 2) {\\r\\n            tokenPrice = publicSaleHardcap.div(publicSaleAllocation);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addToWhitelist(\\r\\n        address[] memory addressesToAdd\\r\\n    ) external onlyOwner {\\r\\n        for (uint i = 0; i < addressesToAdd.length; i++) {\\r\\n            whitelistCheck[addressesToAdd[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // ---------- owner functions end ----------------\\r\\n\\r\\n    /*\\r\\n     * @dev calcuate token admoutn from eth\\r\\n     * @Param _ethAmount: eth amount\\r\\n     */\\r\\n    function calcTokenAmount(\\r\\n        uint256 _ethAmount\\r\\n    ) public returns (uint256 amount) {\\r\\n        // calculate price for only public sale\\r\\n        if (\\r\\n            saleIndex == 2 &&\\r\\n            (publicSaleTotalSaled + _ethAmount) > publicSaleHardcap\\r\\n        ) {\\r\\n            tokenPrice = (publicSaleTotalSaled + _ethAmount).div(\\r\\n                publicSaleAllocation\\r\\n            );\\r\\n            resetPrice(tokenPrice);\\r\\n        }\\r\\n        amount = (_ethAmount).div(tokenPrice);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @dev buy token from eth\\r\\n     * @dev on private sale 0.01 - 10 eth for only whitelist addresses\\r\\n     * @dev on private sale Check for hardcap\\r\\n     */\\r\\n    function buy() public payable {\\r\\n        require(saleIndex > 0 && saleIndex < 3, \\\"Not allowed to buy now.\\\");\\r\\n        if (saleIndex == 1) {\\r\\n            require(\\r\\n                maxETHAmount >= (userDeposited[_msgSender()] + msg.value) &&\\r\\n                    (userDeposited[_msgSender()] + msg.value) >= minETHAmount &&\\r\\n                    whitelistCheck[msg.sender],\\r\\n                \\\"Amount is allowed 0.01 eth to 10 eth for only listed address.\\\"\\r\\n            );\\r\\n            require(\\r\\n                privateSaleHardcap >= (privateSaleTotalSaled + msg.value),\\r\\n                \\\"Cannot buy this amount\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 amount = calcTokenAmount(msg.value);\\r\\n        if (saleIndex == 1) {\\r\\n            privateSaleTotalSaled += msg.value;\\r\\n        } else {\\r\\n            publicSaleTotalSaled += msg.value;\\r\\n        }\\r\\n        (bool sent, ) = owner().call{value: msg.value}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send Ether\\\");\\r\\n        userRewards[_msgSender()] += amount;\\r\\n        userDeposited[_msgSender()] += msg.value;\\r\\n    }\\r\\n\\r\\n    function claimRewardToken() public {\\r\\n        require(userRewards[_msgSender()] >= 0, \\\"Please buy token.\\\");\\r\\n        IERC20(rewardAddress).transfer(msg.sender, userRewards[_msgSender()]);\\r\\n        userRewards[_msgSender()] = 0;\\r\\n        emit Claim(msg.sender, userRewards[_msgSender()]);\\r\\n    }\\r\\n\\r\\n    function getClaimAmount(\\r\\n        address userAddress\\r\\n    ) public view returns (uint256 claimAmount) {\\r\\n        claimAmount = userRewards[userAddress];\\r\\n    }\\r\\n\\r\\n    function getPrice() public view returns (uint256 price) {\\r\\n        price = tokenPrice;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        buy();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd813197483671920c4137d834a87f4ed083ba47c1c8b19d7806d37f883facbd0\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}